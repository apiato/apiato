name: Tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:

permissions:
  contents: read

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: nelonoel/branch-name@v1.0.1
      - id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@v2.0.1
        with:
          filter: '[?runOn==`${{ env.BRANCH_NAME }}` || runOn==`${{ github.event.pull_request.base.ref }}` || runOn==`always`]'
  tests:
    needs: matrix_prep
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: true
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    name: PHP ${{ matrix.php_version }}
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install npm dependencies
        run: npm install

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: xdebug
          tools: ${{ matrix.php_unit_version }}

      - name: Setup Composer token
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      # If you encounter an error during Laravel package discovery, remember this:
      # Composer doesn't have access to env variables at this stage,
      # Therefore, it uses the default value for all env variables.
      # To fix this, we need to copy the .env.ci file to .env before running composer install.
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.ci .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
