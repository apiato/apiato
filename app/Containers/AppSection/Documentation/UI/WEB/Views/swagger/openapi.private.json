{
    "openapi": "3.0.2",
    "info": {
        "title": "New Praisecharts API",
        "description": "<details><summary>General Info</summary>  \n## Usage Overview\n\nHere are some information that should help you understand the basic usage of our RESTful API. \nIncluding info about authenticating users, making requests, responses, potential errors, rate limiting, pagination, query parameters and more.\n\n## Headers\n\nCertain API calls require you to send data in a particular format as part of the API call. \nBy default, all API calls expect input in `JSON` format, however, you need to inform the server that you are sending a JSON-formatted payload.\nAnd to do that you must include the `Accept => application/json` HTTP header with every call.\n\n\n| Header        | Value Sample                        | When to send it                                                              |\n|---------------|-------------------------------------|------------------------------------------------------------------------------|\n| Accept        | `application/json`                  | MUST be sent with every endpoint.                                            |\n| Content-Type  | `application/x-www-form-urlencoded` | MUST be sent when passing Data.                                              |\n| Authorization | `Bearer {Access-Token-Here}`        | MUST be sent whenever the endpoint requires (Authenticated User).            |\n\n## Rate limiting\n\nAll REST API requests are throttled to prevent abuse and ensure stability. \nThe exact number of calls that your application can make per day varies based on the type of request you are making.\n\nThe rate limit window is `1` minutes per endpoint, with most individual calls allowing for `100` requests in each window.\n\n*In other words, each user is allowed to make `100` calls per endpoint every `1` minutes. (For each unique access token).*\n\nFor how many hits you can perform on an endpoint, you can always check the header:\n\n```\nX-RateLimit-Limit → 30\nX-RateLimit-Remaining → 29\n```\n\n## Tokens\n\nThe Access Token lives for `1 days, 0 hours, 0 minutes and 0 seconds`. (equivalent to `1440` minutes).\nWhile the Refresh Token lives for `30 days, 0 hours, 0 minutes and 0 seconds`. (equivalent to `43200` minutes).\n\n*You will need to re-authenticate the user when the token expires.*\n\n## Pagination\n\nBy default, all fetch requests return the first `10` items in the list. Check the **Query Parameters** for how to control the pagination.\n\n### Limit\n\nThe `?limit=` parameter can be applied to define, how many records should be returned by the endpoint (see also `Pagination`!).\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?limit=100\n```\n\nThe above example returns 100 resources. \n\nThe `limit` and `page` query parameters can be combined in order to get the next 100 resources:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?limit=100&page=2\n```\n\nYou can skip the pagination limit to get all the data, by adding `?limit=0`, this will only work if 'skip pagination' is enabled on the server.\n\n## Responses\n\nUnless otherwise specified, all API endpoints will return the information that you request in the JSON data format.\n\n#### Standard Response Format\n\n```json\n{\n  \"data\": {\n    \"object\": \"Role\",\n    \"id\": \"owpmaymq\",\n    \"name\": \"admin\",\n    \"description\": \"Administrator\",\n    \"display_name\": null,\n    \"permissions\": {\n      \"data\": [\n        {\n          \"object\": \"Permission\",\n          \"id\": \"wkxmdazl\",\n          \"name\": \"update-users\",\n          \"description\": \"Update a User.\",\n          \"display_name\": null\n        },\n        {\n          \"object\": \"Permission\",\n          \"id\": \"qrvzpjzb\",\n          \"name\": \"delete-users\",\n          \"description\": \"Delete a User.\",\n          \"display_name\": null\n        }\n      ]\n    }\n  }\n}\n```\n\n#### Header\n\nHeader Response:\n\n```\nContent-Type → application/json\nDate → Thu, 14 Feb 2014 22:33:55 GMT\nETag → \"9c83bf4cf0d09c34782572727281b85879dd4ff6\"\nServer → nginx\nTransfer-Encoding → chunked\nX-Powered-By → PHP/7.0.9\nX-RateLimit-Limit → 100\nX-RateLimit-Remaining → 99\n```\n\n## Query Parameters\n\nQuery parameters are optional, you can apply them to some endpoints whenever you need them.\n\n### Ordering\n\nThe `?orderBy=` parameter can be applied to any **`GET`** HTTP request responsible for ordering the listing of the records by a field.\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?orderBy=created_at\n```\n\n### Sorting\n\nThe `?sortedBy=` parameter is usually used with the `orderBy` parameter.\n\nBy default, the `orderBy` sorts the data in **ascending** order, if you want the data sorted in **descending** order, you can add `&sortedBy=desc`.\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?orderBy=name&sortedBy=desc\n```\n\nOrder By Accepts:\n\n- `asc` for Ascending.\n- `desc` for Descending.\n\n### Searching\n\nIf the [RequestCriteria](http://apiato.io/docs/core-features/query-parameters#using-the-request-criteria)\nis enabled on a route then the `?search=` parameter can be applied to **`GET`** HTTP requests on that specific route.\n\n**Usage:**\n\n#### Search any field:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=keyword here\n```\n\n> Space should be replaced with `%20` (search=keyword%20here).\n\n#### Search any field for multiple keywords:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=first keyword;second keyword\n```\n\n#### Search in a specific field:\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=field:keyword here\n```\n\n#### Search in specific fields for multiple keywords: \n```\nhttp://newapi.pc.localhost/v1/endpoint?search=field1:first field keyword;field2:second field keyword\n```\n\n#### Define query condition:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=field:keyword&searchFields=name:like\n```\n\nAvailable Conditions: \n\n- `like`: string like the field. (SQL query `%keyword%`).\n- `=`: string exact match.\n\n#### Define query condition for multiple fields:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=field1:first keyword;field2:second keyword&searchFields=field1:like;field2:=;\n```\n\n#### Search Join:\nBy default, search makes its queries using the OR comparison operator for each query parameter.\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=age:17;email:john@gmail.com\n```\n\nThe above example will execute the following query:\n\n```sql\nSELECT * FROM users WHERE age = 17 OR email = 'john@gmail.com';\n```\nIn order for it to query using the AND, pass the `searchJoin` parameter as shown below:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?search=age:17;email:john@gmail.com&searchJoin=and\n```\n\n### Filtering\n\nThe `?filter=` parameter can be applied to any HTTP request. And is used to control the response size, by defining what data you want back in the response.\n\nReturn only ID and Status from the Model:\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?filter=id;status\n```\n\nExample Response, including only id and status:\n\n```json\n{\n  \"data\": [\n    {\n      \"id\": \"0one37vjk49rp5ym\",\n      \"status\": \"approved\",\n      \"products\": {\n        \"data\": [\n          {\n            \"id\": \"bmo7y84xpgeza06k\",\n            \"status\": \"pending\"\n          },\n          {\n            \"id\": \"o0wzxbg0q4k7jp9d\",\n            \"status\": \"fulfilled\"\n          }\n        ]\n      },\n      \"recipients\": {\n        \"data\": [\n          {\n            \"id\": \"r6lbekg8rv5ozyad\"\n          }\n        ]\n      },\n      \"store\": {\n        \"data\": {\n          \"id\": \"r6lbekg8rv5ozyad\"\n        }\n      }\n    }\n  ]\n}\n```\n\n### Paginating\n\nThe `?page=` parameter can be applied to any **`GET`** HTTP request responsible for listing records (mainly for Paginated data).\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?page=200\n```\n\n*The pagination object is always returned in the **meta** when pagination is available on the endpoint.*\n\n```json\n  \"data\": [...],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 2000,\n      \"count\": 30,\n      \"per_page\": 30,\n      \"current_page\": 22,\n      \"total_pages\": 1111,\n      \"links\": {\n        \"previous\": \"http://http://newapi.pc.localhost/v1/endpoint?page=21\"\n      }\n    }\n  }\n```\n\n### Relationships\n\nThe `?include=` parameter can be used with any endpoint, only if it supports it. \n\nHow to use it: let's say there's a Driver object and Car object. And there's an endpoint `/cars` that returns all the cars objects. \nThe include allows getting the cars with their drivers `/cars?include=drivers`. \n\nHowever, for this parameter to work, the endpoint `/cars` should clearly define that it\naccepts `driver` as relationship (in the **Available Relationships** section).\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?include=relationship\n```\n\nEvery response contains an `include` in its `meta`  as follow:\n\n```\n\"meta\":{\n  \"include\":[\n     \"relationship-1\",\n     \"relationship-2\",\n  ],\n```\n\n### Caching\n\nSome endpoints store their response data in memory (caching) after querying them for the first time, to speed up the response time.\nThe `?skipCache=` parameter can be used to force skip loading the response data from the server cache and instead get a fresh data from the database upon the request.\n\n```\nhttp://newapi.pc.localhost/v1/endpoint?skipCache=true\n```\n\n## Requests\n\nCalling unprotected endpoint example:\n\n```shell\ncurl -X POST -H \"Accept: application/json\" -H \"Content-Type: application/x-www-form-urlencoded; -F \"email=admin@praisecharts.com\" -F \"password=admin\" -F \"=\" \"http://http://newapi.pc.localhost/v2/register\"\n```\n\nCalling protected endpoint (passing Bearer Token) example:\n\n```shell\ncurl -X GET -H \"Accept: application/json\" -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" -H \"http://http://newapi.pc.localhost/v1/users\"\n```\n\n</details>",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://newapi.pc.localhost",
            "description": "Main server"
        }
    ],
    "paths": {
        "/v3/abuse-rule": {
            "post": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Create Abuse Rule",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_type": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "trial_only": {
                                        "description": "required|boolean",
                                        "type": "boolean"
                                    },
                                    "days_subscribed": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "action": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "action_limit": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "time_frame_relative_to": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "time_frame_length": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "consequence": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "consequence_expires_unit": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "required|string",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_type": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "trial_only": {
                                        "description": "required|boolean",
                                        "type": "boolean"
                                    },
                                    "days_subscribed": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "action": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "action_limit": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "time_frame_relative_to": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "time_frame_length": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "consequence": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "consequence_expires_unit": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "required|string",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/abuse-rules/{id}": {
            "delete": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Delete Abuse Rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Get Abuse Rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Update Abuse Rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_type": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "trial_only": {
                                        "description": "required|boolean",
                                        "type": "boolean"
                                    },
                                    "days_subscribed": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "action": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "action_limit": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "time_frame_relative_to": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "time_frame_length": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "consequence": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "consequence_expires_unit": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "required|string",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_type": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "entity_id": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "trial_only": {
                                        "description": "required|boolean",
                                        "type": "boolean"
                                    },
                                    "days_subscribed": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "action": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "action_limit": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "time_frame_relative_to": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "time_frame_length": {
                                        "description": "required|integer",
                                        "type": "integer"
                                    },
                                    "consequence": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "consequence_expires_unit": {
                                        "description": "required|string",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "required|string",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/abuse-history": {
            "get": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Index Abuse History",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "library_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/abuse-rules": {
            "get": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Index Abuse Rules",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/abuse-violation": {
            "delete": {
                "tags": [
                    "Abuse"
                ],
                "summary": "Remove Abuse Violation",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "description": "The ID of the library",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "description": "The ID of the user",
                                        "type": "string"
                                    },
                                    "abuse_rule_id": {
                                        "description": "The ID of the abuse rule",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "description": "The ID of the library",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "description": "The ID of the user",
                                        "type": "string"
                                    },
                                    "abuse_rule_id": {
                                        "description": "The ID of the abuse rule",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/acct-payees": {
            "post": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Create Acct Payee",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AcctPayeeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcctPayeeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Index Acct Payees",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "show hidden",
                        "required": false,
                        "schema": {
                            "enum": [
                                "1",
                                "0"
                            ]
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/acct-payees-stores": {
            "post": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Create Acct Payee To Stores",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Delete Acct Payee To Stores",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/acct-payees/{id}": {
            "delete": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Delete Acct Payee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Get Acct Payee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "AcctPayee"
                ],
                "summary": "Update Acct Payee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AcctPayeeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcctPayeeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/address": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Create Address",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "CreateAddress",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Joe"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Schmoe"
                                    },
                                    "organization": {
                                        "type": "string",
                                        "example": "Bubba Gump Co"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "1000 Universal Studios Blvd"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Universal City"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "91608"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "someone300000@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "18187534867"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "shipping"
                                    },
                                    "default": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Joe"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Schmoe"
                                        },
                                        "organization": {
                                            "type": "string",
                                            "example": "Bubba Gump Co"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "1000 Universal Studios Blvd"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Universal City"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "CA"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "91608"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "United States"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "someone300000@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "18187534867"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "shipping"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/address/{id}": {
            "delete": {
                "tags": [
                    "Address"
                ],
                "summary": "Delete Address",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "DeleteAddress"
                },
                "responses": {
                    "200": {
                        "description": "Address 1 deleted.",
                        "content": {
                            "text/plain": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get Address By Id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Joe"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Schmoe"
                                        },
                                        "organization": {
                                            "type": "string",
                                            "example": "Bubba Gump Co"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "1000 Universal Studios Blvd"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Universal City"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "CA"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "91608"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "United States"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "someone300000@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "18187534867"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "shipping"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Address"
                ],
                "summary": "Update Address",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "UpdateAddress",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Joe"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Schmoe"
                                    },
                                    "organization": {
                                        "type": "string",
                                        "example": "Bubba Gump Co"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "1000 Universal Studios Blvd"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Universal City"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": "91608"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United States"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "someone300000@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "18187534867"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "shipping"
                                    },
                                    "default": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Joe"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Schmoe"
                                        },
                                        "organization": {
                                            "type": "string",
                                            "example": "Bubba Gump Co"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "1000 Universal Studios Blvd"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Universal City"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "CA"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "91608"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "United States"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "someone300000@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "18187534867"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "shipping"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/addresses": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Index Addresses",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Joe"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Schmoe"
                                        },
                                        "organization": {
                                            "type": "string",
                                            "example": "Bubba Gump Co"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "1000 Universal Studios Blvd"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Universal City"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "CA"
                                        },
                                        "zip": {
                                            "type": "string",
                                            "example": "91608"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "United States"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "someone300000@gmail.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "18187534867"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "shipping"
                                        },
                                        "default": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/admin/job-count": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Job Count",
                "responses": {
                    "200": {
                        "description": "A count",
                        "content": {
                            "text/plain": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/admin-jobs/{job_id}": {
            "get": {
                "tags": [
                    "AdminJob"
                ],
                "summary": "Get Admin Job",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin-job/load-files": {
            "get": {
                "tags": [
                    "AdminJob"
                ],
                "summary": "Get Admin Job Load Files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin-jobs": {
            "get": {
                "tags": [
                    "AdminJob"
                ],
                "summary": "Index Admin Jobs",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "job_type",
                        "in": "query",
                        "description": "Job Type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "newfiles",
                                "findproductfiles",
                                "loadchordpro",
                                "albumimages",
                                "exportchordpropdf",
                                "createimages",
                                "parseparts",
                                "multitrackparsekeys",
                                "compile_catalog_items",
                                "roll_catalog_live"
                            ]
                        },
                        "example": "asc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin-job/reset": {
            "get": {
                "tags": [
                    "AdminJob"
                ],
                "summary": "Reset Admin Jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin-users/{user_id}": {
            "get": {
                "tags": [
                    "AdminUser"
                ],
                "summary": "Get Admin User",
                "description": "Get Admin User by user_id",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Parameter description",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin-users": {
            "get": {
                "tags": [
                    "AdminUser"
                ],
                "summary": "Get Admin Users",
                "description": "Get all Admin Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/albums": {
            "post": {
                "tags": [
                    "Album"
                ],
                "summary": "Create a new album",
                "description": "Create a new album",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlbumSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlbumSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Album"
                ],
                "summary": "Get all albums.",
                "description": "Get all albums.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artist_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/album-entries": {
            "post": {
                "tags": [
                    "Album"
                ],
                "summary": "Create a new album entry",
                "description": "Create a new album entry",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlbumEntrySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAlbumEntrySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/albums/{id}": {
            "delete": {
                "tags": [
                    "Album"
                ],
                "summary": "Delete an album",
                "description": "Delete an album",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete an album by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/album-entries/{album_id}/{catalog_item_id}": {
            "delete": {
                "tags": [
                    "Album"
                ],
                "summary": "Delete an album entry",
                "description": "Delete an album entry",
                "parameters": [
                    {
                        "name": "album_id",
                        "in": "path",
                        "description": "delete an album entry by album_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "description": "delete an album entry by catalog_item_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/albums/{album_id}": {
            "get": {
                "tags": [
                    "Album"
                ],
                "summary": "Get an album.",
                "description": "Get an album by album_id",
                "parameters": [
                    {
                        "name": "album_id",
                        "in": "path",
                        "description": "get an album by album_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/albums/update/{album_id}": {
            "post": {
                "tags": [
                    "Album"
                ],
                "summary": "Update an existing album",
                "description": "Update an existing album",
                "parameters": [
                    {
                        "name": "album_id",
                        "in": "path",
                        "description": "update an album by album_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAlbumSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAlbumSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangements": {
            "post": {
                "tags": [
                    "Arrangement"
                ],
                "summary": "Create new arrangement",
                "description": "Create new arrangement",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Revival Fire Fall"
                                    },
                                    "tune": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "As we lift up Your name"
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_as_new": {
                                        "type": "string",
                                        "example": "1969-12-31"
                                    },
                                    "copyright": {
                                        "type": "string",
                                        "example": "1996 Integrity's Hosanna! Music"
                                    },
                                    "meter": {
                                        "type": "string",
                                        "example": "4/4"
                                    },
                                    "old_song_id": {
                                        "type": "integer",
                                        "example": 221
                                    },
                                    "bpm": {
                                        "type": "integer",
                                        "example": 72
                                    },
                                    "pd_id": {
                                        "type": "integer",
                                        "example": 72
                                    },
                                    "foreign_ccli": {
                                        "type": "integer",
                                        "example": "abc123"
                                    },
                                    "arrangement_id_overide": {
                                        "type": "integer",
                                        "example": 221
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Revival Fire Fall"
                                    },
                                    "tune": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "first_line": {
                                        "type": "string",
                                        "example": "As we lift up Your name"
                                    },
                                    "available": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_as_new": {
                                        "type": "string",
                                        "example": "1969-12-31"
                                    },
                                    "copyright": {
                                        "type": "string",
                                        "example": "1996 Integrity's Hosanna! Music"
                                    },
                                    "meter": {
                                        "type": "string",
                                        "example": "4/4"
                                    },
                                    "old_song_id": {
                                        "type": "integer",
                                        "example": 221
                                    },
                                    "bpm": {
                                        "type": "integer",
                                        "example": 72
                                    },
                                    "pd_id": {
                                        "type": "integer",
                                        "example": 72
                                    },
                                    "foreign_ccli": {
                                        "type": "integer",
                                        "example": "abc123"
                                    },
                                    "arrangement_id_overide": {
                                        "type": "integer",
                                        "example": 221
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Arrangement"
                ],
                "summary": "Get all arrangements",
                "description": "Get all arrangements",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "arranger_ids",
                        "in": "query",
                        "description": "Arranger ids",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "arranger_ids",
                        "in": "query",
                        "description": "Arranger Ids",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "author_ids",
                        "in": "query",
                        "description": "Author Ids",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "Publisher Ids",
                        "in": "query",
                        "description": "Publisher Ids",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/arrangements/{arrangement_id}": {
            "get": {
                "tags": [
                    "Arrangement"
                ],
                "summary": "Get arrangement by id",
                "description": "Get arrangement by id",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "get arrangement by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "tags": [
                    "Arrangement"
                ],
                "summary": "Update an existing arrangement.",
                "description": "Update an existing arrangement through the given id.",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "update arrangement through the given id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrangementSchemas"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrangementSchemas"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-prod-arrangements/{arrangement_id}": {
            "get": {
                "tags": [
                    "Arrangement"
                ],
                "summary": "Get catalog prod arrangement by id",
                "description": "Get catalog prod arrangement by id",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "get catalog prod arrangement by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/arrangement-purchases/{id}": {
            "get": {
                "tags": [
                    "ArrangementPurchase"
                ],
                "summary": "Get arrangement purchase by id.",
                "description": "Get arrangement purchase by id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get arrangement purchase by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-purchases": {
            "get": {
                "tags": [
                    "ArrangementPurchase"
                ],
                "summary": "Get arrangement purchases.",
                "description": "Get arrangement purchases.",
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "membership_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-purchase/migrate": {
            "post": {
                "tags": [
                    "ArrangementPurchase"
                ],
                "summary": "Migrate user arrangement purchases",
                "description": "Migrate user arrangement purchases",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "MemberIDs": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "MemberIDs": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-purchase/{id}/reconcile-commissions": {
            "post": {
                "tags": [
                    "ArrangementPurchase"
                ],
                "summary": "Reconcile arrangement purchase commissions",
                "description": "Reconcile arrangement purchase commissions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reconcile arrangement purchase commissions by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-purchase/refund": {
            "post": {
                "tags": [
                    "ArrangementPurchase"
                ],
                "summary": "Refund arrangement purchase",
                "description": "Refund arrangement purchase",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundArrangementPurchaseSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefundArrangementPurchaseSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-arrangers": {
            "post": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Create new ArrToArranger",
                "description": "Create new ArrToArranger",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToArrangerSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToArrangerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangers": {
            "post": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Create new Arranger",
                "description": "Create new Arranger",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrangerSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrangerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Get all Arrangers",
                "description": "Get all Arrangers",
                "parameters": [
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/arrangement-arrangers/{id}": {
            "delete": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Delete Arr To Arranger",
                "description": "Delete Arr To Arranger by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete arranger by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Update an existing Arr to Arranger",
                "description": "Update an existing Arr to Arranger",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update Arr to Arranger by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToArrangerSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToArrangerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangers/{arranger_id}": {
            "delete": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Delete Arranger",
                "description": "Delete Arranger by arranger_id",
                "parameters": [
                    {
                        "name": "arranger_id",
                        "in": "path",
                        "description": "delete arranger by arranger_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Get Arranger",
                "description": "Get Arranger by id",
                "parameters": [
                    {
                        "name": "arranger_id",
                        "in": "path",
                        "description": "get arranger by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "tags": [
                    "Arranger"
                ],
                "summary": "Update an existing Arranger.",
                "description": "Update an existing Arranger",
                "parameters": [
                    {
                        "name": "arranger_id",
                        "in": "path",
                        "description": "update Arranger by arranger_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrangerSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrangerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-artists": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Create Arr To Artist",
                "requestBody": {
                    "description": "CreateArrToArtist",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArrToArtist"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "arrangement_id": {
                                            "type": "integer",
                                            "example": 1234
                                        },
                                        "order": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/artists": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Create Artist",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Scooby"
                                    },
                                    "hide": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                    },
                                    "profile_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "cms_name": {
                                        "type": "string",
                                        "example": "Doo"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Scooby"
                                    },
                                    "hide": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                    },
                                    "profile_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "cms_name": {
                                        "type": "string",
                                        "example": "Doo"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Scooby"
                                        },
                                        "hide": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "profile_id": {
                                            "type": "string",
                                            "example": 2
                                        },
                                        "cms_name": {
                                            "type": "string",
                                            "example": "Doo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Index Artists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "Show hidden",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                0
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Scooby"
                                        },
                                        "hide": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "profile_id": {
                                            "type": "string",
                                            "example": 2
                                        },
                                        "cms_name": {
                                            "type": "string",
                                            "example": "Doo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/arrangement-artists/{id}": {
            "delete": {
                "tags": [
                    "Artist"
                ],
                "summary": "Delete Arr To Artist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "DeleteArrToArtist",
                    "content": {
                        "text/plain": []
                    }
                },
                "responses": {
                    "200": {
                        "description": "Delete arr to artist.",
                        "content": {
                            "text/plain": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update Arr To Artist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "UpdateArrToArtist",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ArtistTransformer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "arrangement_id": {
                                            "type": "integer",
                                            "example": 1234
                                        },
                                        "order": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/artists/{artist_id}": {
            "delete": {
                "tags": [
                    "Artist"
                ],
                "summary": "Delete Artist",
                "parameters": [
                    {
                        "name": "artist_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Delete Artist",
                    "content": {
                        "text/plain": []
                    }
                },
                "responses": {
                    "200": {
                        "description": "Delete artist.",
                        "content": {
                            "text/plain": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update Artist",
                "parameters": [
                    {
                        "name": "artist_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "UpdateArtist",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Artist"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Scooby"
                                        },
                                        "hide": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "profile_id": {
                                            "type": "string",
                                            "example": 2
                                        },
                                        "cms_name": {
                                            "type": "string",
                                            "example": "Doo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/artists/{id}": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Get Artist",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "artist_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Scooby"
                                        },
                                        "hide": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "image_url": {
                                            "type": "string",
                                            "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                                        },
                                        "profile_id": {
                                            "type": "string",
                                            "example": 2
                                        },
                                        "cms_name": {
                                            "type": "string",
                                            "example": "Doo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/password/forgot": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Forgot Password",
                "description": "Send email with reset password token to user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/authenticate": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Authenticated User",
                "description": "Get the user details of the logged-in user from its access token.",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/UserTransformerIncludesSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/login-as-user/{id}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login As User",
                "description": "Login as user by ID if you are an admin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        },
                                        "tokens": {
                                            "type": "object",
                                            "properties": {
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 315360000
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                                },
                                                "refresh_token": {
                                                    "type": "string",
                                                    "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/clients/web/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login (Password Grant with proxy)",
                "description": "Login Users using their email and password, without client_id and client_secret.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginProxyForWebClientSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginProxyForWebClientSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        },
                                        "tokens": {
                                            "type": "object",
                                            "properties": {
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 315360000
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                                },
                                                "refresh_token": {
                                                    "type": "string",
                                                    "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/login-with-legacy-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with legacy token(s)",
                "description": "Login with a legacy JWT or a user_token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_token": {
                                        "description": "string|nullable",
                                        "type": "string"
                                    },
                                    "access_token": {
                                        "description": "string|nullable",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_token": {
                                        "description": "string|nullable",
                                        "type": "string"
                                    },
                                    "access_token": {
                                        "description": "string|nullable",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        },
                                        "tokens": {
                                            "type": "object",
                                            "properties": {
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 315360000
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                                },
                                                "refresh_token": {
                                                    "type": "string",
                                                    "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "User Logout. (Revoking Access Token)",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token revoked successfully."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/oauth2/grants/password/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login (Password Grant)",
                "description": "Login Users using their email and password using OAuth2 Password Grant flow.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "grant_type",
                                    "username",
                                    "password",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "enum": [
                                            "password"
                                        ],
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "user email",
                                        "type": "string",
                                        "example": "admin@praisecharts.com"
                                    },
                                    "password": {
                                        "format": "password",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "client_id": {
                                        "type": "integer"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "scope": {
                                        "default": "",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "grant_type",
                                    "username",
                                    "password",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "enum": [
                                            "password"
                                        ],
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "user email",
                                        "type": "string",
                                        "example": "admin@praisecharts.com"
                                    },
                                    "password": {
                                        "format": "password",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "client_id": {
                                        "type": "integer"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "scope": {
                                        "default": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 315360000
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/oauth2/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "description": "Refresh Token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2RefreshTokenSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2RefreshTokenSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 315360000
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/oauth2/grants/client-credentials/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login (Client Credential Grant)",
                "description": "Login Users using their client id and client secret using OAuth2 Client Credential Grant flow.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2ClientCredentialsGrantSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2ClientCredentialsGrantSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/clients/web/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token (Proxy)",
                "description": "Get new tokens given a valid refresh token is provided.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshProxyForWebClientSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshProxyForWebClientSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 315360000
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register User",
                "description": "Register a User.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        },
                                        "tokens": {
                                            "type": "object",
                                            "properties": {
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 315360000
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                                },
                                                "refresh_token": {
                                                    "type": "string",
                                                    "example": "ZFDPA1S7H8Wydjkjl+xt+hPGWTagX..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password",
                "description": "Resets password of a user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Verification Email",
                "description": "Send email with verification token to user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SendVerificationEmailSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendVerificationEmailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Accepted",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/arrangement-authors": {
            "post": {
                "tags": [
                    "Author"
                ],
                "summary": "Create Arr To Author",
                "description": "Create Arr To Author",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToAuthorSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToAuthorSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/authors": {
            "post": {
                "tags": [
                    "Author"
                ],
                "summary": "Create Author",
                "description": "Create Author",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAuthorSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAuthorSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Author"
                ],
                "summary": "Get All Authors",
                "description": "Get All Authors",
                "parameters": [
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/copyright-authors": {
            "post": {
                "tags": [
                    "Author"
                ],
                "summary": "Create Copyright to Author",
                "description": "Create Copyright to Author",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToAuthorSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToAuthorSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-authors/{id}": {
            "delete": {
                "tags": [
                    "Author"
                ],
                "summary": "Delete Arrangement Author",
                "description": "Delete Arrangement Author",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete arr to author by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Author"
                ],
                "summary": "Update Arrangement Author",
                "description": "Update Arrangement Author",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update arr to author by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToAuthorSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToAuthorSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/authors/{author_id}": {
            "delete": {
                "tags": [
                    "Author"
                ],
                "summary": "Delete Author",
                "description": "Delete Author",
                "parameters": [
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "delete author by author_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Author"
                ],
                "summary": "Get Author",
                "description": "Get Author by id",
                "parameters": [
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "get author by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "tags": [
                    "Author"
                ],
                "summary": "Update Author",
                "description": "Update Author",
                "parameters": [
                    {
                        "name": "author_id",
                        "in": "path",
                        "description": "update author by author_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAuthorSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAuthorSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyright-authors/{id}": {
            "delete": {
                "tags": [
                    "Author"
                ],
                "summary": "Delete Copyright Author",
                "description": "Delete Copyright Author",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete copyright to author by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/roles/assign": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Assign Roles to User",
                "description": "Assign new roles to user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRolesToUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRolesToUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/permissions/attach": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Attach Permissions to Role",
                "description": "Attach new permissions to role.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachPermissionsToRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachPermissionsToRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/users/{id}/permissions": {
            "patch": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Attach Permissions to User",
                "description": "Attach new permissions to user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachPermissionsToUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachPermissionsToUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Detach Permissions from User",
                "description": "Detach permissions from user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachPermissionsFromUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachPermissionsFromUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get user permissions",
                "description": "Get user permissions.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/roles": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Create Role",
                "description": "Create new role.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get all roles",
                "description": "Get all roles.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/roles/{id}": {
            "delete": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Delete Role",
                "description": "Delete role.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Find Role",
                "description": "Find role by id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/permissions/detach": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Detach Permissions from Role",
                "description": "Detach permissions from role.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachPermissionsFromRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachPermissionsFromRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/permissions/{id}": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Find Permission",
                "description": "Find permission by id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/permissions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get all permissions",
                "description": "Get all permissions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/roles/{id}/permissions": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get role permissions",
                "description": "Get role permissions.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/users/{id}/roles": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get user roles",
                "description": "Get user roles.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/roles/revoke": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Revoke roles from user.",
                "description": "Revoke roles from user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevokeRolesFromUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevokeRolesFromUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/permissions/sync": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Sync permissions on role.",
                "description": "Sync permissions on role.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncPermissionOnRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncPermissionOnRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/roles/sync": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Sync roles on user.",
                "description": "Sync roles on user.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncUserRolesSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncUserRolesSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/cart/item": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create Cart Item",
                "description": "Create Cart Item",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCartItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCartItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "description": "Remove item from cart",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveCartItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveCartItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update a cart item",
                "description": "Update a cart item",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCartItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCartItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cart/quick-buy-details": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get Quick Buy Details",
                "description": "Get Quick Buy Details",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "arrangement_id",
                        "in": "query",
                        "description": "Arrangement ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "arrangement_type",
                        "in": "query",
                        "description": "Arrangement Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "key_id",
                        "in": "query",
                        "description": "key_id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "print_instructions",
                        "in": "query",
                        "description": "key_id",
                        "required": false,
                        "schema": {
                            "enum": [
                                "single_sided_sheets",
                                "double_sided_sheets",
                                "double_sided_booklet"
                            ]
                        },
                        "example": "single_sided_sheets"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "print_on_demand",
                                "digital"
                            ]
                        },
                        "example": "print_on_demand"
                    },
                    {
                        "name": "billing_address_state",
                        "in": "query",
                        "description": "Billing Address State",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "CA"
                    },
                    {
                        "name": "billing_address_country",
                        "in": "query",
                        "description": "Billing Address Country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "US"
                    },
                    {
                        "name": "billing_address_zip",
                        "in": "query",
                        "description": "Billing Address Zip",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "90210"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get Quick Buy Details",
                "description": "Get Quick Buy Details",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "arrangement_id",
                        "in": "query",
                        "description": "Arrangement ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "arrangement_type",
                        "in": "query",
                        "description": "Arrangement Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Quantity",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "key_id",
                        "in": "query",
                        "description": "key_id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "print_instructions",
                        "in": "query",
                        "description": "key_id",
                        "required": false,
                        "schema": {
                            "enum": [
                                "single_sided_sheets",
                                "double_sided_sheets",
                                "double_sided_booklet"
                            ]
                        },
                        "example": "single_sided_sheets"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "print_on_demand",
                                "digital"
                            ]
                        },
                        "example": "print_on_demand"
                    },
                    {
                        "name": "billing_address_state",
                        "in": "query",
                        "description": "Billing Address State",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "CA"
                    },
                    {
                        "name": "billing_address_country",
                        "in": "query",
                        "description": "Billing Address Country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "US"
                    },
                    {
                        "name": "billing_address_zip",
                        "in": "query",
                        "description": "Billing Address Zip",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "90210"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cart/items": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get Cart Items",
                "description": "Get Cart Items",
                "parameters": [
                    {
                        "name": "occupantId",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cart/remove-duplicate-items": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "description": "Remove item from cart",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveCartItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveCartItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cart": {
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update Cart",
                "description": "Update Cart",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shipping_address_id": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "shipping_method_id": {
                                        "type": "string",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shipping_address_id": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "shipping_method_id": {
                                        "type": "string",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_group": {
            "post": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Create a new CatalogGroup.",
                "description": "Create a new CatalogGroup.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogGroupSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogGroupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_group/item": {
            "post": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Create a new catalog group item.",
                "description": "Create a new catalog group item.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogGroupItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogGroupItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_group/{catalog_group_id}": {
            "delete": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Delete a catalog group.",
                "description": "Delete a catalog group.",
                "parameters": [
                    {
                        "name": "catalog_group_id",
                        "in": "path",
                        "description": "delete catalog group by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Get a catalog group.",
                "description": "Get a catalog group.",
                "parameters": [
                    {
                        "name": "catalog_group_id",
                        "in": "path",
                        "description": "get catalog group by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_group/item/{catalog_group_item_id}": {
            "delete": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Delete a catalog group item.",
                "description": "Delete a catalog group item.",
                "parameters": [
                    {
                        "name": "catalog_group_item_id",
                        "in": "path",
                        "description": "delete catalog group item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_groups": {
            "get": {
                "tags": [
                    "CatalogGroup"
                ],
                "summary": "Get all catalog groups.",
                "description": "Get all catalog groups.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item/batch-import": {
            "post": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Batch import catalog items from google sheet",
                "description": "Batch import catalog items from google sheet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/compiled-catalog-item/{id}/compare-to-prod": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Compare compiled catalog item to prod",
                "description": "Compare compiled catalog item to prod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "compare compiled catalog item to prod by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/compile-catalog-items": {
            "post": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Dispatch compile catalog items",
                "description": "Dispatch compile catalog items",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompileCatalogItemsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompileCatalogItemsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-items": {
            "post": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Create a new CatalogItem.",
                "description": "Create a new CatalogItem.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get all catalog items.",
                "description": "Get all catalog items.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "available",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_as_new",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_date",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "copyright_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "artist_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "arranger_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sellable_product_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_title_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-items/{id}": {
            "delete": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Delete a CatalogItem.",
                "description": "Delete a CatalogItem.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get a CatalogItem.",
                "description": "Get a CatalogItem.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Update catalog item",
                "description": "Update catalog item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update catalog item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pc5/elastic/catalog-items/{id}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get a catalog item by id from elastic search",
                "description": "Get a catalog item by id from elastic search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get elastic catalog item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v1.0/catalog/arrangement/{id}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get Arrangement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/compiled-catalog-items/{arrangement_id}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get compiled catalog item",
                "description": "Get compiled catalog item by arrangement id",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "get compiled catalog item by arrangement id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/compiled-catalog-items": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get all compiled catalog items.",
                "description": "Get all compiled catalog items.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-resource-releases": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "List all resource releases",
                "description": "List all resource releases of a catalog item",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pc5/cli/{id}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get CatalogItem PC5",
                "description": "Get CatalogItem PC5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item PC5 by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type_slug",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog-items/{id}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get CatalogItem PC5",
                "description": "Get CatalogItem PC5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item PC5 by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type_slug",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog-items/{id}/product-group/{slug}": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get Catalog Item Product Group",
                "description": "Get Catalog Item Product Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item product group PC5 by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog/credit-packages": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get all credit packages",
                "description": "Get all credit packages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog/recently-viewed": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get recently viewed catalog items.",
                "description": "Get recently viewed catalog items.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog-items/{id}/other-arrangements": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get other arrangements",
                "description": "Get other arrangements",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get other arrangements by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog-items/{id}/other-languages": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get other language catalog items",
                "description": "Get other language catalog items",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get other language catalog items by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog/whats-hot": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get whats hot catalog items.",
                "description": "Get whats hot catalog items.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/pc5/catalog/whats-new": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get whats new catalog items",
                "description": "Get whats new catalog items.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/roll-compiled-catalog-items-live": {
            "post": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Roll compiled catalog items live",
                "description": "Roll compiled catalog items live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1.0/catalog/search": {
            "get": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Get Elastic Profile",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "profile_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-items/image/{id}": {
            "post": {
                "tags": [
                    "CatalogItem"
                ],
                "summary": "Update catalog item image",
                "description": "Update catalog item image",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update catalog item image by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemImageSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemImageSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-publish-queue-elements": {
            "post": {
                "tags": [
                    "CatalogItemPublishQueueElement"
                ],
                "summary": "Create a new Catalog Item Publish Queue Element.",
                "description": "Create a new Catalog Item Publish Queue Element.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemPublishQueueElementSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemPublishQueueElementSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItemPublishQueueElement"
                ],
                "summary": "Get all Catalog Item Publish Queue Elements.",
                "description": "Get all Catalog Item Publish Queue Elements.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-publish-queue-elements/{id}": {
            "get": {
                "tags": [
                    "CatalogItemPublishQueueElement"
                ],
                "summary": "Get a Catalog Item Publish Queue Element.",
                "description": "Get a Catalog Item Publish Queue Element.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item publish queue element by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-relations": {
            "post": {
                "tags": [
                    "CatalogItemRelation"
                ],
                "summary": "Create a new catalog item relation.",
                "description": "Create a new catalog item relation.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemRelationSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemRelationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItemRelation"
                ],
                "summary": "Get all catalog item relations.",
                "description": "Get all catalog item relations.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "origin",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_a_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_b_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-relations/{id}": {
            "delete": {
                "tags": [
                    "CatalogItemRelation"
                ],
                "summary": "Delete a catalog item relation.",
                "description": "Delete a catalog item relation.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog item relation by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItemRelation"
                ],
                "summary": "Get a catalog item relation.",
                "description": "Get a catalog item relation.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item relation by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-titles": {
            "post": {
                "tags": [
                    "CatalogItemTitle"
                ],
                "summary": "Create a new CatalogItemTitle.",
                "description": "Create a new CatalogItemTitle.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemTitleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemTitleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItemTitle"
                ],
                "summary": "Get catalog item titles",
                "description": "Get catalog item titles",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-titles/{id}": {
            "delete": {
                "tags": [
                    "CatalogItemTitle"
                ],
                "summary": "Delete catalog item title",
                "description": "Delete catalog item title by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog item title by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogItemTitle"
                ],
                "summary": "Get catalog item title",
                "description": "Get catalog item title by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item title by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CatalogItemTitle"
                ],
                "summary": "Update a catalog item title.",
                "description": "Update a catalog item title.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update catalog item title by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemTitleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemTitleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-library-access": {
            "post": {
                "tags": [
                    "CatalogLibraryAccess"
                ],
                "summary": "Create catalog item library access",
                "description": "Create catalog item library access",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemLibraryAccessSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemLibraryAccessSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-library-access/{id}": {
            "delete": {
                "tags": [
                    "CatalogLibraryAccess"
                ],
                "summary": "Delete catalog item library access",
                "description": "Delete catalog item library access",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog item library access by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CatalogLibraryAccess"
                ],
                "summary": "Get catalog item library access",
                "description": "Get catalog item library access",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get catalog item library access by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CatalogLibraryAccess"
                ],
                "summary": "Update catalog item library access",
                "description": "Update catalog item library access",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update catalog item library access by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-library-accesses": {
            "get": {
                "tags": [
                    "CatalogLibraryAccess"
                ],
                "summary": "Get all catalog item library access",
                "description": "Get all catalog item library access",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog_product/{id}": {
            "delete": {
                "tags": [
                    "CatalogProduct"
                ],
                "summary": "Delete catalog product",
                "description": "Delete catalog product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog product by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/chordpros/{id}": {
            "get": {
                "tags": [
                    "Chordpro"
                ],
                "summary": "Get a Chordpro",
                "description": "Get a Chordpro by its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get chordpro by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/chordpros/settings/{s_key}": {
            "get": {
                "tags": [
                    "Chordpro"
                ],
                "summary": "Get Chordpro Settings",
                "description": "Get Chordpro Settings",
                "parameters": [
                    {
                        "name": "s_key",
                        "in": "path",
                        "description": "The key to the settings",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "chord_types"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/companies/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get company details",
                "description": "Get company details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get company details by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/content-groups": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Create a new content group",
                "description": "Create a new content group",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentGroupSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentGroupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "List all content groups.",
                "description": "List all content groups.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "get content groups by state",
                        "schema": {
                            "enum": [
                                "draft",
                                "preview",
                                "published"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "get content groups by store id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language_id",
                        "in": "query",
                        "description": "get content groups by language id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-group-items": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Create a new content group item.",
                "description": "Create a new content group item.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentGroupItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentGroupItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-items": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Create a new content item",
                "description": "Create a new content item",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContentItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get all content items",
                "description": "Get all content items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-groups/{id}": {
            "delete": {
                "tags": [
                    "Content"
                ],
                "summary": "Delete content group",
                "description": "Delete content group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete content group by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get a content group.",
                "description": "Get a content group.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get content group by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Content"
                ],
                "summary": "Update existing content group.",
                "description": "Update existing content group.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update content group by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentGroupSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentGroupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-group-items/{id}": {
            "delete": {
                "tags": [
                    "Content"
                ],
                "summary": "Delete Content Group Item",
                "description": "Delete Content Group Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete content group item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Content"
                ],
                "summary": "Update a content group item.",
                "description": "Update a content group item.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update content group item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentGroupItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentGroupItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-items/{id}": {
            "delete": {
                "tags": [
                    "Content"
                ],
                "summary": "Delete Content Item",
                "description": "Delete Content Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete content item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get a content item by its id.",
                "description": "Get a content item by its id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get content item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "elastic",
                        "in": "query",
                        "description": "include elastic data",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Content"
                ],
                "summary": "Update a content item.",
                "description": "Update a content item.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update content item by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContentItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/admin/content-items/name/{name}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get Content Items By Name",
                "description": "Get Content Items By Name",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "get content items by name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "get content items by states",
                        "style": "pipeDelimited",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "draft",
                                    "published",
                                    "archived"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/content-groups/slug/{slug}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get Content Group By Slug",
                "description": "Get Content Group By Slug",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "get content group by slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "preview",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/content-items/name/{name}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get content items by name.",
                "description": "Get content items by name.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "get content item by name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "elastic",
                        "in": "query",
                        "description": "include elastic data",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/content-items/index/parent": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get content items by parent",
                "description": "Get content items by parent",
                "parameters": [
                    {
                        "name": "parent_entity_type",
                        "in": "query",
                        "description": "The type of the parent entity",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_entity_id",
                        "in": "query",
                        "description": "The id of the parent entity",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parent_entity_supplemental_type",
                        "in": "query",
                        "description": "The type of the supplemental parent entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_entity_supplemental_id",
                        "in": "query",
                        "description": "The id of the supplemental parent entity",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "get content items by states",
                        "style": "pipeDelimited",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "draft",
                                    "published",
                                    "archived"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyrights": {
            "post": {
                "tags": [
                    "Copyright"
                ],
                "summary": "Create copyright",
                "description": "Create copyright",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Copyright"
                ],
                "summary": "Get all copyrights",
                "description": "Get all copyrights",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "schema": {
                            "enum": [
                                "text",
                                "music"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "copyright_line",
                        "in": "query",
                        "description": "Copyright line",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ccli",
                        "in": "query",
                        "description": "CCLI number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author_id",
                        "in": "query",
                        "description": "Filter by author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "query",
                        "description": "Filter by publisher",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "theme_id",
                        "in": "query",
                        "description": "Filter by theme",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyrights/{id}": {
            "delete": {
                "tags": [
                    "Copyright"
                ],
                "summary": "Delete copyright",
                "description": "Delete copyright",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete copyright by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Copyright"
                ],
                "summary": "Get copyright",
                "description": "Get copyright",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get copyright by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Copyright"
                ],
                "summary": "Update copyright",
                "description": "Update copyright",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update copyright by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCopyrightSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCopyrightSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-accounting": {
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Create a new cost accounting",
                "description": "Create a new cost accounting",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostAccountingSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostAccountingSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Get all cost accounting",
                "description": "Get all cost accounting",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_group_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-accounting/{id}": {
            "delete": {
                "tags": [
                    "Cost"
                ],
                "summary": "Delete cost accounting",
                "description": "Delete cost accounting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete cost accounting by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Cost"
                ],
                "summary": "Get cost accounting",
                "description": "Get cost accounting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get cost accounting by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cost"
                ],
                "summary": "Update cost accounting",
                "description": "Update cost accounting",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update cost accounting by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostAccountingSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostAccountingSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-accounting/generate": {
            "post": {
                "tags": [
                    "Cost"
                ],
                "summary": "Generate cost accounting records",
                "description": "Generate cost accounting records",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCostAccountingRecordsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCostAccountingRecordsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-rule": {
            "post": {
                "tags": [
                    "CostRule"
                ],
                "summary": "Create a new cost rule",
                "description": "Create a new cost rule",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostRuleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCostRuleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-rules/{id}": {
            "delete": {
                "tags": [
                    "CostRule"
                ],
                "summary": "Delete cost rule",
                "description": "Delete cost rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete cost rule by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CostRule"
                ],
                "summary": "Get cost rule",
                "description": "Get cost rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get cost rule by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CostRule"
                ],
                "summary": "Update cost rule",
                "description": "Update cost rule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update cost rule by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostRuleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCostRuleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/cost-rules": {
            "get": {
                "tags": [
                    "CostRule"
                ],
                "summary": "Get all cost rules",
                "description": "Get all cost rules",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_filter",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_date",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "List all countries",
                "description": "List all countries",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/currencies/{code}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get currency",
                "description": "Get currency",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "get currency by code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/currencies": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get all currencies",
                "description": "Get all currencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/download": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download",
                "parameters": [
                    {
                        "name": "download_token",
                        "in": "query",
                        "description": "Download token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occupantId",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/download": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download",
                "parameters": [
                    {
                        "name": "download_token",
                        "in": "query",
                        "description": "Download token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "occupantId",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/download/admin": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download Admin",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "The CatalogItem's Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 73318
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The CatalogItem's Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "W"
                        }
                    },
                    {
                        "name": "part_ids",
                        "in": "query",
                        "description": "A comma delimited list of part ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "part_codes",
                        "in": "query",
                        "description": "A comma delimited list of part codes to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "W,P,TP3"
                        }
                    },
                    {
                        "name": "key_ids",
                        "in": "query",
                        "description": "A comma delimited list of key ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "capo",
                        "in": "query",
                        "description": "Set the CAPO for the chord pro download",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": 2
                        }
                    },
                    {
                        "name": "download_option",
                        "in": "query",
                        "description": "Download options",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "cc_2col_pdf"
                        }
                    },
                    {
                        "name": "showGuitarChords",
                        "in": "query",
                        "description": "Show guitar cords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedLyrics",
                        "in": "query",
                        "description": "Show repeated lyrics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedChords",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "structure",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "enum": [
                                "structured_zip",
                                "single_pdf"
                            ],
                            "type": "string",
                            "example": "structured_zip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/download-token": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Get Download Token",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "The CatalogItem's Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 73318
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The CatalogItem's Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "W"
                        }
                    },
                    {
                        "name": "part_ids",
                        "in": "query",
                        "description": "A comma delimited list of part ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "part_codes",
                        "in": "query",
                        "description": "A comma delimited list of part codes to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "W,P,TP3"
                        }
                    },
                    {
                        "name": "key_ids",
                        "in": "query",
                        "description": "A comma delimited list of key ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "capo",
                        "in": "query",
                        "description": "Set the CAPO for the chord pro download",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": 2
                        }
                    },
                    {
                        "name": "download_option",
                        "in": "query",
                        "description": "Download options",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "cc_2col_pdf"
                        }
                    },
                    {
                        "name": "showGuitarChords",
                        "in": "query",
                        "description": "Show guitar cords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedLyrics",
                        "in": "query",
                        "description": "Show repeated lyrics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedChords",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "structure",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "enum": [
                                "structured_zip",
                                "single_pdf"
                            ],
                            "type": "string",
                            "example": "structured_zip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1.0/download": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Oauth Download",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "The CatalogItem's Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 73318
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The CatalogItem's Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "W"
                        }
                    },
                    {
                        "name": "part_ids",
                        "in": "query",
                        "description": "A comma delimited list of part ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "part_codes",
                        "in": "query",
                        "description": "A comma delimited list of part codes to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "W,P,TP3"
                        }
                    },
                    {
                        "name": "key_ids",
                        "in": "query",
                        "description": "A comma delimited list of key ids to include",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    },
                    {
                        "name": "capo",
                        "in": "query",
                        "description": "Set the CAPO for the chord pro download",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": 2
                        }
                    },
                    {
                        "name": "download_option",
                        "in": "query",
                        "description": "Download options",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "cc_2col_pdf"
                        }
                    },
                    {
                        "name": "showGuitarChords",
                        "in": "query",
                        "description": "Show guitar cords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedLyrics",
                        "in": "query",
                        "description": "Show repeated lyrics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "showRepeatedChords",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "structure",
                        "in": "query",
                        "description": "Show repeated chords",
                        "required": false,
                        "schema": {
                            "enum": [
                                "structured_zip",
                                "single_pdf"
                            ],
                            "type": "string",
                            "example": "structured_zip"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pco/download/{download_token}/{file_type}/{file_name}": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Pco Download",
                "parameters": [
                    {
                        "name": "download_token",
                        "in": "path",
                        "description": "Ddownload token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_type",
                        "in": "path",
                        "description": "The catalog product file type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_name",
                        "in": "path",
                        "description": "The catalog product file name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/add-all-to-queue": {
            "post": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Add All To Queue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/add-to-queue": {
            "post": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Add Catalog Items To Queue",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            2202,
                                            2449,
                                            2517,
                                            9281
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            2202,
                                            2449,
                                            2517,
                                            9281
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/record": {
            "post": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Create Elastic Search Record",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_id": {
                                        "type": "string",
                                        "example": 55347
                                    },
                                    "entity_type": {
                                        "type": "string",
                                        "example": "CatalogItem"
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "entity_id": {
                                        "type": "string",
                                        "example": 55347
                                    },
                                    "entity_type": {
                                        "type": "string",
                                        "example": "CatalogItem"
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1/elastic/catalog-item/search": {
            "post": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Elastic Catalog Search",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "reckless"
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "reckless"
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/catalog-item/search": {
            "post": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Elastic Catalog Search V2",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "reckless"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "CatalogItem"
                                    },
                                    "exclude_types": {
                                        "type": "array",
                                        "example": [
                                            "Album",
                                            "Profile",
                                            "SongList"
                                        ]
                                    },
                                    "store": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "languages": {
                                        "type": "array",
                                        "example": [
                                            "EN",
                                            "FR",
                                            "KO"
                                        ]
                                    },
                                    "artists": {
                                        "type": "array",
                                        "example": [
                                            "1",
                                            "2",
                                            "3",
                                            "4"
                                        ]
                                    },
                                    "artist_names": {
                                        "type": "array",
                                        "example": [
                                            "Campbell",
                                            "Chris"
                                        ]
                                    },
                                    "authors": {
                                        "type": "array",
                                        "example": [
                                            387,
                                            538,
                                            899
                                        ]
                                    },
                                    "arrangers": {
                                        "type": "array",
                                        "example": [
                                            48,
                                            98
                                        ]
                                    },
                                    "publishers": {
                                        "type": "array",
                                        "example": [
                                            105,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "product_types": {
                                        "type": "array",
                                        "example": [
                                            "sheet_music",
                                            "audio_tracks",
                                            "patches",
                                            "other"
                                        ]
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "product_groups_codes": {
                                        "type": "array",
                                        "example": [
                                            "W",
                                            "F",
                                            "R"
                                        ]
                                    },
                                    "themes": {
                                        "type": "array",
                                        "example": [
                                            "Christmas",
                                            "Easter"
                                        ]
                                    },
                                    "keys": {
                                        "type": "array",
                                        "example": [
                                            "W:A",
                                            "L:Ab",
                                            "W:G#"
                                        ]
                                    },
                                    "order_by": {
                                        "type": "string",
                                        "example": "street_date"
                                    },
                                    "order_direction": {
                                        "type": "string",
                                        "example": "desc"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "from": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "search_lyrics": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "my_library_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "library_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "meter": {
                                        "type": "string",
                                        "example": "4/4"
                                    },
                                    "tempo": {
                                        "type": "string",
                                        "example": "Fast"
                                    },
                                    "download_products": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "term": {
                                        "type": "string",
                                        "example": "reckless"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "CatalogItem"
                                    },
                                    "exclude_types": {
                                        "type": "array",
                                        "example": [
                                            "Album",
                                            "Profile",
                                            "SongList"
                                        ]
                                    },
                                    "store": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "languages": {
                                        "type": "array",
                                        "example": [
                                            "EN",
                                            "FR",
                                            "KO"
                                        ]
                                    },
                                    "artists": {
                                        "type": "array",
                                        "example": [
                                            "1",
                                            "2",
                                            "3",
                                            "4"
                                        ]
                                    },
                                    "artist_names": {
                                        "type": "array",
                                        "example": [
                                            "Campbell",
                                            "Chris"
                                        ]
                                    },
                                    "authors": {
                                        "type": "array",
                                        "example": [
                                            387,
                                            538,
                                            899
                                        ]
                                    },
                                    "arrangers": {
                                        "type": "array",
                                        "example": [
                                            48,
                                            98
                                        ]
                                    },
                                    "publishers": {
                                        "type": "array",
                                        "example": [
                                            105,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "product_types": {
                                        "type": "array",
                                        "example": [
                                            "sheet_music",
                                            "audio_tracks",
                                            "patches",
                                            "other"
                                        ]
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "product_groups_codes": {
                                        "type": "array",
                                        "example": [
                                            "W",
                                            "F",
                                            "R"
                                        ]
                                    },
                                    "themes": {
                                        "type": "array",
                                        "example": [
                                            "Christmas",
                                            "Easter"
                                        ]
                                    },
                                    "keys": {
                                        "type": "array",
                                        "example": [
                                            "W:A",
                                            "L:Ab",
                                            "W:G#"
                                        ]
                                    },
                                    "order_by": {
                                        "type": "string",
                                        "example": "street_date"
                                    },
                                    "order_direction": {
                                        "type": "string",
                                        "example": "desc"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "from": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "search_lyrics": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "my_library_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "library_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "meter": {
                                        "type": "string",
                                        "example": "4/4"
                                    },
                                    "tempo": {
                                        "type": "string",
                                        "example": "Fast"
                                    },
                                    "download_products": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "occupantId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/profile/{profile_id}": {
            "get": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Get Elastic Profile",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "profile_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/album/{album_id}": {
            "get": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Elastic Get Album",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "album_id",
                        "in": "path",
                        "description": "Album Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/catalog-item/get/{catalog_item_id}": {
            "get": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Elastic Get Catalog Item",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "description": "Catalog item id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/elastic/song-list/{slug}": {
            "get": {
                "tags": [
                    "ElasticSearch"
                ],
                "summary": "Elastic Get Song List",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "query",
                        "description": "Occupant Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/email-wizard/build": {
            "post": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "Build an email from a template",
                "description": "Build an email from a template",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BuildEmailSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuildEmailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/email-wizard/template": {
            "post": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "Create an email template",
                "description": "Create an email template",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmailTemplateSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmailTemplateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "List all email templates.",
                "description": "List all email templates.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/email-wizard/template/{id}": {
            "delete": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "Delete an email template",
                "description": "Delete an email template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete email template by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "Get an email template",
                "description": "Get an email template",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the email template.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "EmailWizard"
                ],
                "summary": "Update an email template.",
                "description": "Update an email template.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update email template by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmailTemplateSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmailTemplateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/external-ids/publisher-skus/batch-import": {
            "post": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "Batch import publisher skus from google sheet",
                "description": "Batch import publisher skus from google sheet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/external-id": {
            "post": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "Create external id",
                "description": "Create external id",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIdSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIdSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/external-ids/{id}": {
            "delete": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "Delete External ID",
                "description": "Delete External ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete external id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "Get ExternalId",
                "description": "Get ExternalId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get external id by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "Update external id.",
                "description": "Update external id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update external id by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIdSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalIdSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/external-ids": {
            "get": {
                "tags": [
                    "ExternalId"
                ],
                "summary": "List all external ids.",
                "description": "List all external ids.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "context_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files/{file_id}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Get a file by its id.",
                "description": "Get a file by its id.",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "get file by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "List all files.",
                "description": "List all files.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "crc",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_fmt",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files/load-files": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Load files",
                "description": "Load files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid/apply": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Apply grid to catalog item",
                "description": "Apply grid to catalog item",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyGridToCatalogItemSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyGridToCatalogItemSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Create grid",
                "description": "Create grid",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid-sellable": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Create grid sellable",
                "description": "Create grid sellable",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridSellableSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridSellableSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Grid"
                ],
                "summary": "Delete a Sellable from a Grid",
                "description": "Delete a Sellable from a Grid",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGridEntitychema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGridEntitychema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid-to-entity": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Create a new GridToEntities.",
                "description": "Create a new GridToEntities",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridToEntitiesSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGridToEntitiesSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Grid"
                ],
                "summary": "Delete an Entity from a Grid",
                "description": "Delete an Entity from a Grid",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGridEntitychema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteGridEntitychema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid/{id}": {
            "delete": {
                "tags": [
                    "Grid"
                ],
                "summary": "Delete a Grid",
                "description": "Delete a Grid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete grid by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Grid"
                ],
                "summary": "Get Grid",
                "description": "Get Grid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Grid ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Grid"
                ],
                "summary": "Update grid.",
                "description": "Update grid.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "update grid by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGridSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGridSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid/export": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Export from Google Sheet",
                "description": "Export from Google Sheet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid/import": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Import Sellable Grid from Google Sheet",
                "description": "Import Sellable Grid from Google Sheet",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grids": {
            "get": {
                "tags": [
                    "Grid"
                ],
                "summary": "List all grids.",
                "description": "Show all grids.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid-to-entities": {
            "get": {
                "tags": [
                    "Grid"
                ],
                "summary": "Get all entities of a grid.",
                "description": "Get all entities of a grid.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "grid_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grids/propagate": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Propagate all grids.",
                "description": "Propagate all grids.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid/seed": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Seed sellable grid.",
                "description": "Seed sellable grid.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/grid-test-email": {
            "post": {
                "tags": [
                    "Grid"
                ],
                "summary": "Test send grid email.",
                "description": "Test send grid email.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestGridEmailSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestGridEmailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/guitar-chords/{id}": {
            "get": {
                "tags": [
                    "GuitarChord"
                ],
                "summary": "Get Guitar Chord",
                "description": "Get Guitar Chord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guitar Chord ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/guitar-chords": {
            "get": {
                "tags": [
                    "GuitarChord"
                ],
                "summary": "List all Guitar Chords",
                "description": "Show all Guitar Chords",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/invoices/fulfill/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Fulfill Invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The invoice id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/invoices/fulfill-refund/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Fulfill Credit Refund Invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The invoice id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get Invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The invoice id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Index Invoices",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/invoices/webhook-catch/orderdesk": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Process Order Desk Webhook",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/invoices/re-process": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Re Process Invoice",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/invoices/{id}/set-tracked": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Set Tracked",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/key-finder-song": {
            "post": {
                "tags": [
                    "Key"
                ],
                "summary": "Create Key Finder Song",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ArrangementID": {
                                        "type": "integer",
                                        "example": "73318"
                                    },
                                    "CCLI": {
                                        "type": "integer",
                                        "example": 2650364
                                    },
                                    "Title": {
                                        "type": "string",
                                        "example": "Here I am"
                                    },
                                    "Artist": {
                                        "type": "string",
                                        "example": "Paul Oakley"
                                    },
                                    "SongKey": {
                                        "type": "string",
                                        "example": "D"
                                    },
                                    "LowNote": {
                                        "type": "string",
                                        "example": "F#"
                                    },
                                    "HighNote": {
                                        "type": "string",
                                        "example": "B4"
                                    },
                                    "Source": {
                                        "type": "string",
                                        "example": "somewhere"
                                    },
                                    "SourceID": {
                                        "type": "string",
                                        "example": "1111"
                                    },
                                    "SourceData": {
                                        "type": "string",
                                        "example": "test source data"
                                    },
                                    "SourceURL": {
                                        "type": "string",
                                        "example": "www.example.com"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "ArrangementID": {
                                        "type": "integer",
                                        "example": "73318"
                                    },
                                    "CCLI": {
                                        "type": "integer",
                                        "example": 2650364
                                    },
                                    "Title": {
                                        "type": "string",
                                        "example": "Here I am"
                                    },
                                    "Artist": {
                                        "type": "string",
                                        "example": "Paul Oakley"
                                    },
                                    "SongKey": {
                                        "type": "string",
                                        "example": "D"
                                    },
                                    "LowNote": {
                                        "type": "string",
                                        "example": "F#"
                                    },
                                    "HighNote": {
                                        "type": "string",
                                        "example": "B4"
                                    },
                                    "Source": {
                                        "type": "string",
                                        "example": "somewhere"
                                    },
                                    "SourceID": {
                                        "type": "string",
                                        "example": "1111"
                                    },
                                    "SourceData": {
                                        "type": "string",
                                        "example": "test source data"
                                    },
                                    "SourceURL": {
                                        "type": "string",
                                        "example": "www.example.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/key-finder-song/{arrangement_id}": {
            "delete": {
                "tags": [
                    "Key"
                ],
                "summary": "Delete Key Finder Song",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Key"
                ],
                "summary": "Patch Key Finder Song",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "CCLI": {
                                        "type": "integer",
                                        "example": 2650364
                                    },
                                    "Title": {
                                        "type": "string",
                                        "example": "Here I am"
                                    },
                                    "Artist": {
                                        "type": "string",
                                        "example": "Paul Oakley"
                                    },
                                    "SongKey": {
                                        "type": "string",
                                        "example": "D"
                                    },
                                    "LowNote": {
                                        "type": "string",
                                        "example": "F#"
                                    },
                                    "HighNote": {
                                        "type": "string",
                                        "example": "B4"
                                    },
                                    "Source": {
                                        "type": "string",
                                        "example": "somewhere"
                                    },
                                    "SourceID": {
                                        "type": "string",
                                        "example": "1111"
                                    },
                                    "SourceData": {
                                        "type": "string",
                                        "example": "test source data"
                                    },
                                    "SourceURL": {
                                        "type": "string",
                                        "example": "www.example.com"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "CCLI": {
                                        "type": "integer",
                                        "example": 2650364
                                    },
                                    "Title": {
                                        "type": "string",
                                        "example": "Here I am"
                                    },
                                    "Artist": {
                                        "type": "string",
                                        "example": "Paul Oakley"
                                    },
                                    "SongKey": {
                                        "type": "string",
                                        "example": "D"
                                    },
                                    "LowNote": {
                                        "type": "string",
                                        "example": "F#"
                                    },
                                    "HighNote": {
                                        "type": "string",
                                        "example": "B4"
                                    },
                                    "Source": {
                                        "type": "string",
                                        "example": "somewhere"
                                    },
                                    "SourceID": {
                                        "type": "string",
                                        "example": "1111"
                                    },
                                    "SourceData": {
                                        "type": "string",
                                        "example": "test source data"
                                    },
                                    "SourceURL": {
                                        "type": "string",
                                        "example": "www.example.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/keys/{key_id}": {
            "get": {
                "tags": [
                    "Key"
                ],
                "summary": "Get Key",
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "description": "Key id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/keys": {
            "get": {
                "tags": [
                    "Key"
                ],
                "summary": "Index Keys",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "show hidden",
                        "required": false,
                        "schema": {
                            "enum": [
                                "1",
                                "0"
                            ]
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/key-finder": {
            "patch": {
                "tags": [
                    "Key"
                ],
                "summary": "Set Key Finder",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "arrangement_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "selected_key": {
                                        "type": "string",
                                        "example": "G"
                                    },
                                    "vocal_range": {
                                        "type": "array",
                                        "example": [
                                            "A3",
                                            "D5"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "arrangement_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "selected_key": {
                                        "type": "string",
                                        "example": "G"
                                    },
                                    "vocal_range": {
                                        "type": "array",
                                        "example": [
                                            "A3",
                                            "D5"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/languages/{language_id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get Language",
                "parameters": [
                    {
                        "name": "language_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Index Languages",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{occupant_id}/roles/assign/{library_role_id}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Assign Library Role",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{occupant_id}/license/assign/{license_id}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Assign Occupant License",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "integer",
                                        "example": 587322
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "integer",
                                        "example": 587322
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/compile/{library_id}/{catalog_item_id}/{product_group_code}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Compile Library Catalog Item Copies",
                "parameters": [
                    {
                        "name": "Library Id",
                        "in": "path",
                        "description": "Library id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 587322
                    },
                    {
                        "name": "Catalog Item ID",
                        "in": "path",
                        "description": "Catalog item id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "Product group code",
                        "in": "path",
                        "description": "Product group code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Create Library",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/add/catalog_item": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Create Library Catalog Items",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "occupant_id": {
                                        "type": "integer",
                                        "example": 587322
                                    },
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 14
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "occupant_id": {
                                        "type": "integer",
                                        "example": 587322
                                    },
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 14
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/occupants": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Create Occupants",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 600456
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 600456
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Library"
                ],
                "summary": "Delete Occupants",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 600456
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_id": {
                                        "type": "string",
                                        "example": 2
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 600456
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}": {
            "delete": {
                "tags": [
                    "Library"
                ],
                "summary": "Delete Library",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "query",
                        "description": "Library Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1.0/library/import-arrangement/{catalog_item_id}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Get Object of Import Arrangement Data",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": []
            }
        },
        "/v3/library/legacy-access-check/catalog_item/{catalog_item_id}/{product_group_code}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Get Legacy Library Catalog Item Permissions",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "description": "the catalog item id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "73318"
                    },
                    {
                        "name": "product_group_code",
                        "in": "path",
                        "description": "Product group code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "W"
                    },
                    {
                        "name": "user_token",
                        "in": "query",
                        "description": "The Member's auth Token",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{id}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Get Library",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/catalog_item/{catalog_item_id}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Get Library Catalog Items",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "query",
                        "description": "Library Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "Catalog Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/catalog_items/index": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Index Library Catalog Items",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/license/index": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Index Library Licenses",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/members": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Index Library Members",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "Library ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/index/{user_member_id}": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Index User Libraries",
                "parameters": [
                    {
                        "name": "user_member_id",
                        "in": "path",
                        "description": "The Member Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/join": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Join Library",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "Library Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/remove/catalog_item": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Remove Library Catalog Items",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "occupant_id": {
                                        "type": "integer",
                                        "example": 587322
                                    },
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 14
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "occupant_id": {
                                        "type": "integer",
                                        "example": 587322
                                    },
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 14
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{occupant_id}/roles/revoke/{library_role_id}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Revoke Library Role",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "path",
                        "description": "Occupant Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 5
                    },
                    {
                        "name": "library_role_id",
                        "in": "path",
                        "description": "Library Role Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{occupant_id}/license/revoke/{license_id}": {
            "post": {
                "tags": [
                    "Library"
                ],
                "summary": "Revoke Occupant License",
                "parameters": [
                    {
                        "name": "occupant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "license_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1.0/library/search": {
            "get": {
                "tags": [
                    "Library"
                ],
                "summary": "Search Library for Public API",
                "security": []
            }
        },
        "/v3/library/{library_id}/seats/assign/{user_id}": {
            "post": {
                "tags": [
                    "LibrarySeat"
                ],
                "summary": "Assign a seat to a user",
                "description": "Assign a seat to a user.",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "The ID of the library.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/seats/{id}": {
            "get": {
                "tags": [
                    "LibrarySeat"
                ],
                "summary": "Get a seat",
                "description": "Get a seat.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the seat.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/seats": {
            "get": {
                "tags": [
                    "LibrarySeat"
                ],
                "summary": "Get all seats of a library",
                "description": "Get all seats of a library.",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "The id of the library whose seats are to be fetched.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/seats/revoke/{user_id}": {
            "post": {
                "tags": [
                    "LibrarySeat"
                ],
                "summary": "Revoke a library seat",
                "description": "Revoke a library seat.",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "The ID of the library.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The ID of the user.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item/license": {
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Create Catalog Item License",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "License"
                ],
                "summary": "Delete Catalog Item License",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license": {
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Create License",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license/member-license": {
            "post": {
                "tags": [
                    "License"
                ],
                "summary": "Create Member License",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license/{id}": {
            "delete": {
                "tags": [
                    "License"
                ],
                "summary": "Delete License",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "Get License",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "License"
                ],
                "summary": "Update License",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/licenses": {
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "Index License",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/licence-block-list-entity": {
            "post": {
                "tags": [
                    "LicenseBlocklistEntity"
                ],
                "summary": "Create a new license blocklist entry",
                "description": "Create a new license blocklist entry",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLicenseBlocklistEntrySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLicenseBlocklistEntrySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "LicenseBlocklistEntity"
                ],
                "summary": "List all license blocklist entries.",
                "description": "List all license blocklist entries.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/licence-block-list-entity/{id}": {
            "delete": {
                "tags": [
                    "LicenseBlocklistEntity"
                ],
                "summary": "Delete a license blocklist entry",
                "description": "Delete a license blocklist entry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete catalog item license by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-royalties/calculate-pools": {
            "post": {
                "tags": [
                    "LicenseRoyalty"
                ],
                "summary": "Calculate pools.",
                "description": "Calculate pools.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculatePoolsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalculatePoolsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-commission-pools": {
            "get": {
                "tags": [
                    "LicenseRoyalty"
                ],
                "summary": "Index license commission pools.",
                "description": "Index license commission pools.",
                "parameters": [
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "Payout frequency value",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Payout year",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payee_type",
                        "in": "query",
                        "description": "Payee type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "A",
                                "M"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-royalties/regenerate-pools-commissions": {
            "post": {
                "tags": [
                    "LicenseRoyalty"
                ],
                "summary": "Regenerate Pools Commissions",
                "description": "Regenerate Pools Commissions",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegeneratePoolsCommissionsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegeneratePoolsCommissionsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-royalty-rate": {
            "post": {
                "tags": [
                    "LicenseRoyaltyRate"
                ],
                "summary": "Create Royalty Rate",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "license_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rate": {
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2023-10-25"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2023-11-25"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "license_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rate": {
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2023-10-25"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2023-11-25"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-royalty-rate/{id}": {
            "delete": {
                "tags": [
                    "LicenseRoyaltyRate"
                ],
                "summary": "Delete Royalty Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Royalty Rate Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "LicenseRoyaltyRate"
                ],
                "summary": "Get Royalty Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Royalty Rate Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "LicenseRoyaltyRate"
                ],
                "summary": "Update Royalty Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Royalty Rate Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "license_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rate": {
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2023-10-25"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2023-11-25"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "license_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rate": {
                                        "type": "number",
                                        "example": 0.5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2023-10-25"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2023-11-25"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/license-royalty-rates": {
            "get": {
                "tags": [
                    "LicenseRoyaltyRate"
                ],
                "summary": "Index Royalty Rates",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/lyrics/{lyrics_id}": {
            "get": {
                "tags": [
                    "Lyrics"
                ],
                "summary": "Get a lyrics by its id.",
                "description": "Get a lyrics by its id.",
                "parameters": [
                    {
                        "name": "lyrics_id",
                        "in": "path",
                        "description": "lyrics ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            },
            "patch": {
                "tags": [
                    "Lyrics"
                ],
                "summary": "Update a lyrics by its id.",
                "description": "Update a lyrics by its id.",
                "parameters": [
                    {
                        "name": "lyrics_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/members/{id}": {
            "get": {
                "tags": [
                    "Member"
                ],
                "summary": "Get member",
                "description": "Get member",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "raw",
                        "in": "query",
                        "description": "Get raw data",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Member"
                ],
                "summary": "Update member",
                "description": "Update member by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMemberSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMemberSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/members/{id}/grant-role": {
            "post": {
                "tags": [
                    "Member"
                ],
                "summary": "Grant role to member ",
                "description": "Grant role to member by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrantRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/members-alt": {
            "get": {
                "tags": [
                    "Member"
                ],
                "summary": "Get all members",
                "description": "Get all members",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "organization",
                        "in": "query",
                        "description": "Filter by organization",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_4",
                        "in": "query",
                        "description": "Filter by last 4 digits of credit card",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role_name",
                        "in": "query",
                        "description": "Filter by role name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member_type",
                        "in": "query",
                        "description": "Filter by member type",
                        "schema": {
                            "enum": [
                                "user",
                                "library"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/members/{id}/revoke-role": {
            "post": {
                "tags": [
                    "Member"
                ],
                "summary": "Revoke role to member ",
                "description": "Revoke role to member by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevokeRoleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevokeRoleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/members/{id}/update-test-user-status": {
            "post": {
                "tags": [
                    "Member"
                ],
                "summary": "Update test status",
                "description": "Update test status by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTestStatusSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTestStatusSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/fillaudio/test": {
            "get": {
                "tags": [
                    "MemberLogin"
                ],
                "summary": "Fill Audio File Details",
                "description": "Fill Audio File Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/members-logins/{id}": {
            "get": {
                "tags": [
                    "MemberLogin"
                ],
                "summary": "List all Member Logins",
                "description": "List all Member Logins",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "group_by_ip",
                        "in": "query",
                        "description": "Group by IP",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/member-property": {
            "post": {
                "tags": [
                    "MemberProperty"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMemberPropertySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMemberPropertySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/member-properties/{id}": {
            "delete": {
                "tags": [
                    "MemberProperty"
                ],
                "summary": "Delete a member property.",
                "description": "Delete a member property.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "delete member property by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "MemberProperty"
                ],
                "summary": "Get a member property.",
                "description": "Get a member property.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "get member property by id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "library_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "MemberProperty"
                ],
                "summary": "Update a member property.",
                "description": "Update a member property.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMemberPropertySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMemberPropertySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/member-properties": {
            "get": {
                "tags": [
                    "MemberProperty"
                ],
                "summary": "Get all member properties.",
                "description": "Get all member properties.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership/compile-all/{member_id}": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Compile all memberships",
                "description": "Compile all memberships",
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership/compile/{membership_id}": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Compile Membership Balance",
                "description": "Compile Membership Balance",
                "parameters": [
                    {
                        "name": "membership_id",
                        "in": "path",
                        "description": "Membership ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership/refund": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Create Credit Refund Membership",
                "description": "Create Credit Refund Membership",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCreditRefundMembershipSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCreditRefundMembershipSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-items/membership": {
            "post": {
                "tags": [
                    "Membership"
                ],
                "summary": "Create Membership Product",
                "description": "Create Membership Product",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMembershipProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMembershipProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/memberships/active": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get active membership",
                "description": "Get active membership",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership-products/available": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get available membership products",
                "description": "Get available membership products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{library_id}/credits": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get available membership products",
                "description": "Get available membership products",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "Library ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership/{membership_id}": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get membership details",
                "description": "Get membership details by membership id",
                "parameters": [
                    {
                        "name": "membership_id",
                        "in": "path",
                        "description": "Membership ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include_history",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Membership"
                ],
                "summary": "Update membership",
                "description": "Update membership",
                "parameters": [
                    {
                        "name": "membership_id",
                        "in": "path",
                        "description": "Membership ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMembershipSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMembershipSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership-products/{catalog_item_id}": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get Membership Product",
                "description": "Get Membership Product",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "description": "The ID of the catalog item to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Membership"
                ],
                "summary": "Update membership product",
                "description": "Update membership product",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "path",
                        "description": "Catalog Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMembershipProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMembershipProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/membership-products": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Get Membership Products",
                "description": "Get Membership Products",
                "parameters": [
                    {
                        "name": "credit_type",
                        "in": "query",
                        "description": "Credit type",
                        "schema": {
                            "enum": [
                                "GS_FULL",
                                "GS_LIGHT",
                                "GS_RETAIL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "credit_qty",
                        "in": "query",
                        "description": "Credit quantity",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/memberships": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "List all memberships",
                "description": "List all memberships",
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "membership_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/renew-memberships/{member_id}": {
            "get": {
                "tags": [
                    "Membership"
                ],
                "summary": "Renew memberships",
                "description": "Renew memberships",
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/notification/report/{notification_name}/{date}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get Broadcast Report",
                "description": "Get Broadcast Report",
                "parameters": [
                    {
                        "name": "notification_name",
                        "in": "path",
                        "description": "Notification Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date in Y-m-d format",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/notification/test/{notification_name}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Test Notification",
                "description": "Test Notification",
                "parameters": [
                    {
                        "name": "notification_name",
                        "in": "path",
                        "description": "Notification Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/notification/test/broadcast/{notification_name}/{date}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Test Notification Broadcast",
                "description": "Test Notification Broadcast",
                "parameters": [
                    {
                        "name": "notification_name",
                        "in": "path",
                        "description": "Notification Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date format: Y-m-d",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/parts/{part_id}": {
            "get": {
                "tags": [
                    "Part"
                ],
                "summary": "Get a Part",
                "description": "Get all information about a Part",
                "parameters": [
                    {
                        "name": "part_id",
                        "in": "path",
                        "description": "The id of the part to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/payout-commission/payee-report/{payee_id}": {
            "get": {
                "tags": [
                    "PayeeCommission"
                ],
                "summary": "Download Report Of All Id Under Payee",
                "description": "Download Report Of All Id Under Payee",
                "parameters": [
                    {
                        "name": "payee_id",
                        "in": "path",
                        "description": "Payee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payee-commissions/{id}": {
            "get": {
                "tags": [
                    "PayeeCommission"
                ],
                "summary": "Get Payee Commission",
                "description": "Get Payee Commission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payee Commission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payee-commissions": {
            "get": {
                "tags": [
                    "PayeeCommission"
                ],
                "summary": "Get Payee Commissions",
                "description": "Get Payee Commissions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "arrangement_purchase_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_paid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payout_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commission_date",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payee-groups": {
            "post": {
                "tags": [
                    "PayeeGroup"
                ],
                "summary": "Create new PayeeGroup",
                "description": "Create new PayeeGroup",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayeeGroupSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayeeGroupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayeeGroup"
                ],
                "summary": "List all PayeeGroups.",
                "description": "Show all PayeeGroups to the Client.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type of PayeeGroup.",
                        "schema": {
                            "enum": [
                                "monthly",
                                "quarterly"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payee-groups/{id}": {
            "delete": {
                "tags": [
                    "PayeeGroup"
                ],
                "summary": "Delete PayeeGroup",
                "description": "Delete PayeeGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PayeeGroup ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayeeGroup"
                ],
                "summary": "Get PayeeGroup",
                "description": "Get PayeeGroup by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PayeeGroup ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PayeeGroup"
                ],
                "summary": "Update existing PayeeGroup.",
                "description": "Update existing PayeeGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PayeeGroup ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayeeGroupSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayeeGroupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/converge/check-status": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Check Converge Status",
                "description": "Check Converge Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/payment/services/check-status": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Check Payment Services Status",
                "description": "Check Payment Services Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/payment/converge/credit-card-token": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Create Credit Card Token",
                "description": "Create Credit Card Token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCreditCardTokenSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCreditCardTokenSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/method": {
            "delete": {
                "tags": [
                    "Payment"
                ],
                "summary": "Delete a payment method",
                "description": "Delete a payment method",
                "parameters": [
                    {
                        "name": "token_id",
                        "in": "query",
                        "description": "delete payment method by TokenID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/tax-and-shipping": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get tax and shipping information",
                "description": "Get tax and shipping information",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GetTaxAndShippingInformationSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetTaxAndShippingInformationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/tax": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get Tax Information",
                "description": "Get Tax Information",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GetTaxInformationSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetTaxInformationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/methods": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get all payment methods.",
                "description": "Get all payment methods.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/methods/admin": {
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "List all payment methods for admin.",
                "description": "List all payment methods for admin.",
                "parameters": [
                    {
                        "name": "member_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/paypal/agreement-tokens": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "PayPal Create Agreement Token",
                "description": "PayPal Create Agreement Token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayPalCreateAgreementTokenSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayPalCreateAgreementTokenSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/paypal/execute-agreement": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Execute PayPal agreement",
                "description": "Execute PayPal agreement",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayPalExecuteAgreementSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayPalExecuteAgreementSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/pay": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Pay for an invoice",
                "description": "Pay for an invoice",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentPaySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentPaySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/pay/cheque": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Pay by cheque",
                "description": "Pay by cheque",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/pay/invoice": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Pay for an invoice",
                "description": "Pay for an invoice",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayInvoiceSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayInvoiceSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/quick-buy": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Quick Buy",
                "description": "Quick Buy",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/QuickBuySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuickBuySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payment/method/set-default": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Set Default Payment Method",
                "description": "Set Default Payment Method",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetDefaultPaymentMethodSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetDefaultPaymentMethodSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payouts/{id}/cancel": {
            "post": {
                "tags": [
                    "Payout"
                ],
                "summary": "Cancel Payout",
                "description": "Cancel Payout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payout ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payouts/{id}/confirm": {
            "post": {
                "tags": [
                    "Payout"
                ],
                "summary": "Confirm Payout",
                "description": "Confirm Payout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payout ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout/generate-many": {
            "post": {
                "tags": [
                    "Payout"
                ],
                "summary": "Generate many payouts",
                "description": "Generate many payouts",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateManyPayoutsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateManyPayoutsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout/generate": {
            "post": {
                "tags": [
                    "Payout"
                ],
                "summary": "Generate Payout",
                "description": "Generate Payout",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneratePayoutSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GeneratePayoutSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payouts/{id}": {
            "get": {
                "tags": [
                    "Payout"
                ],
                "summary": "Get Payout",
                "description": "Get Payout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Payout.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payouts": {
            "get": {
                "tags": [
                    "Payout"
                ],
                "summary": "Get Payouts",
                "description": "Get Payouts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-groups/{id}": {
            "get": {
                "tags": [
                    "PayoutGroup"
                ],
                "summary": "Get Payout Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-groups": {
            "get": {
                "tags": [
                    "PayoutGroup"
                ],
                "summary": "Index Payout Groups",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rates": {
            "post": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Create Payout Rate",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 70319
                                    },
                                    "copyright_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "rule_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "ownership": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2001-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2100-12-31"
                                    },
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            70319
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 70319
                                    },
                                    "copyright_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "rule_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "ownership": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2001-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2100-12-31"
                                    },
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            70319
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Index Payout Rates",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "Catalog Item Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "copyright_id",
                        "in": "query",
                        "description": "Copyright ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "Payee Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 2
                    },
                    {
                        "name": "catalog_item_title",
                        "in": "query",
                        "description": "Catalog Item Title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "King of Kings"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rates-stores": {
            "post": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Create Payout Rate To Stores",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Delete Payout Rate To Stores",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "stores": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rates/{id}": {
            "delete": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Delete Payout Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Get Payout Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Update Payout Rate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "rule_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "ownership": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2001-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2100-12-31"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "rule_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "ownership": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2001-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "example": "2100-12-31"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rates-history": {
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Index Payout Rates History",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "Catalog Item Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rate/effective": {
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Retrieve Effective Payout Rates",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "Catalog Item Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "copyright_id",
                        "in": "query",
                        "description": "Copyright ID",
                        "required": false,
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "arrangement_type",
                        "in": "query",
                        "description": "Arrangement Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "F"
                    },
                    {
                        "name": "effective_date",
                        "in": "query",
                        "description": "Effective Date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2018-01-01 00:00:00"
                    },
                    {
                        "name": "payout_type_codes",
                        "in": "query",
                        "description": "The payout type code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ACOMM"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rate/by-payout-group": {
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Retrieve Effective Payout Rates By Payout Group",
                "parameters": [
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "Catalog Item Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 73318
                    },
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "integer"
                        },
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rates/switch-payee": {
            "post": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Switch Payout Rate Payee",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from_payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "to_payee_id": {
                                        "type": "integer",
                                        "example": 66
                                    },
                                    "confirm": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            70319
                                        ]
                                    },
                                    "effective_date": {
                                        "type": "string",
                                        "example": "2009-04-01 00:00:00"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from_payee_id": {
                                        "type": "integer",
                                        "example": 65
                                    },
                                    "to_payee_id": {
                                        "type": "integer",
                                        "example": 66
                                    },
                                    "confirm": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            70319
                                        ]
                                    },
                                    "effective_date": {
                                        "type": "string",
                                        "example": "2009-04-01 00:00:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rate/validate": {
            "get": {
                "tags": [
                    "PayoutRate"
                ],
                "summary": "Validate Payout Rates",
                "parameters": [
                    {
                        "name": "rateable_type",
                        "in": "query",
                        "description": "Rateable Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "catalog_item",
                                "copyright"
                            ],
                            "type": "string"
                        },
                        "example": "catalog_item"
                    },
                    {
                        "name": "rateable_id",
                        "in": "query",
                        "description": "Rateaeble ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/download-report-file/{id}": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Download Report File",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/download-summary": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Download Summary",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/rollup/export": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Export Payout Report Rollup",
                "parameters": [
                    {
                        "name": "export_as",
                        "in": "query",
                        "description": "The Export file type, xls, xlsx, or pdf",
                        "required": true,
                        "schema": {
                            "enum": [
                                "xls",
                                "xlsx",
                                "pdf"
                            ]
                        }
                    },
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "The AcctPayees Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payout_id",
                        "in": "query",
                        "description": "The Payouts Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value, 1-4 for quarters, 1-12 for months",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The Payouts Year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/finalize-statements": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Finalize Statements",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "statements": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "statement_id": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "statements": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "statement_id": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/generate-previews": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Generate Many Previews",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/generate-pool-previews": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Generate Many Pool Previews",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_type": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payee_type": {
                                        "type": "string",
                                        "example": "A"
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/payees": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Get Payout Report Payees",
                "parameters": [
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The Payouts Year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payee_type",
                        "in": "query",
                        "description": "The AcctPayees Payee Type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "A",
                                "M",
                                "Q"
                            ],
                            "example": "A"
                        }
                    },
                    {
                        "name": "finalization",
                        "in": "query",
                        "description": "The finalization state",
                        "required": false,
                        "schema": {
                            "enum": [
                                "finalized",
                                "unfinalized"
                            ]
                        }
                    },
                    {
                        "name": "payout_sub_type",
                        "in": "query",
                        "description": "The type of payout",
                        "required": false,
                        "schema": {
                            "enum": [
                                "purchases",
                                "pro_access",
                                "pro_seat"
                            ]
                        }
                    },
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "The AcctPayees Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/payees/count": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Get Payout Report Payees Count",
                "parameters": [
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The Payouts Year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payee_type",
                        "in": "query",
                        "description": "The AcctPayees Payee Type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "A",
                                "M",
                                "Q"
                            ],
                            "example": "A"
                        }
                    },
                    {
                        "name": "payout_sub_type",
                        "in": "query",
                        "description": "The type of payout",
                        "required": false,
                        "schema": {
                            "enum": [
                                "purchases",
                                "pro_access",
                                "pro_seat"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/regen-finalize-statements": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Regenerate Finalize Statements",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    },
                                    "license_types": {
                                        "type": "array",
                                        "example": [
                                            "pro_access",
                                            "pro_seat"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/report-generation-status-check": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Report Generation Status Check",
                "parameters": [
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value, 1-4 for quarters, 1-12 for months",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The Payouts Year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payee_type",
                        "in": "query",
                        "description": "The AcctPayees Payee Type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "A",
                                "M",
                                "Q"
                            ],
                            "example": "A"
                        }
                    },
                    {
                        "name": "payout_sub_type",
                        "in": "query",
                        "description": "The type of payout",
                        "required": false,
                        "schema": {
                            "enum": [
                                "purchases",
                                "pro_access",
                                "pro_seat"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Retrieve Payout Report",
                "parameters": [
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "The AcctPayees Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value, 1-4 for quarters, 1-12 for months",
                        "required": true,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The payout year",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "The Column to order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "The Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/rollup": {
            "get": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Retrieve Payout Report Rollup",
                "parameters": [
                    {
                        "name": "payee_id",
                        "in": "query",
                        "description": "The AcctPayees Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payout_id",
                        "in": "query",
                        "description": "The Payouts Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "payout_frequency_value",
                        "in": "query",
                        "description": "The Payouts Frequency Value, 1-4 for quarters, 1-12 for months",
                        "required": false,
                        "schema": {
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "The Payouts Year",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/send-report-emails": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Send Report Emails",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payees": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    },
                                    "payout_frequency_value": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "payee_group_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "payout_sub_type": {
                                        "type": "string",
                                        "example": "purchases"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-report/unfinalize": {
            "post": {
                "tags": [
                    "PayoutReport"
                ],
                "summary": "Unfinalize",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payout_id": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payout_id": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rules": {
            "post": {
                "tags": [
                    "PayoutRule"
                ],
                "summary": "Create a new payout rule.",
                "description": "Create a new payout rule.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayoutRuleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayoutRuleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayoutRule"
                ],
                "summary": "List all payout rules.",
                "description": "Show all payout rules paginated.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payout_group_id",
                        "in": "query",
                        "description": "Filter payout rules by payout group id.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "Show hidden payout rules.",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rules/{id}": {
            "get": {
                "tags": [
                    "PayoutRule"
                ],
                "summary": "Get a payout rule",
                "description": "Get a payout rule by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payout rule.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PayoutRule"
                ],
                "summary": "Update a payout rule.",
                "description": "Update a payout rule.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PayoutRule ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayoutRuleSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayoutRuleSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rule-details": {
            "post": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Create new PayoutRuleDetail",
                "description": "Create new PayoutRuleDetail",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayoutRuleDetailSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePayoutRuleDetailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Get all payout rule details",
                "description": "Get all payout rule details",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_id",
                        "in": "query",
                        "description": "Filter by rule id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rule-details/{id}": {
            "delete": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Delete Payout Rule Detail",
                "description": "Delete Payout Rule Detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Rule Detail ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Get a payout rule detail",
                "description": "Get a payout rule detail by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payout rule detail.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Update a payout rule detail.",
                "description": "Update a payout rule detail.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payout Rule Detail ID.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayoutRuleDetailSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePayoutRuleDetailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-rule-detail/validate": {
            "get": {
                "tags": [
                    "PayoutRuleDetail"
                ],
                "summary": "Validate Payout Rule Details",
                "description": "Validate Payout Rule Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-types/{id}": {
            "get": {
                "tags": [
                    "PayoutType"
                ],
                "summary": "Get single payout type",
                "description": "Get single payout type by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PayoutType ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/payout-types": {
            "get": {
                "tags": [
                    "PayoutType"
                ],
                "summary": "Get all payout types",
                "description": "Get all payout types",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pdf-files/{pdf_file_id}": {
            "get": {
                "tags": [
                    "Pdf"
                ],
                "summary": "Get Pdf File",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PDF File ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pdf-import-part-mappings": {
            "get": {
                "tags": [
                    "Pdf"
                ],
                "summary": "Index Pdf Import Part Mappings",
                "parameters": [
                    {
                        "name": "part_id",
                        "in": "query",
                        "description": "Part ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/pids/{pid}": {
            "get": {
                "tags": [
                    "Pid"
                ],
                "summary": "Get Pid",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan/access": {
            "post": {
                "tags": [
                    "Plan"
                ],
                "summary": "Create Plan Access",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePlanAccessSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePlanAccessSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_group": {
            "post": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Create Plan Group",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Group"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A group that belongs to me"
                                    },
                                    "parent_group_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Group"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A group that belongs to me"
                                    },
                                    "parent_group_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_group/item": {
            "put": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Create Plan Group Item",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plan_group_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plan_group_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_group/{plan_group_id}": {
            "delete": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Delete Plan Group",
                "parameters": [
                    {
                        "name": "plan_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Get Plan Group",
                "parameters": [
                    {
                        "name": "plan_group_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_group/item/{plan_group_item_id}": {
            "delete": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Delete Plan Group Item",
                "parameters": [
                    {
                        "name": "plan_group_item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_group/find/{slug}": {
            "get": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Find Plan Group",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug for the plan group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan_groups": {
            "get": {
                "tags": [
                    "PlanGroup"
                ],
                "summary": "Index Plan Groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/price-test/calc-ppa": {
            "post": {
                "tags": [
                    "Price Test"
                ],
                "summary": "Calculate price test ppa",
                "description": "Calculate price test price per arrangement",
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/price-test/finalize": {
            "post": {
                "tags": [
                    "Price Test"
                ],
                "summary": "Finalize Price Test",
                "description": "Finalize Price Test",
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/price-test/reset": {
            "post": {
                "tags": [
                    "Price Test"
                ],
                "summary": "Reset Price Test Sheet",
                "description": "Reset Price Test Google Sheet",
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/price-test/start": {
            "post": {
                "tags": [
                    "Price Test"
                ],
                "summary": "Start Price Test",
                "description": "Start Price Test",
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-groups": {
            "post": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Create Product Group",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "weight": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "code_example"
                                    },
                                    "name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "name_example"
                                    },
                                    "description": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "description_example"
                                    },
                                    "admin_description": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "admin_description_example"
                                    },
                                    "types": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "type1",
                                            "type2"
                                        ]
                                    },
                                    "tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "tax_code_example"
                                    },
                                    "file_regex": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "file_regex_example"
                                    },
                                    "file_path": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_path_example"
                                    },
                                    "min_child_files": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "base_copies": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "downloadable": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_lineage": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "description": "required|string|in:sheet_music,audio_tracks,patches,other",
                                        "type": "string",
                                        "example": "sheet_music"
                                    },
                                    "part_id": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "part_id_example"
                                    },
                                    "file_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_name_example"
                                    },
                                    "file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_type_example"
                                    },
                                    "preview_file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "preview_file_type_example"
                                    },
                                    "upload_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "upload_name_example"
                                    },
                                    "slug": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "slug_example"
                                    },
                                    "extra_details": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "extra_details_example"
                                    },
                                    "default_sellable_product_id": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "instruments": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "instrument1",
                                            "instrument2"
                                        ]
                                    },
                                    "print_tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "print_tax_code_example"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "weight": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "code_example"
                                    },
                                    "name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "name_example"
                                    },
                                    "description": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "description_example"
                                    },
                                    "admin_description": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "admin_description_example"
                                    },
                                    "types": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "type1",
                                            "type2"
                                        ]
                                    },
                                    "tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "tax_code_example"
                                    },
                                    "file_regex": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "file_regex_example"
                                    },
                                    "file_path": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_path_example"
                                    },
                                    "min_child_files": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "base_copies": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "downloadable": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_lineage": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "description": "required|string|in:sheet_music,audio_tracks,patches,other",
                                        "type": "string",
                                        "example": "sheet_music"
                                    },
                                    "part_id": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "part_id_example"
                                    },
                                    "file_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_name_example"
                                    },
                                    "file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_type_example"
                                    },
                                    "preview_file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "preview_file_type_example"
                                    },
                                    "upload_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "upload_name_example"
                                    },
                                    "slug": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "slug_example"
                                    },
                                    "extra_details": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "extra_details_example"
                                    },
                                    "default_sellable_product_id": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "instruments": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "instrument1",
                                            "instrument2"
                                        ]
                                    },
                                    "print_tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "print_tax_code_example"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Index Product Groups",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_type_id",
                        "in": "query",
                        "description": "Filter product_type_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-groups/{id}": {
            "delete": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Delete Product Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Get Product Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Update Product Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "description": "required|integer|exists:product_groups,id",
                                        "type": "integer"
                                    },
                                    "weight": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "code_example"
                                    },
                                    "name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "name_example"
                                    },
                                    "description": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "description_example"
                                    },
                                    "admin_description": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "admin_description_example"
                                    },
                                    "types": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "type1",
                                            "type2"
                                        ]
                                    },
                                    "tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "tax_code_example"
                                    },
                                    "file_regex": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "file_regex_example"
                                    },
                                    "file_path": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_path_example"
                                    },
                                    "min_child_files": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "base_copies": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "downloadable": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_lineage": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "description": "required|string|in:sheet_music,audio_tracks,patches,other",
                                        "type": "string",
                                        "example": "sheet_music"
                                    },
                                    "part_id": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "part_id_example"
                                    },
                                    "file_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_name_example"
                                    },
                                    "file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_type_example"
                                    },
                                    "preview_file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "preview_file_type_example"
                                    },
                                    "upload_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "upload_name_example"
                                    },
                                    "slug": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "slug_example"
                                    },
                                    "extra_details": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "extra_details_example"
                                    },
                                    "default_sellable_product_id": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "instruments": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "instrument1",
                                            "instrument2"
                                        ]
                                    },
                                    "print_tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "print_tax_code_example"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "description": "required|integer|exists:product_groups,id",
                                        "type": "integer"
                                    },
                                    "weight": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "code_example"
                                    },
                                    "name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "name_example"
                                    },
                                    "description": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "description_example"
                                    },
                                    "admin_description": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "admin_description_example"
                                    },
                                    "types": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "type1",
                                            "type2"
                                        ]
                                    },
                                    "tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "tax_code_example"
                                    },
                                    "file_regex": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "file_regex_example"
                                    },
                                    "file_path": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_path_example"
                                    },
                                    "min_child_files": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "base_copies": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "downloadable": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "show_lineage": {
                                        "description": "required|boolean",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "description": "required|string|in:sheet_music,audio_tracks,patches,other",
                                        "type": "string",
                                        "example": "sheet_music"
                                    },
                                    "part_id": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "part_id_example"
                                    },
                                    "file_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_name_example"
                                    },
                                    "file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "file_type_example"
                                    },
                                    "preview_file_type": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "preview_file_type_example"
                                    },
                                    "upload_name": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "upload_name_example"
                                    },
                                    "slug": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "slug_example"
                                    },
                                    "extra_details": {
                                        "description": "nullable|string",
                                        "type": "string",
                                        "example": "extra_details_example"
                                    },
                                    "default_sellable_product_id": {
                                        "description": "required|integer",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "instruments": {
                                        "description": "required|array",
                                        "type": "string",
                                        "example": [
                                            "instrument1",
                                            "instrument2"
                                        ]
                                    },
                                    "print_tax_code": {
                                        "description": "required|string",
                                        "type": "string",
                                        "example": "print_tax_code_example"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-groups/child-groups": {
            "get": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Child Groups",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "The Product Group's Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-groups-condensed": {
            "get": {
                "tags": [
                    "ProductGroup"
                ],
                "summary": "Index Product Groups Condensed",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_type",
                        "in": "query",
                        "description": "the type of product",
                        "required": false,
                        "schema": {
                            "enum": [
                                "sheet_music",
                                "audio_tracks",
                                "sounds_patches",
                                "other"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_virtual_products",
                        "in": "query",
                        "description": "exclude virtual products",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-types": {
            "post": {
                "tags": [
                    "ProductType"
                ],
                "summary": "Create Product Type",
                "description": "Create a new product type",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductTypeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductTypeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "ProductType"
                ],
                "summary": "List all product types.",
                "description": "Show all product types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/product-types/{id}": {
            "delete": {
                "tags": [
                    "ProductType"
                ],
                "summary": "Delete a product type",
                "description": "Delete a product type by its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ProductType ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "ProductType"
                ],
                "summary": "Get a product type",
                "description": "Get a product type by its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Type Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ProductType"
                ],
                "summary": "Update a product type.",
                "description": "Update a product type.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductTypeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductTypeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/profile/{profile_id}/attach": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Attach an entity to a profile.",
                "description": "Attach an entity to a profile.",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "description": "The ID of the profile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachEntityToProfileSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachEntityToProfileSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/profile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Create a new profile",
                "description": "Create a new profile",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProfileSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProfileSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get a profile.",
                "description": "Get a profile.",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "query",
                        "description": "The ID of the profile.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "The type of the profile.",
                        "schema": {
                            "enum": [
                                "artist",
                                "author",
                                "arranger",
                                "publisher"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "query",
                        "description": "The ID of the entity",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/profile/{profile_id}/detach": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Detach an entity from a profile.",
                "description": "Detach an entity from a profile.",
                "parameters": [
                    {
                        "name": "profile_id",
                        "in": "path",
                        "description": "The ID of the profile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachEntityFromProfileSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetachEntityFromProfileSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/profile/index": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get all profiles.",
                "description": "Get all profiles.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "approved_only",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/profile/update": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update a profile ",
                "description": "Update a profile ",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-publishers": {
            "post": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Create Arrangement To Publisher",
                "description": "Create Arrangement To Publisher",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToPublisherSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateArrToPublisherSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyright-publishers": {
            "post": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Create Copyright To Publisher",
                "description": "Create Copyright To Publisher",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToPublisherSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToPublisherSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/publishers": {
            "post": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Create new publisher.",
                "description": "Create new publisher.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePublisherSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePublisherSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Get all publishers",
                "description": "Get all publishers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "Show hidden publishers",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/arrangement-publishers/{id}": {
            "delete": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Delete Arrangement Publisher.",
                "description": "Delete Arrangement Publisher.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Publisher ID.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Update ArrToPublisher.",
                "description": "Update ArrToPublisher.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the publisher to be updated.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToPublisherSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateArrToPublisherSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyright-publishers/{id}": {
            "delete": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Delete a publisher CopyRight",
                "description": "Delete a publisher CopyRight",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Publisher ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/publishers/{publisher_id}": {
            "delete": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Delete a publisher",
                "description": "Delete a publisher",
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "description": "Publisher ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Get publisher details",
                "description": "Get publisher details by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Publisher"
                ],
                "summary": "Update existing publisher.",
                "description": "Update existing publisher.",
                "parameters": [
                    {
                        "name": "publisher_id",
                        "in": "path",
                        "description": "ID of the publisher to be updated.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePublisherSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePublisherSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/rankings/{arrangement_id}": {
            "get": {
                "tags": [
                    "Ranking"
                ],
                "summary": "Get Ranking in Period",
                "description": "Get Ranking in Period",
                "parameters": [
                    {
                        "name": "arrangement_id",
                        "in": "path",
                        "description": "Arrangement ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/resources/{id}": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Get Resource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/resource-types": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Index Resource Types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/resources": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Index Resources",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "search"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "arrangement_id",
                        "in": "query",
                        "description": "Arrangement ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "73318"
                    },
                    {
                        "name": "arrangement_type",
                        "in": "query",
                        "description": "Arrangement Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "F"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/resource-pricing-plans": {
            "post": {
                "tags": [
                    "ResourcePricingPlan"
                ],
                "summary": "Create new resource pricing plan",
                "description": "Create new resource pricing plan",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourcePricingPlanSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourcePricingPlanSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/resource-pricing-plans/{id}": {
            "delete": {
                "tags": [
                    "ResourcePricingPlan"
                ],
                "summary": "Delete resource pricing plan",
                "description": "Delete resource pricing plan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "resource pricing plan id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sales-promo-codes/{code_id}": {
            "get": {
                "tags": [
                    "SalesPromoCode"
                ],
                "summary": "Get Sales Promo Code",
                "parameters": [
                    {
                        "name": "code_id",
                        "in": "path",
                        "description": "Code ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sales-promo-codes": {
            "get": {
                "tags": [
                    "SalesPromoCode"
                ],
                "summary": "Index Sales Promo Codes",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/add-to-queue": {
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Add To Queue",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            "2202",
                                            "23742",
                                            "72414",
                                            "72418",
                                            "73621"
                                        ]
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            "2202",
                                            "23742",
                                            "72414",
                                            "72418",
                                            "73621"
                                        ]
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/calculate/group": {
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Calculate Catalog Item Product Score",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 8
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": 73318
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_group_id": {
                                        "type": "integer",
                                        "example": 8
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/calculate/list": {
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Calculate Catalog Item List Score",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            "2202",
                                            "23742",
                                            "72414",
                                            "72418",
                                            "73621"
                                        ]
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_ids": {
                                        "type": "array",
                                        "example": [
                                            "2202",
                                            "23742",
                                            "72414",
                                            "72418",
                                            "73621"
                                        ]
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/calculate": {
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Calculate Score",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": "70319"
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "catalog_item_id": {
                                        "type": "integer",
                                        "example": "70319"
                                    },
                                    "score_config_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/config": {
            "post": {
                "tags": [
                    "Score"
                ],
                "summary": "Create Score Configuration",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_multipliers": {
                                        "type": "object",
                                        "properties": {
                                            "theme": {
                                                "type": "string",
                                                "example": "Christmas"
                                            },
                                            "multiplier": {
                                                "type": "number",
                                                "example": 0.002
                                            },
                                            "start_day": {
                                                "type": "number",
                                                "example": 26
                                            },
                                            "start_month": {
                                                "type": "number",
                                                "example": 12
                                            },
                                            "end_day": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "end_month": {
                                                "type": "number",
                                                "example": 7
                                            }
                                        }
                                    },
                                    "entity_multipliers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "entity": {
                                                    "type": "string",
                                                    "example": "SongList"
                                                },
                                                "multiplier": {
                                                    "type": "integer",
                                                    "example": 1.6000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "action_values": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    },
                                    "product_groups_value_overrides": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product_group_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 0.5
                                                }
                                            }
                                        }
                                    },
                                    "days_available_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 0.10000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "days_elapsed_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "weight": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_multipliers": {
                                        "type": "object",
                                        "properties": {
                                            "theme": {
                                                "type": "string",
                                                "example": "Christmas"
                                            },
                                            "multiplier": {
                                                "type": "number",
                                                "example": 0.002
                                            },
                                            "start_day": {
                                                "type": "number",
                                                "example": 26
                                            },
                                            "start_month": {
                                                "type": "number",
                                                "example": 12
                                            },
                                            "end_day": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "end_month": {
                                                "type": "number",
                                                "example": 7
                                            }
                                        }
                                    },
                                    "entity_multipliers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "entity": {
                                                    "type": "string",
                                                    "example": "SongList"
                                                },
                                                "multiplier": {
                                                    "type": "integer",
                                                    "example": 1.6000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "action_values": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    },
                                    "product_groups_value_overrides": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product_group_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 0.5
                                                }
                                            }
                                        }
                                    },
                                    "days_available_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 0.10000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "days_elapsed_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "weight": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/config/{id}": {
            "delete": {
                "tags": [
                    "Score"
                ],
                "summary": "Delete Score Config",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Score"
                ],
                "summary": "Get Score Config",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Score"
                ],
                "summary": "Update Score Config",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_multipliers": {
                                        "type": "object",
                                        "properties": {
                                            "theme": {
                                                "type": "string",
                                                "example": "Christmas"
                                            },
                                            "multiplier": {
                                                "type": "number",
                                                "example": 0.002
                                            },
                                            "start_day": {
                                                "type": "number",
                                                "example": 26
                                            },
                                            "start_month": {
                                                "type": "number",
                                                "example": 12
                                            },
                                            "end_day": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "end_month": {
                                                "type": "number",
                                                "example": 7
                                            }
                                        }
                                    },
                                    "entity_multipliers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "entity": {
                                                    "type": "string",
                                                    "example": "SongList"
                                                },
                                                "multiplier": {
                                                    "type": "integer",
                                                    "example": 1.6000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "action_values": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    },
                                    "product_groups_value_overrides": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product_group_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 0.5
                                                }
                                            }
                                        }
                                    },
                                    "days_available_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 0.10000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "days_elapsed_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "weight": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_multipliers": {
                                        "type": "object",
                                        "properties": {
                                            "theme": {
                                                "type": "string",
                                                "example": "Christmas"
                                            },
                                            "multiplier": {
                                                "type": "number",
                                                "example": 0.002
                                            },
                                            "start_day": {
                                                "type": "number",
                                                "example": 26
                                            },
                                            "start_month": {
                                                "type": "number",
                                                "example": 12
                                            },
                                            "end_day": {
                                                "type": "number",
                                                "example": 1
                                            },
                                            "end_month": {
                                                "type": "number",
                                                "example": 7
                                            }
                                        }
                                    },
                                    "entity_multipliers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "entity": {
                                                    "type": "string",
                                                    "example": "SongList"
                                                },
                                                "multiplier": {
                                                    "type": "integer",
                                                    "example": 1.6000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "action_values": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 10
                                                }
                                            }
                                        }
                                    },
                                    "product_groups_value_overrides": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "product_group_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "example": 0.5
                                                }
                                            }
                                        }
                                    },
                                    "days_available_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 0.10000000000000001
                                                }
                                            }
                                        }
                                    },
                                    "days_elapsed_settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "day": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "weight": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "multiplier": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/score/configs": {
            "get": {
                "tags": [
                    "Score"
                ],
                "summary": "Index Score Configs",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-sellable-products": {
            "post": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Create a new CatalogItemToSellableProduct.",
                "description": "Create a new CatalogItemToSellableProduct.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemToSellableProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCatalogItemToSellableProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "List catalog item to sellable products.",
                "description": "List catalog item to sellable products.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "catalog_item_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sellable_product_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "available_at",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expires_at",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maximum_available",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-products": {
            "post": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Create a new SellableProduct.",
                "description": "Create a new SellableProduct.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSellableProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSellableProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "List all sellable products.",
                "description": "List all sellable products including their prices and product groups.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_group_id",
                        "in": "query",
                        "description": "ID of the product group to filter by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status of the sellable product to filter by",
                        "schema": {
                            "enum": [
                                "draft",
                                "active",
                                "inactive"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "credit_msrp",
                        "in": "query",
                        "description": "Credit MSRP of the sellable product to filter by",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "credit_price",
                        "in": "query",
                        "description": "Credit price of the sellable product to filter by",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item-sellable-products/{id}": {
            "delete": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Delete Catalog Item to Sellable Product",
                "description": "Delete Catalog Item to Sellable Product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Update catalog item to sellable product",
                "description": "Update catalog item to sellable product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemToSellableProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCatalogItemToSellableProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-products/{id}": {
            "delete": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Delete Sellable Product",
                "description": "Delete Sellable Product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Get a sellable product by its id.",
                "description": "Get a sellable product by its id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sellable product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Update a sellable product.",
                "description": "Update a sellable product.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sellable product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSellableProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSellableProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item/{id}/sellable-products": {
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "List catalog item to sellable products.",
                "description": "List catalog item to sellable products.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the catalog item.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/catalog-item/{id}/live-sellable-products": {
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "List live catalog item to sellable products.",
                "description": "List live catalog item to sellable products.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the catalog item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-product/{id}/publish-related-catalog-items": {
            "post": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Publish catalog item related to sellable product",
                "description": "Publish catalog item related to sellable product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-product/{id}/catalog-item-count": {
            "get": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Count Sellable Product To Catalog Item",
                "description": "Count Sellable Product To Catalog Item",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-product/{id}/duplicate": {
            "post": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Duplicate a Sellable Product",
                "description": "Duplicate a Sellable Product",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sellable Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-products/swap": {
            "post": {
                "tags": [
                    "SellableProduct"
                ],
                "summary": "Swap sellable product",
                "description": "Swap sellable product",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SwapSellableProductSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwapSellableProductSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-product-prices": {
            "post": {
                "tags": [
                    "SellableProductPrice"
                ],
                "summary": "Create a new SellableProductPrice.",
                "description": "Create a new SellableProductPrice.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSellableProductPriceSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSellableProductPriceSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sellable-product-prices/{id}": {
            "delete": {
                "tags": [
                    "SellableProductPrice"
                ],
                "summary": "Delete a sellable product price.",
                "description": "Delete a sellable product price.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sellable product price id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "SellableProductPrice"
                ],
                "summary": "Get a sellable product price.",
                "description": "Get a sellable product price.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sellable product price id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SellableProductPrice"
                ],
                "summary": "Update a Sellable Product Price.",
                "description": "Update a Sellable Product Price.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "sellable product price id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSellableProductPriceSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSellableProductPriceSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/series/{series_id}": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Get Series",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/series": {
            "get": {
                "tags": [
                    "Series"
                ],
                "summary": "Index Series",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/shipping-methods/costs": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "All Shipping Method Costs",
                "parameters": [
                    {
                        "name": "shipping_address_id",
                        "in": "query",
                        "description": "Shipping Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cart_id",
                        "in": "query",
                        "description": "cart_id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/shipping-methods/index": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Index Shipping Methods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/social-auth/link/{provider}": {
            "post": {
                "tags": [
                    "SocialAuth"
                ],
                "summary": "Link OAuth Identity",
                "description": "Link OAuth Identity to user.",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "enum": [
                                "google",
                                "facebook"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticateByCodeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticateByCodeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/social-auth/login-or-signup/{provider}": {
            "post": {
                "tags": [
                    "SocialAuth"
                ],
                "summary": "Login or signup by authorization code",
                "description": "Login or signup by authorization code",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "enum": [
                                "google",
                                "facebook"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginOrSignupByCodeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginOrSignupByCodeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        },
                                        "tokens": {
                                            "type": "object",
                                            "properties": {
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "personal"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 315360000
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbG..."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/social-auth/unlink/{provider}": {
            "post": {
                "tags": [
                    "SocialAuth"
                ],
                "summary": "Unlink OAuth Identity",
                "description": "Unlink OAuth Identity from user.",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "enum": [
                                "google",
                                "facebook"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnlinkOAuthIdentitySchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnlinkOAuthIdentitySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "object": {
                                                    "type": "string",
                                                    "example": "User"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordClientCredentials": []
                    },
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "/v3/songs/{song_id}": {
            "get": {
                "tags": [
                    "Song"
                ],
                "summary": "Get a song by its id.",
                "description": "Get a song by its id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Song ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/songs": {
            "get": {
                "tags": [
                    "Song"
                ],
                "summary": "Get all songs.",
                "description": "Get all songs.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/song-list": {
            "post": {
                "tags": [
                    "SongList"
                ],
                "summary": "Create a new Song List",
                "description": "Create a new Song List",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSongListSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSongListSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/song-list/{id}": {
            "get": {
                "tags": [
                    "SongList"
                ],
                "summary": "Get a song list.",
                "description": "Get a song list.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the song list.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/lists-jobs": {
            "get": {
                "tags": [
                    "SongList"
                ],
                "summary": "List all song list jobs.",
                "description": "List all song list jobs.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/song-lists": {
            "get": {
                "tags": [
                    "SongList"
                ],
                "summary": "List all songLists.",
                "description": "Show all songLists to the Client.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/song-list/run": {
            "post": {
                "tags": [
                    "SongList"
                ],
                "summary": "Run a songList.",
                "description": "Run a songList to the Client.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RunSongListSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RunSongListSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/song-list/update/{id}": {
            "post": {
                "tags": [
                    "SongList"
                ],
                "summary": "Update a songList.",
                "description": "Update a songList to the Client.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the song list.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSongListSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSongListSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/songsheets/{id}": {
            "get": {
                "tags": [
                    "Songsheet"
                ],
                "summary": "Get Song Sheet",
                "description": "Get Song Sheet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID to get Song Sheet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/songsheet-styles": {
            "get": {
                "tags": [
                    "Songsheet"
                ],
                "summary": "Index Song sheet Styles",
                "description": "Index Song sheet Styles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/sonreignapi/arrangement/{id}/products": {
            "get": {
                "tags": [
                    "SonreignAPI"
                ],
                "summary": "Get Arrangement Products For Sonreign A P I",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Catalog Item Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_token",
                        "in": "query",
                        "description": "The Members Auth token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/sonreignapi/user/download": {
            "get": {
                "tags": [
                    "SonreignAPI"
                ],
                "summary": "Get Download Response For Sonreign A P I",
                "parameters": [
                    {
                        "name": "user_token",
                        "in": "query",
                        "description": "The Members Auth Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ProductID",
                        "in": "query",
                        "description": "The Catalog Item Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Format",
                        "in": "query",
                        "description": "The format of the download",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Options",
                        "in": "query",
                        "description": "The options for the download",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/source": {
            "post": {
                "tags": [
                    "Source"
                ],
                "summary": "Create Source",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "example": "Gateway Church"
                                    },
                                    "duplicate_check": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "example": "Gateway Church"
                                    },
                                    "duplicate_check": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/source/{source_id}": {
            "delete": {
                "tags": [
                    "Source"
                ],
                "summary": "Delete Source",
                "parameters": [
                    {
                        "name": "source_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Source"
                ],
                "summary": "Get Source",
                "parameters": [
                    {
                        "name": "source_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Source"
                ],
                "summary": "Update Source",
                "parameters": [
                    {
                        "name": "source_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "example": "Gateway Church"
                                    },
                                    "duplicate_check": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "source": {
                                        "type": "string",
                                        "example": "Gateway Church"
                                    },
                                    "duplicate_check": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/sources": {
            "get": {
                "tags": [
                    "Source"
                ],
                "summary": "Index Sources",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/stores": {
            "post": {
                "tags": [
                    "Store"
                ],
                "summary": "Create Store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    },
                                    "abbreviation": {
                                        "type": "string",
                                        "example": "CAN"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://www.praisecharts.ca"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    },
                                    "abbreviation": {
                                        "type": "string",
                                        "example": "CAN"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://www.praisecharts.ca"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Index Stores",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/stores/{id}": {
            "delete": {
                "tags": [
                    "Store"
                ],
                "summary": "Delete Store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Store"
                ],
                "summary": "Get Store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Store"
                ],
                "summary": "Update Store",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    },
                                    "abbreviation": {
                                        "type": "string",
                                        "example": "CAN"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://www.praisecharts.ca"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    },
                                    "abbreviation": {
                                        "type": "string",
                                        "example": "CAN"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://www.praisecharts.ca"
                                    },
                                    "company_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "currency_code": {
                                        "type": "string",
                                        "example": "USD"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/styles/{style_id}": {
            "get": {
                "tags": [
                    "Style"
                ],
                "summary": "Get Style",
                "parameters": [
                    {
                        "name": "style_id",
                        "in": "path",
                        "description": "Style ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/styles": {
            "get": {
                "tags": [
                    "Style"
                ],
                "summary": "Index Styles",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/activate": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Activate Library Subscriptions",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/cancel": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Cancel Library Subscriptions",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/subscriptions/change": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Change Library Subscriptions Plan",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "subscription_changes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "library_subscription_id": {
                                                    "type": "integer",
                                                    "example": 37
                                                },
                                                "new_plan_id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "charge_now": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "subscription_changes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "library_subscription_id": {
                                                    "type": "integer",
                                                    "example": 37
                                                },
                                                "new_plan_id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "charge_now": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/charge": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Charge Library Subscriptions",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 37
                                    },
                                    "skip_trial": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "library_subscriptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 37
                                                },
                                                "skip_trial": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 37
                                    },
                                    "skip_trial": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "library_subscriptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 37
                                                },
                                                "skip_trial": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan/credits": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Create Credit Subscription Plan",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "100 Gold Credits"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "100 Gold Credit Monthly Plan"
                                    },
                                    "billing_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "billing_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "billing_price": {
                                        "type": "number",
                                        "example": 129.94999999999999
                                    },
                                    "billing_msrp": {
                                        "type": "number",
                                        "example": 139.94999999999999
                                    },
                                    "fulfillment_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "fulfillment_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "admin_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "grace_unit": {
                                        "type": "string",
                                        "example": "week"
                                    },
                                    "grace_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "trial_unit": {
                                        "type": "string",
                                        "example": "day"
                                    },
                                    "trial_length": {
                                        "type": "number",
                                        "example": 60
                                    },
                                    "trial_price": {
                                        "type": "number",
                                        "example": 69.950000000000003
                                    },
                                    "trial_msrp": {
                                        "type": "number",
                                        "example": 79.950000000000003
                                    },
                                    "fulfillment_qty": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "credit_type": {
                                        "type": "string",
                                        "example": "GS_FULL"
                                    },
                                    "days_active": {
                                        "type": "string",
                                        "example": 33
                                    },
                                    "days_grace": {
                                        "type": "string",
                                        "example": 15
                                    },
                                    "is_renewable": {
                                        "type": "string",
                                        "example": true
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "100 Gold Credits"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "100 Gold Credit Monthly Plan"
                                    },
                                    "billing_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "billing_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "billing_price": {
                                        "type": "number",
                                        "example": 129.94999999999999
                                    },
                                    "billing_msrp": {
                                        "type": "number",
                                        "example": 139.94999999999999
                                    },
                                    "fulfillment_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "fulfillment_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "admin_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "grace_unit": {
                                        "type": "string",
                                        "example": "week"
                                    },
                                    "grace_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "trial_unit": {
                                        "type": "string",
                                        "example": "day"
                                    },
                                    "trial_length": {
                                        "type": "number",
                                        "example": 60
                                    },
                                    "trial_price": {
                                        "type": "number",
                                        "example": 69.950000000000003
                                    },
                                    "trial_msrp": {
                                        "type": "number",
                                        "example": 79.950000000000003
                                    },
                                    "fulfillment_qty": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "credit_type": {
                                        "type": "string",
                                        "example": "GS_FULL"
                                    },
                                    "days_active": {
                                        "type": "string",
                                        "example": 33
                                    },
                                    "days_grace": {
                                        "type": "string",
                                        "example": 15
                                    },
                                    "is_renewable": {
                                        "type": "string",
                                        "example": true
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/subscriptions": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Create Library Subscription",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 600483
                                    },
                                    "library_id": {
                                        "type": "integer",
                                        "example": 600492
                                    },
                                    "subscription_plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "subscription_plans": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            }
                                        }
                                    },
                                    "charge": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-05-22"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "skip_trial": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 600483
                                    },
                                    "library_id": {
                                        "type": "integer",
                                        "example": 600492
                                    },
                                    "subscription_plan_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "subscription_plans": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            }
                                        }
                                    },
                                    "charge": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "example": "2018-05-22"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "skip_trial": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan/seats": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Creates new seat subscription plan. This also creates catalog_items, sellable products, and a catalog_library_seats entry.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "100 Seats Package"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "100 Seats renewed monthly"
                                    },
                                    "billing_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "billing_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fulfillment_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "fulfillment_length": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "admin_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "grace_unit": {
                                        "type": "string",
                                        "example": "week"
                                    },
                                    "grace_length": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "trial_unit": {
                                        "type": "string",
                                        "example": "day"
                                    },
                                    "trial_length": {
                                        "type": "string",
                                        "example": 60
                                    },
                                    "fulfillment_qty": {
                                        "type": "string",
                                        "example": 0
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "100 Seats Package"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "100 Seats renewed monthly"
                                    },
                                    "billing_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "billing_length": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "fulfillment_unit": {
                                        "type": "string",
                                        "example": "month"
                                    },
                                    "fulfillment_length": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "admin_only": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "grace_unit": {
                                        "type": "string",
                                        "example": "week"
                                    },
                                    "grace_length": {
                                        "type": "string",
                                        "example": 1
                                    },
                                    "trial_unit": {
                                        "type": "string",
                                        "example": "day"
                                    },
                                    "trial_length": {
                                        "type": "string",
                                        "example": 60
                                    },
                                    "fulfillment_qty": {
                                        "type": "string",
                                        "example": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/{id}/expire": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Expire Library Subscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/{id}/fulfill": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Fulfill Library Subscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "default id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plans/credit/available": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Available Credit Subscription Plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/report/charge/{date}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Charge Subscription Log for given date.",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plans/credit/{credit_type}/{qty}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Credit Plans",
                "parameters": [
                    {
                        "name": "credit_type",
                        "in": "query",
                        "description": "Credit Type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "qty",
                        "in": "query",
                        "description": "Quantity",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/report/expire/{date}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Expire Subscriptions Report",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/report/fulfill/{date}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Fulfill Subscriptions Report",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get details of a specific library subscription in grouped format",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "admin": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "admin": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plans/seat/{qty}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Seat Plans",
                "parameters": [
                    {
                        "name": "qty",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plans/{id}": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get Subscription Plan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/get/subscriptions": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Get details of a specific library subscription in grouped format",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "admin": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "library_subscription_billing_group_id": {
                                        "type": "string",
                                        "example": 7
                                    },
                                    "admin": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/library/{id}/subscriptions": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Index Library Subscriptions V2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Library ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plans": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Index Subscription Plans",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/refund": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Refund Library Subscriptions",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "example": "2018-05-22"
                                    },
                                    "library_subscriptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 37
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "example": "2018-05-22"
                                    },
                                    "library_subscriptions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 37
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/test/{library_id}/full-reset": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Reset All Subscription Data",
                "parameters": [
                    {
                        "name": "library_id",
                        "in": "path",
                        "description": "Parameter description",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan/{plan_id}/upgrade_options": {
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Set Plan Upgrade Options",
                "parameters": [
                    {
                        "name": "plan_id",
                        "in": "path",
                        "description": "Plan Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "upgrade_options": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "plan_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "position": {
                                                    "type": "integer",
                                                    "example": 7
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "upgrade_options": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "plan_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "position": {
                                                    "type": "integer",
                                                    "example": 7
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/plan/{plan_id}/trial_items": {
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Set Trial Plan Group Items",
                "parameters": [
                    {
                        "name": "plan_id",
                        "in": "path",
                        "description": "Plan Id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "foo": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/test/charge/{date}": {
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Test Charge Subscriptions",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "date",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/test/expire/{date}": {
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Test Expire Subscriptions",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "date",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/test/fulfill/{date}": {
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Test Fulfill Subscriptions",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "date",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/subscriptions/topup": {
            "post": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Top Up Library Subscription",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 1776
                                    },
                                    "topup_catalog_item_id": {
                                        "type": "integer",
                                        "example": 74411
                                    },
                                    "token_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "card_number": {
                                        "type": "integer",
                                        "example": 4124939999999990
                                    },
                                    "card_holder_name": {
                                        "type": "string",
                                        "example": "Owain James"
                                    },
                                    "exp_date": {
                                        "type": "string",
                                        "example": "1222"
                                    },
                                    "cvv2_cvc2": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "billing_first_name": {
                                        "type": "string",
                                        "example": "Owain"
                                    },
                                    "billing_last_name": {
                                        "type": "string",
                                        "example": "James"
                                    },
                                    "billing_address_company": {
                                        "type": "string",
                                        "example": "Lala Inc"
                                    },
                                    "billing_address_city": {
                                        "type": "string",
                                        "example": "Tennessee"
                                    },
                                    "billing_address_state": {
                                        "type": "string",
                                        "example": "TN"
                                    },
                                    "billing_address_country": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "billing_address_line_1": {
                                        "type": "string",
                                        "example": "7300 Chapman Highway"
                                    },
                                    "billing_address_line_2": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "billing_address_zip": {
                                        "type": "string",
                                        "example": "37920"
                                    },
                                    "billing_address_phone": {
                                        "type": "string",
                                        "example": "778-554-8148"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "library_subscription_id": {
                                        "type": "integer",
                                        "example": 1776
                                    },
                                    "topup_catalog_item_id": {
                                        "type": "integer",
                                        "example": 74411
                                    },
                                    "token_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "card_number": {
                                        "type": "integer",
                                        "example": 4124939999999990
                                    },
                                    "card_holder_name": {
                                        "type": "string",
                                        "example": "Owain James"
                                    },
                                    "exp_date": {
                                        "type": "string",
                                        "example": "1222"
                                    },
                                    "cvv2_cvc2": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "billing_first_name": {
                                        "type": "string",
                                        "example": "Owain"
                                    },
                                    "billing_last_name": {
                                        "type": "string",
                                        "example": "James"
                                    },
                                    "billing_address_company": {
                                        "type": "string",
                                        "example": "Lala Inc"
                                    },
                                    "billing_address_city": {
                                        "type": "string",
                                        "example": "Tennessee"
                                    },
                                    "billing_address_state": {
                                        "type": "string",
                                        "example": "TN"
                                    },
                                    "billing_address_country": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "billing_address_line_1": {
                                        "type": "string",
                                        "example": "7300 Chapman Highway"
                                    },
                                    "billing_address_line_2": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "billing_address_zip": {
                                        "type": "string",
                                        "example": "37920"
                                    },
                                    "billing_address_phone": {
                                        "type": "string",
                                        "example": "778-554-8148"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/entity-tag": {
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Attach tags to an entity",
                "description": "Attach tags to an entity. You can attach multiple tags at once.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEntityTagsSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEntityTagsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag from entity",
                "description": "Delete a tag from entity",
                "parameters": [
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "entity type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "query",
                        "description": "entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "tag_id",
                        "in": "query",
                        "description": "tag id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tags": {
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Create a new tag.",
                "description": "Create a new tag.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTagSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTagSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "List all tags.",
                "description": "Show all tags paginated.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hide",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tags/{tag_id}": {
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag",
                "description": "Delete a tag",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "The ID of the tag.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get tag",
                "description": "Get tag",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "The id of the tag.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update tag.",
                "description": "Update tag entity.",
                "parameters": [
                    {
                        "name": "tag_id",
                        "in": "path",
                        "description": "The id of the tag.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/entity-tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Index Entity Tags",
                "parameters": [
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entity_id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tag-types": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "List all Tag Types",
                "description": "List all Tag Types",
                "parameters": [
                    {
                        "name": "entity_type",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tax-exemptions/{id}/approve": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Approve Tax Exemption",
                "description": "Approve Tax Exemption",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Exemption ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/customer-tax-exemption": {
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Create Tax Exemption",
                "description": "Create Tax Exemption",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCustomerTaxExemptionSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCustomerTaxExemptionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tax-exemptions": {
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Create a new tax exemption",
                "description": "Create a new tax exemption",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaxExemptionSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTaxExemptionSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "List all tax exemptions.",
                "description": "Show all tax exemptions paginated.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tax-exemptions/{id}": {
            "delete": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Delete Tax Exemption",
                "description": "Delete Tax Exemption",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Exemption ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get tax exemption",
                "description": "Get tax exemption by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax exemption id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Update a tax exemption.",
                "description": "Update a tax exemption.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tax exemption id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tax-exemptions/{id}/certificate": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Download Tax Exemption Certificate",
                "description": "Download Tax Exemption Certificate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax Exemption ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/customer-tax-exemptions": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "List all tax exemptions",
                "description": "List all tax exemptions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_hidden",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tempos/{tempo_id}": {
            "get": {
                "tags": [
                    "Tempo"
                ],
                "summary": "Get tempo by id.",
                "description": "Show tempo by id.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tempo ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/tempos": {
            "get": {
                "tags": [
                    "Tempo"
                ],
                "summary": "List all tempos.",
                "description": "Show all tempos paginated.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v1/test": {
            "post": {
                "tags": [
                    "Test"
                ],
                "summary": "Test route.",
                "description": "Test route.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    }
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Praisecharts Canada"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Managing the Canadian Store"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/copyright-themes": {
            "post": {
                "tags": [
                    "Theme"
                ],
                "summary": "Create a new theme.",
                "description": "Create a new theme.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToThemeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCopyrightToThemeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/themes": {
            "post": {
                "tags": [
                    "Theme"
                ],
                "summary": "Create a new theme.",
                "description": "Create a new theme.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThemeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateThemeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Theme"
                ],
                "summary": "List all themes.",
                "description": "Show all themes paginated.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hide",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": []
            }
        },
        "/v3/copyright-themes/{id}": {
            "delete": {
                "tags": [
                    "Theme"
                ],
                "summary": "Delete a theme.",
                "description": "Delete a theme.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme ID.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/themes/{theme_id}": {
            "delete": {
                "tags": [
                    "Theme"
                ],
                "summary": "Delete Theme",
                "description": "Delete Theme",
                "parameters": [
                    {
                        "name": "theme_id",
                        "in": "path",
                        "description": "Theme ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Theme"
                ],
                "summary": "Get Theme",
                "description": "Get Theme",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Theme ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Theme"
                ],
                "summary": "Update a theme.",
                "description": "Update a theme.",
                "parameters": [
                    {
                        "name": "theme_id",
                        "in": "path",
                        "description": "Id of the theme to be updated.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateThemeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files/unparsed-file/{catalog_file_id}": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Create parse file",
                "description": "Create parse file",
                "parameters": [
                    {
                        "name": "catalog_file_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Upload"
                ],
                "summary": "Delete unparsed file",
                "description": "Delete unparsed file",
                "parameters": [
                    {
                        "name": "catalog_file_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "Get parse file",
                "description": "Get parse file",
                "parameters": [
                    {
                        "name": "catalog_file_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/index-file-upload-queue": {
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "List all file upload queues.",
                "description": "List all file upload queues.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files/unparsed-files": {
            "get": {
                "tags": [
                    "Upload"
                ],
                "summary": "List all unparsed files",
                "description": "List all unparsed files",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Per Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search Term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_direction",
                        "in": "query",
                        "description": "Order Direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_generated",
                        "in": "query",
                        "description": "Exclude generated files from the results",
                        "schema": {
                            "enum": [
                                0,
                                1
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "assignee_id",
                        "in": "query",
                        "description": "The ID of the user who is assigned to the file",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/files/parse-file/{file_parse_mapping_id}": {
            "patch": {
                "tags": [
                    "Upload"
                ],
                "summary": "Update Parse File",
                "description": "Update Parse File",
                "parameters": [
                    {
                        "name": "file_parse_mapping_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Generate based on mapping",
                "description": "Generate based on mapping",
                "parameters": [
                    {
                        "name": "file_parse_mapping_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/process-queue": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Process Queue",
                "description": "Process Queue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/confirm-upload": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Confirm upload",
                "description": "Confirm upload",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/file-for-parsing": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Upload File For Parsing",
                "description": "Upload File For Parsing",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadFileForParsingSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadFileForParsingSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/migration-file-format": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Upload File",
                "description": "Upload File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/queue": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Add files to queue",
                "description": "Add files to queue",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToQueueSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToQueueSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/songwriter-file-format": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Upload File",
                "description": "Upload File",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/upload/verify-filenames": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Verify File Names",
                "description": "Verify File Names",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/users/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Find a user by its id",
                "description": "Find a user by its id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "description": "Update User from the database.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Get all users from the database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/user/total-titles": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Total titles",
                "description": "Get User Total titles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/user/purchase-history": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Purchase History",
                "description": "Get User Purchase History from the database",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of purchase history",
                        "required": true,
                        "schema": {
                            "enum": [
                                "purchases",
                                "invoices",
                                "memberships"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_days",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/users/{id}/password": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Password",
                "description": "Update User Password from the database.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPasswordSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPasswordSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/web-link": {
            "post": {
                "tags": [
                    "WebLink"
                ],
                "summary": "Create a new WebLink",
                "description": "Create a new WebLink",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWebLinkSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWebLinkSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/web-link/{id}": {
            "delete": {
                "tags": [
                    "WebLink"
                ],
                "summary": "Delete a WebLink",
                "description": "Delete a WebLink",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "WebLink ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        },
        "/v3/web-links": {
            "get": {
                "tags": [
                    "WebLink"
                ],
                "summary": "List all web links.",
                "description": "List all web links of a parent entity.",
                "parameters": [
                    {
                        "name": "parent_entity_type",
                        "in": "query",
                        "description": "The type of the parent entity.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "artist",
                                "profile",
                                "catalog_item"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_entity_id",
                        "in": "query",
                        "description": "The id of the parent entity.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "parent_entity_supplemental_type",
                        "in": "query",
                        "description": "The type of the supplemental parent entity.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_entity_supplemental_id",
                        "in": "query",
                        "description": "The id of the supplemental parent entity.",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "WebLink"
                ],
                "summary": "Update multiple web links.",
                "description": "Update multiple web links of a parent entity.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebLinksSchema"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebLinksSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": []
                        }
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    },
                    {
                        "OAuth2PasswordClientCredentials": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AcctPayeeSchema": {
                "type": "object",
                "properties": {
                    "payee": {
                        "type": "string",
                        "example": "Carlson Record Company"
                    },
                    "payee_type": {
                        "enum": [
                            "A",
                            "M",
                            "Q"
                        ],
                        "type": "string",
                        "example": "A"
                    },
                    "report_payee_name": {
                        "type": "string",
                        "example": "Carlson Record Company"
                    },
                    "contact": {
                        "type": "string",
                        "example": "Carl Carlson"
                    },
                    "company": {
                        "type": "string",
                        "example": "Carlson Record Company"
                    },
                    "address_1": {
                        "type": "string",
                        "example": "123 Fake Street"
                    },
                    "address_2": {
                        "type": "string",
                        "example": "Apt 101"
                    },
                    "city": {
                        "type": "string",
                        "example": "Springfield"
                    },
                    "state": {
                        "type": "string",
                        "example": "CN"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "12345"
                    },
                    "country": {
                        "type": "string",
                        "example": "USA"
                    },
                    "phone": {
                        "type": "string",
                        "example": "(555) 555-1234"
                    },
                    "fax": {
                        "type": "string",
                        "example": "(555) 555-1234"
                    },
                    "email": {
                        "type": "string",
                        "example": "carlcarlsonrecords@praisecharts.com"
                    },
                    "notes": {
                        "type": "string",
                        "example": "The AcctPayee's Admin Notes"
                    },
                    "report_email": {
                        "type": "string",
                        "example": "carlcarlsonrecords@praisecharts.com"
                    },
                    "subscription_email": {
                        "type": "string",
                        "example": "carlcarlsonrecords@praisecharts.com"
                    }
                }
            },
            "CreateAlbumSchema": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "notes": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "sales_link": {
                        "description": "nullable|url",
                        "type": "string"
                    },
                    "iTunes_link": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "sales_link_description": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "description": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "street_date": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "artists": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "approved": {
                        "type": "string"
                    },
                    "cover_image": {
                        "type": "string"
                    },
                    "cover_image_alt": {
                        "type": "string"
                    }
                }
            },
            "UpdateAlbumSchema": {
                "type": "object",
                "properties": {
                    "title": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "notes": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "sales_link": {
                        "description": "nullable|url",
                        "type": "string"
                    },
                    "iTunes_link": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "sales_link_description": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "description": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "street_date": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "cover_image": {
                        "type": "string"
                    },
                    "cover_image_alt": {
                        "type": "string"
                    }
                }
            },
            "CreateAlbumEntrySchema": {
                "type": "object",
                "required": [
                    "album_id",
                    "catalog_item_id"
                ],
                "properties": {
                    "album_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "catalog_item_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "order": {
                        "description": "integer|min:0",
                        "type": "integer"
                    }
                }
            },
            "CreateArrangementSchemas": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Revival Fire Fall"
                    },
                    "tune": {
                        "type": "string",
                        "example": ""
                    },
                    "first_line": {
                        "type": "string",
                        "example": "As we lift up Your name"
                    },
                    "available": {
                        "type": "boolean",
                        "example": true
                    },
                    "show_as_new": {
                        "type": "string",
                        "example": "1969-12-31"
                    },
                    "copyright": {
                        "type": "string",
                        "example": "1996 Integrity's Hosanna! Music"
                    },
                    "meter": {
                        "type": "string",
                        "example": "4/4"
                    },
                    "old_song_id": {
                        "type": "integer",
                        "example": 221
                    },
                    "bpm": {
                        "type": "integer",
                        "example": 72
                    },
                    "pd_id": {
                        "type": "integer",
                        "example": 72
                    },
                    "foreign_ccli": {
                        "type": "integer",
                        "example": "abc123"
                    },
                    "arrangement_id_overide": {
                        "type": "integer",
                        "example": 221
                    }
                }
            },
            "IndexArrangementsSchema": {
                "type": "object",
                "properties": {
                    "arranger_ids": {
                        "description": "max:50",
                        "type": "array"
                    },
                    "artist_ids": {
                        "description": "max:50",
                        "type": "array"
                    },
                    "author_ids": {
                        "description": "max:50",
                        "type": "array"
                    },
                    "publisher_ids": {
                        "description": "max:50",
                        "type": "array"
                    }
                }
            },
            "UpdateArrangementSchemas": {
                "type": "object",
                "properties": {
                    "title": {
                        "description": "nullable|string|max:256",
                        "type": "string"
                    },
                    "tune": {
                        "description": "max:256",
                        "type": "string"
                    },
                    "first_line": {
                        "description": "nullable|string|max:512",
                        "type": "string"
                    },
                    "available": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "show_as_new": {
                        "description": "date",
                        "type": "string"
                    },
                    "copyright": {
                        "description": "string|max:256",
                        "type": "string"
                    },
                    "meter": {
                        "description": "nullable|string|max:128",
                        "type": "string"
                    }
                }
            },
            "RefundArrangementPurchaseSchema": {
                "type": "object",
                "required": [
                    "PurchaseID"
                ],
                "properties": {
                    "LeavePurchase": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "PurchaseID": {
                        "description": "required|integer|exists:arrangementPurchases,PurchaseID",
                        "type": "integer"
                    }
                }
            },
            "CreateArrangerSchema": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "duplicate_check": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "CreateArrToArrangerSchema": {
                "type": "object",
                "required": [
                    "arrangement_id"
                ],
                "properties": {
                    "arrangement_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "arrangers": {
                        "description": "max:100",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "arranger_id"
                            ],
                            "properties": {
                                "arranger_id": {
                                    "description": "required|integer",
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "UpdateArrToArrangerSchema": {
                "type": "object",
                "properties": {
                    "order": {
                        "description": "integer|min:0",
                        "type": "integer"
                    }
                }
            },
            "UpdateArrangerSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "hide": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "ArrToArtistTransformer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "artist_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "arrangement_id": {
                        "type": "integer",
                        "example": 1234
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "Artist": {
                "type": "object",
                "properties": {
                    "artist_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Scooby"
                    },
                    "hide": {
                        "type": "boolean",
                        "example": false
                    },
                    "image": {
                        "type": "string",
                        "example": "content/images/artist/1789_Maranatha_Praise_Band.jpg"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://praisecharts.com/content/images/artist/1789_Maranatha_Praise_Band.jpg"
                    },
                    "profile_id": {
                        "type": "string",
                        "example": 2
                    },
                    "cms_name": {
                        "type": "string",
                        "example": "Doo"
                    }
                }
            },
            "ArtistTransformer": {
                "type": "object",
                "properties": {
                    "order": {
                        "type": "integer",
                        "example": "1"
                    }
                }
            },
            "ArrToArtist": {
                "type": "object",
                "properties": {
                    "arrangement_id": {
                        "type": "integer",
                        "example": 1234
                    },
                    "artists": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "artist_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "RefreshProxyForWebClientSchema": {
                "type": "object",
                "required": [
                    "refresh_token"
                ],
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    }
                }
            },
            "OAuth2ClientCredentialsGrantSchema": {
                "type": "object",
                "required": [
                    "grant_type",
                    "client_id",
                    "client_secret"
                ],
                "properties": {
                    "grant_type": {
                        "enum": [
                            "client_credentials"
                        ],
                        "type": "string"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "client_secret": {
                        "type": "string"
                    },
                    "scope": {
                        "default": "",
                        "type": "string"
                    }
                }
            },
            "OAuth2PasswordGrantSchema": {
                "type": "object",
                "required": [
                    "grant_type",
                    "username",
                    "password",
                    "client_id",
                    "client_secret"
                ],
                "properties": {
                    "grant_type": {
                        "enum": [
                            "password"
                        ],
                        "type": "string"
                    },
                    "username": {
                        "description": "user email",
                        "type": "string",
                        "example": "admin@praisecharts.com"
                    },
                    "password": {
                        "format": "password",
                        "type": "string",
                        "example": "admin"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "client_secret": {
                        "type": "string"
                    },
                    "scope": {
                        "default": "",
                        "type": "string"
                    }
                }
            },
            "SendVerificationEmailSchema": {
                "type": "object",
                "required": [
                    "verification_url"
                ],
                "properties": {
                    "verification_url": {
                        "description": "required|url|in:\"http://newapi.pc.localhost/email/verify\"",
                        "type": "string",
                        "example": "https://example.com/verify-email?token={token}&email={email}"
                    }
                }
            },
            "ForgotPasswordSchema": {
                "type": "object",
                "required": [
                    "email",
                    "reseturl"
                ],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/EmailPropertySchema"
                    },
                    "reseturl": {
                        "enum": [
                            "http://newapi.pc.localhost/password/reset",
                            "http://localhost:8101/password-reset"
                        ],
                        "type": "string",
                        "example": "http://newapi.pc.localhost/password/reset"
                    }
                }
            },
            "EmailPropertySchema": {
                "description": "email",
                "type": "string",
                "example": "admin@praisecharts.com"
            },
            "ResetPasswordSchema": {
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "token"
                ],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/EmailPropertySchema"
                    },
                    "password": {
                        "description": "min:10|max:64|at least one uppercase and one lowercase letter|at least one number|at least one symbol",
                        "format": "password",
                        "type": "string",
                        "example": "p@a$sw0orDd"
                    },
                    "token": {
                        "description": "required",
                        "type": "string"
                    },
                    "login_after_reset": {
                        "description": "If true, the user will be logged in after resetting the password",
                        "type": "boolean"
                    }
                }
            },
            "RegisterUserSchema": {
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "recaptcha_token"
                ],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/EmailPropertySchema"
                    },
                    "password": {
                        "description": "min:10|max:64|at least one uppercase and one lowercase letter|at least one number|at least one symbol",
                        "format": "password",
                        "type": "string",
                        "example": "p@a$sw0orDd"
                    },
                    "name": {
                        "description": "min:2|max:50",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "verification_url": {
                        "enum": [
                            "http://newapi.pc.localhost/email/verify"
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "campaign": {
                        "type": "string",
                        "nullable": true
                    },
                    "recaptcha_token": {
                        "default": "Mt06UhiUAAAAAN3IRTYMd6NOK",
                        "type": "string"
                    }
                }
            },
            "OAuth2RefreshTokenSchema": {
                "type": "object",
                "required": [
                    "grant_type",
                    "refresh_token",
                    "client_id",
                    "client_secret"
                ],
                "properties": {
                    "grant_type": {
                        "enum": [
                            "refresh_token"
                        ],
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "client_secret": {
                        "type": "string"
                    },
                    "scope": {
                        "default": "",
                        "type": "string"
                    }
                }
            },
            "LoginProxyForWebClientSchema": {
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "recaptcha_token"
                ],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/EmailPropertySchema"
                    },
                    "password": {
                        "format": "password",
                        "type": "string",
                        "example": "admin"
                    },
                    "recaptcha_token": {
                        "default": "Mt06UhiUAAAAAN3IRTYMd6NOK",
                        "type": "string"
                    }
                }
            },
            "CreateCopyrightToAuthorSchema": {
                "type": "object",
                "required": [
                    "copyright_id",
                    "authors"
                ],
                "properties": {
                    "copyright_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "author_id"
                            ],
                            "properties": {
                                "author_id": {
                                    "description": "required|integer",
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "UpdateAuthorSchema": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "string|nullable",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "string|nullable",
                        "type": "string"
                    },
                    "artist_id": {
                        "description": "integer|exists:catalog_artists,ArtistID",
                        "type": "integer"
                    },
                    "hide": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "CreateAuthorSchema": {
                "type": "object",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "first_name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "string",
                        "type": "string"
                    },
                    "artist_id": {
                        "description": "integer|exists:catalog_artists,ArtistID",
                        "type": "integer"
                    },
                    "duplicate_check": {
                        "description": "boolean",
                        "type": "integer"
                    }
                }
            },
            "CreateArrToAuthorSchema": {
                "type": "object",
                "required": [
                    "arrangement_id"
                ],
                "properties": {
                    "arrangement_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "author_id"
                            ],
                            "properties": {
                                "author_id": {
                                    "description": "required|integer",
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "UpdateArrToAuthorSchema": {
                "type": "object",
                "properties": {
                    "order": {
                        "description": "integer|min:0",
                        "type": "integer"
                    }
                }
            },
            "DetachPermissionsFromRoleSchema": {
                "type": "object",
                "required": [
                    "permissions_ids",
                    "role_id"
                ],
                "properties": {
                    "permissions_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "role_id": {
                        "description": "required|exists:roles,id",
                        "type": "string"
                    }
                }
            },
            "SyncPermissionOnRoleSchema": {
                "type": "object",
                "required": [
                    "permissions_ids",
                    "role_id"
                ],
                "properties": {
                    "permissions_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "role_id": {
                        "description": "required|exists:roles,id",
                        "type": "string"
                    }
                }
            },
            "AttachPermissionsToRoleSchema": {
                "type": "object",
                "required": [
                    "permissions_ids",
                    "role_id"
                ],
                "properties": {
                    "permissions_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "role_id": {
                        "description": "required|exists:roles,id",
                        "type": "string"
                    }
                }
            },
            "SyncUserRolesSchema": {
                "type": "object",
                "required": [
                    "roles_ids",
                    "user_id"
                ],
                "properties": {
                    "roles_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "user_id": {
                        "description": "required|exists:members,MemberID",
                        "type": "string"
                    }
                }
            },
            "AttachPermissionsToUserSchema": {
                "type": "object",
                "required": [
                    "permissions_ids"
                ],
                "properties": {
                    "permissions_ids": {
                        "description": "array|required",
                        "type": "array"
                    }
                }
            },
            "DetachPermissionsFromUserSchema": {
                "type": "object",
                "required": [
                    "permissions_ids"
                ],
                "properties": {
                    "permissions_ids": {
                        "description": "array|required",
                        "type": "array"
                    }
                }
            },
            "CreateRoleSchema": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "required|unique:roles,name|min:2|max:20|no_spaces",
                        "type": "string"
                    },
                    "description": {
                        "description": "max:255",
                        "type": "string"
                    },
                    "display_name": {
                        "description": "max:100",
                        "type": "string"
                    }
                }
            },
            "RevokeRolesFromUserSchema": {
                "type": "object",
                "required": [
                    "roles_ids",
                    "user_id"
                ],
                "properties": {
                    "roles_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "user_id": {
                        "description": "required|exists:members,MemberID",
                        "type": "string"
                    }
                }
            },
            "AssignRolesToUserSchema": {
                "type": "object",
                "required": [
                    "roles_ids",
                    "user_id"
                ],
                "properties": {
                    "roles_ids": {
                        "description": "array|required",
                        "type": "array"
                    },
                    "user_id": {
                        "description": "required|exists:members,MemberID",
                        "type": "string"
                    }
                }
            },
            "GetQuickBuyDetailsSchema": {
                "type": "object",
                "properties": {
                    "arrangement_id": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "arrangement_type": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "token_id": {
                        "description": "exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "items": {
                        "description": "array",
                        "type": "array"
                    },
                    "date": {
                        "description": "date_format:Y-m-d",
                        "type": "string"
                    },
                    "key_id": {
                        "type": "string"
                    },
                    "billing_address_state": {
                        "type": "string"
                    },
                    "billing_address_country": {
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "type": "string"
                    },
                    "consume_legacy_credits": {
                        "type": "string"
                    }
                }
            },
            "RemoveDuplicateCartItemsSchema": {
                "type": "object",
                "required": [
                    "cart_id"
                ],
                "properties": {
                    "cart_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "user": {
                        "type": "string"
                    }
                }
            },
            "RemoveCartItemSchema": {
                "type": "object",
                "required": [
                    "shopping_cart_detail_id"
                ],
                "properties": {
                    "shopping_cart_detail_id": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "CreateCartItemSchema": {
                "type": "object",
                "required": [
                    "arrangement_id",
                    "quantity"
                ],
                "properties": {
                    "arrangement_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "arrangement_type": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "key_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "print_instructions": {
                        "description": "nullable|in:single_sided_sheets,double_sided_sheets,double_sided_booklet",
                        "enum": [
                            "single_sided_sheets",
                            "double_sided_sheets",
                            "double_sided_booklet"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "description": "in:print_on_demand,digital",
                        "enum": [
                            "print_on_demand",
                            "digital"
                        ],
                        "type": "string"
                    }
                }
            },
            "UpdateCartItemSchema": {
                "type": "object",
                "required": [
                    "shopping_cart_detail_id",
                    "quantity"
                ],
                "properties": {
                    "shopping_cart_detail_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "CreateCatalogGroupItemSchema": {
                "type": "object",
                "required": [
                    "catalog_group_id",
                    "catalog_item_id"
                ],
                "properties": {
                    "catalog_group_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "catalog_item_id": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "CreateCatalogGroupSchema": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "description": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "CompileCatalogItemsSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_ids": {
                        "type": "string"
                    }
                }
            },
            "UpdateCatalogItemImageSchema": {
                "type": "object",
                "properties": {
                    "cover_image": {
                        "type": "string"
                    },
                    "cover_image_alt": {
                        "type": "string"
                    }
                }
            },
            "CreateCatalogItemSchema": {
                "type": "object",
                "required": [
                    "catalog_item_type"
                ],
                "properties": {
                    "catalog_item_type": {
                        "description": "required|in:Arrangement,Reading",
                        "enum": [
                            "Arrangement",
                            "Reading"
                        ],
                        "type": "string"
                    },
                    "language_id": {
                        "type": "integer"
                    },
                    "base_id": {
                        "type": "integer"
                    },
                    "copyright_id": {
                        "type": "integer"
                    },
                    "copy_id": {
                        "type": "integer"
                    }
                }
            },
            "CreateCatalogItemPublishQueueElementSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_id": {
                        "description": "required_without:album_id|integer|exists:catalog_items,id",
                        "type": "integer",
                        "example": 73318
                    },
                    "album_id": {
                        "description": "required_without:catalog_item_id",
                        "type": "integer",
                        "example": 3
                    },
                    "start_at": {
                        "description": "nullable|date",
                        "type": "string",
                        "example": "2023-12-11"
                    },
                    "on_catalog_item_release_date": {
                        "description": "nullable|boolean",
                        "type": "boolean",
                        "example": true
                    },
                    "include_children": {
                        "type": "string",
                        "example": false
                    }
                }
            },
            "CreateCatalogItemRelationSchema": {
                "type": "object",
                "required": [
                    "catalog_item_b_id",
                    "catalog_item_a_id"
                ],
                "properties": {
                    "catalog_item_a_id": {
                        "description": "required|integer|different:catalog_item_b_id",
                        "type": "integer",
                        "example": 73318
                    },
                    "catalog_item_b_id": {
                        "description": "required|integer|different:catalog_item_a_id",
                        "type": "integer",
                        "example": 73319
                    }
                }
            },
            "CreateCatalogItemTitleSchema": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "required|string",
                        "type": "string"
                    }
                }
            },
            "UpdateCatalogItemTitleSchema": {
                "type": "object",
                "properties": {
                    "title": {
                        "description": "string",
                        "type": "string",
                        "example": "Summer Breeze Melody"
                    }
                }
            },
            "CreateCatalogItemLibraryAccessSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_id": {
                        "type": "string",
                        "example": 73318
                    },
                    "license_id": {
                        "type": "string",
                        "example": 1
                    }
                }
            },
            "UpdateContentGroupItemSchema": {
                "type": "object",
                "properties": {
                    "position": {
                        "description": "integer",
                        "type": "integer"
                    }
                }
            },
            "CreateContentGroupItemSchema": {
                "type": "object",
                "required": [
                    "content_group_id",
                    "content_item_name"
                ],
                "properties": {
                    "content_group_id": {
                        "description": "integer|required|exists:content_groups,id",
                        "type": "integer"
                    },
                    "content_item_name": {
                        "description": "string|required|exists:content_items,name",
                        "type": "string"
                    },
                    "position": {
                        "description": "integer",
                        "type": "integer"
                    }
                }
            },
            "CreateContentGroupSchema": {
                "type": "object",
                "required": [
                    "slug",
                    "name"
                ],
                "properties": {
                    "store_id": {
                        "description": "integer|exists:stores,id",
                        "type": "integer"
                    },
                    "state": {
                        "description": "string|in:draft,preview,published,archived",
                        "enum": [
                            "draft",
                            "preview",
                            "published"
                        ],
                        "type": "string"
                    },
                    "language_id": {
                        "description": "integer|exists:catalog_languages,LanguageID",
                        "type": "integer"
                    },
                    "slug": {
                        "description": "string|required|max:64",
                        "type": "string"
                    },
                    "name": {
                        "description": "string|required|max:255",
                        "type": "string"
                    }
                }
            },
            "CreateContentItemSchema": {
                "type": "object",
                "required": [
                    "store_id",
                    "language_id",
                    "content_type"
                ],
                "properties": {
                    "position": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "required|integer|exists:stores,id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "required|integer|exists:catalog_languages,LanguageID",
                        "type": "integer"
                    },
                    "content_type": {
                        "description": "string|required",
                        "type": "string"
                    },
                    "parent_entity_type": {
                        "description": "string|required_with:parent_entity_id|max:32",
                        "type": "string"
                    },
                    "parent_entity_id": {
                        "description": "integer|required_with:parent_entity_type",
                        "type": "integer"
                    },
                    "parent_entity_supplemental_type": {
                        "description": "string|required_with:parent_entity_supplemental_id|max:32",
                        "type": "string"
                    },
                    "parent_entity_supplemental_id": {
                        "description": "integer|required_with:parent_entity_supplemental_type",
                        "type": "integer"
                    },
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "state": {
                        "description": "string|in:draft,published,archived",
                        "enum": [
                            "draft",
                            "published",
                            "archived"
                        ],
                        "type": "string"
                    },
                    "publish_date": {
                        "description": "date_format:Y-m-d H:i:s|nullable",
                        "type": "string"
                    },
                    "unpublish_date": {
                        "description": "date_format:Y-m-d H:i:s|nullable",
                        "type": "string"
                    },
                    "data": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "UpdateContentGroupSchema": {
                "type": "object",
                "properties": {
                    "state": {
                        "description": "string|in:draft,preview,published,archived",
                        "enum": [
                            "draft",
                            "preview",
                            "published"
                        ],
                        "type": "string"
                    },
                    "store_id": {
                        "description": "integer|exists:stores,id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "integer|exists:catalog_languages,LanguageID",
                        "type": "integer"
                    },
                    "slug": {
                        "description": "string|max:64",
                        "type": "string"
                    },
                    "name": {
                        "description": "string|max:255",
                        "type": "string"
                    }
                }
            },
            "UpdateContentItemSchema": {
                "type": "object",
                "properties": {
                    "position": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "integer|exists:stores,id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "integer|exists:catalog_languages,LanguageID",
                        "type": "integer"
                    },
                    "parent_entity_type": {
                        "description": "string|required_with:parent_entity_id|max:32",
                        "type": "string"
                    },
                    "parent_entity_id": {
                        "description": "integer|required_with:parent_entity_type",
                        "type": "integer"
                    },
                    "parent_entity_supplemental_type": {
                        "description": "string|required_with:parent_entity_supplemental_id|max:32",
                        "type": "string"
                    },
                    "parent_entity_supplemental_id": {
                        "description": "integer|required_with:parent_entity_supplemental_type",
                        "type": "integer"
                    },
                    "state": {
                        "description": "string|in:draft,published,archived",
                        "enum": [
                            "draft",
                            "published",
                            "archived"
                        ],
                        "type": "string"
                    },
                    "publish_date": {
                        "description": "date_format:Y-m-d H:i:s|nullable",
                        "type": "string"
                    },
                    "unpublish_date": {
                        "description": "date_format:Y-m-d H:i:s|nullable",
                        "type": "string"
                    },
                    "data": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "CreateCopyrightSchema": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "category": {
                        "description": "in:text,music",
                        "enum": [
                            "text",
                            "music"
                        ],
                        "type": "string",
                        "example": "music"
                    },
                    "title": {
                        "description": "required|string",
                        "type": "string",
                        "example": "Hallelujah"
                    },
                    "copyright": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "© 2017 Praisecharts"
                    },
                    "ccli": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "first_line": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Hallelujah, hallelujah, hallelujah, hallelujah"
                    },
                    "scripture": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Revelation 19:6-8"
                    },
                    "english_title": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Hallelujah"
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "author_id": {
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "publishers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "publisher_id": {
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "themes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "theme_id": {
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "notes": {
                        "type": "string"
                    }
                }
            },
            "UpdateCopyrightSchema": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "category": {
                        "description": "in:text,music",
                        "enum": [
                            "text",
                            "music"
                        ],
                        "type": "string",
                        "example": "music"
                    },
                    "title": {
                        "description": "required|string",
                        "type": "string",
                        "example": "Hallelujah"
                    },
                    "copyright": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "© 2017 Praisecharts"
                    },
                    "ccli": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "first_line": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Hallelujah, hallelujah, hallelujah, hallelujah"
                    },
                    "scripture": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Revelation 19:6-8"
                    },
                    "english_title": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "Hallelujah"
                    },
                    "notes": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "This is a note"
                    }
                }
            },
            "CreateCostAccountingSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "string",
                        "type": "string",
                        "example": "cost_of_creation"
                    },
                    "description": {
                        "description": "integer",
                        "type": "string",
                        "example": "Arranging by Dan Galbraith"
                    },
                    "payable_user_id": {
                        "description": "integer|nullable",
                        "type": "integer",
                        "example": 677624
                    },
                    "catalog_item_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 73318
                    },
                    "product_group_id": {
                        "description": "integer|nullable",
                        "type": "integer",
                        "example": 3
                    },
                    "date": {
                        "description": "date",
                        "type": "string",
                        "example": "2022-10-08 08:02:22"
                    },
                    "currency_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "cost": {
                        "description": "integer",
                        "type": "integer",
                        "example": 20
                    },
                    "cost_usd": {
                        "description": "integer",
                        "type": "number",
                        "example": 17.32
                    }
                }
            },
            "GenerateCostAccountingRecordsSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_id": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "product_group_id": {
                        "description": "integer|nullable",
                        "type": "integer"
                    },
                    "regenerate": {
                        "description": "boolean|nullable",
                        "type": "boolean"
                    }
                }
            },
            "UpdateCostAccountingSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "string",
                        "type": "string",
                        "example": "cost_of_creation"
                    },
                    "description": {
                        "description": "integer",
                        "type": "string",
                        "example": "Arranging by Dan Galbraith"
                    },
                    "payable_user_id": {
                        "description": "integer|nullable",
                        "type": "integer",
                        "example": 677624
                    },
                    "catalog_item_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 73318
                    },
                    "product_group_id": {
                        "description": "integer|nullable",
                        "type": "integer",
                        "example": 3
                    },
                    "date": {
                        "description": "date",
                        "type": "string",
                        "example": "2022-10-08 08:02:22"
                    },
                    "currency_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "cost": {
                        "description": "integer",
                        "type": "integer",
                        "example": 20
                    },
                    "cost_usd": {
                        "description": "integer",
                        "type": "number",
                        "example": 17.32
                    }
                }
            },
            "UpdateCostRuleSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "string",
                        "type": "string",
                        "example": "cost_of_creation"
                    },
                    "description": {
                        "description": "string",
                        "type": "string",
                        "example": "Orchestration Arranging by Daniel Galbraith"
                    },
                    "entity_type": {
                        "description": "string",
                        "type": "string",
                        "example": "arranger"
                    },
                    "entity_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 703
                    },
                    "supplemental_type": {
                        "description": "string",
                        "type": "string",
                        "example": "product_group"
                    },
                    "supplemental_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 3
                    },
                    "currency_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "cost": {
                        "description": "numeric",
                        "type": "number",
                        "example": 20
                    },
                    "order": {
                        "description": "integer",
                        "type": "integer",
                        "example": 0
                    },
                    "start_date": {
                        "type": "string",
                        "example": "2017-10-31 00:00:00"
                    },
                    "end_date": {
                        "type": "string",
                        "example": "2022-10-31 23:59:59"
                    }
                }
            },
            "CreateCostRuleSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "string",
                        "type": "string",
                        "example": "cost_of_creation"
                    },
                    "description": {
                        "description": "string",
                        "type": "string",
                        "example": "Orchestration Arranging by Daniel Galbraith"
                    },
                    "entity_type": {
                        "description": "string",
                        "type": "string",
                        "example": "arranger"
                    },
                    "entity_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 703
                    },
                    "supplemental_type": {
                        "description": "string",
                        "type": "string",
                        "example": "product_group"
                    },
                    "supplemental_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 3
                    },
                    "currency_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "cost": {
                        "description": "numeric",
                        "type": "number",
                        "example": 20
                    },
                    "order": {
                        "description": "integer",
                        "type": "integer",
                        "example": 0
                    },
                    "start_date": {
                        "type": "string",
                        "example": "2017-10-31 00:00:00"
                    },
                    "end_date": {
                        "type": "string",
                        "example": "2022-10-31 23:59:59"
                    }
                }
            },
            "UpdateEmailTemplateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "previewText": {
                        "description": "string",
                        "type": "string"
                    },
                    "status": {
                        "description": "string|in:template,draft,published",
                        "enum": [
                            "template",
                            "draft",
                            "published"
                        ],
                        "type": "string"
                    },
                    "emailSections": {
                        "type": "string"
                    }
                }
            },
            "CreateEmailTemplateSchema": {
                "type": "object",
                "required": [
                    "name",
                    "status",
                    "emailSections"
                ],
                "properties": {
                    "name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "previewText": {
                        "description": "string",
                        "type": "string"
                    },
                    "status": {
                        "description": "required|string|in:template,draft,published",
                        "enum": [
                            "template",
                            "draft",
                            "published"
                        ],
                        "type": "string"
                    },
                    "emailSections": {
                        "type": "string"
                    }
                }
            },
            "BuildEmailSchema": {
                "type": "object",
                "properties": {
                    "template": {
                        "type": "object",
                        "properties": {
                            "emailSections": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hasHeaderParagraph": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "headerParagraph": {
                                            "type": "string",
                                            "example": "Amidst the soft glow of twilight, some bullshit happened."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ExternalIdSchema": {
                "type": "object",
                "properties": {
                    "parent_entity_type": {
                        "description": "string",
                        "type": "string",
                        "example": "catalog_item"
                    },
                    "parent_entity_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 8
                    },
                    "parent_entity_supplemental_type": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "product_group"
                    },
                    "parent_entity_supplemental_id": {
                        "description": "nullable|integer",
                        "type": "integer",
                        "example": 8
                    },
                    "key": {
                        "description": "string",
                        "type": "string",
                        "example": "upc"
                    },
                    "value": {
                        "description": "string",
                        "type": "string",
                        "example": 123456789012
                    },
                    "value_data_type": {
                        "description": "string",
                        "type": "string",
                        "example": "string"
                    },
                    "owner_entity_type": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "payee"
                    },
                    "owner_entity_id": {
                        "description": "nullable|integer",
                        "type": "integer",
                        "example": 840
                    }
                }
            },
            "ApplyGridToCatalogItemSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_id": {
                        "description": "integer",
                        "type": "integer",
                        "example": 70319
                    }
                }
            },
            "CreateGridSellableSchema": {
                "type": "object",
                "properties": {
                    "grid_id": {
                        "description": "integer|exists:grid,id",
                        "type": "integer",
                        "example": 1
                    },
                    "sellable_product_id": {
                        "description": "integer|exists:sellable_products,id",
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "DeleteGridSellableSchema": {
                "type": "object",
                "properties": {
                    "grid_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "entity_id": {
                        "type": "integer",
                        "example": 78827
                    },
                    "entity_type": {
                        "type": "string",
                        "example": "catalog_item"
                    }
                }
            },
            "CreateGridSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string",
                        "example": "Template Grid"
                    }
                }
            },
            "GridSellableSchema": {
                "type": "object",
                "properties": {
                    "grid_id": {
                        "type": "string",
                        "example": 1
                    },
                    "sellable_product_id": {
                        "type": "string",
                        "example": 1
                    }
                }
            },
            "CreateGridToEntitiesSchema": {
                "type": "object",
                "properties": {
                    "grid_id": {
                        "description": "integer|exists:grid,id",
                        "type": "integer",
                        "example": 1
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "entity_id": {
                                    "type": "integer",
                                    "example": 78827
                                },
                                "entity_type": {
                                    "type": "string",
                                    "example": "catalog_item"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateGridSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "DeleteGridEntitychema": {
                "type": "object",
                "properties": {
                    "grid_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "entity_id": {
                        "type": "integer",
                        "example": 78827
                    },
                    "entity_type": {
                        "type": "string",
                        "example": "catalog_item"
                    }
                }
            },
            "TestGridEmailSchema": {
                "type": "object",
                "properties": {
                    "catalog_item_id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "CreateLicenseBlocklistEntrySchema": {
                "type": "object",
                "properties": {
                    "license_type": {
                        "type": "string"
                    },
                    "license_id": {
                        "type": "string"
                    },
                    "entity_type": {
                        "type": "string"
                    },
                    "entity_id": {
                        "type": "string"
                    },
                    "supplemental_type": {
                        "type": "string"
                    },
                    "supplemental_id": {
                        "type": "string"
                    }
                }
            },
            "CalculatePoolsSchema": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "string"
                    },
                    "months": {
                        "description": "array|min:1|max:12",
                        "type": "array"
                    },
                    "license_types": {
                        "description": "array",
                        "type": "array"
                    }
                }
            },
            "RegeneratePoolsCommissionsSchema": {
                "type": "object",
                "required": [
                    "payout_frequency_value",
                    "year",
                    "payee_type"
                ],
                "properties": {
                    "payout_frequency_value": {
                        "description": "required|integer|min:1|max:12",
                        "type": "integer"
                    },
                    "year": {
                        "description": "required|date_format:Y",
                        "type": "integer"
                    },
                    "payee_type": {
                        "description": "required|in:A,M",
                        "enum": [
                            "A",
                            "M"
                        ],
                        "type": "string"
                    }
                }
            },
            "RevokeRoleSchema": {
                "type": "object",
                "required": [
                    "role_name"
                ],
                "properties": {
                    "role_name": {
                        "description": "required|exists:roles,name",
                        "type": "string"
                    }
                }
            },
            "GrantRoleSchema": {
                "type": "object",
                "required": [
                    "role_name"
                ],
                "properties": {
                    "role_name": {
                        "description": "required|exists:roles,name",
                        "type": "string"
                    }
                }
            },
            "UpdateMemberSchema": {
                "type": "object",
                "properties": {
                    "Email": {
                        "description": "string",
                        "type": "string"
                    },
                    "AltEmail": {
                        "description": "string|nullable",
                        "type": "string"
                    },
                    "Name": {
                        "description": "string|max:50",
                        "type": "string"
                    },
                    "LName": {
                        "description": "string|max:50",
                        "type": "string"
                    },
                    "AltName": {
                        "description": "string|max:50|nullable",
                        "type": "string"
                    },
                    "Organization": {
                        "description": "string|max:100|nullable",
                        "type": "string"
                    },
                    "CCLI": {
                        "description": "string|max:25|nullable",
                        "type": "string"
                    },
                    "PhoneNo": {
                        "description": "string|max:20",
                        "type": "string"
                    },
                    "AltPhoneNo": {
                        "description": "string|max:20|nullable",
                        "type": "string"
                    },
                    "Fax": {
                        "description": "string|max:20|nullable",
                        "type": "string"
                    },
                    "Address": {
                        "description": "string|max:100|nullable",
                        "type": "string"
                    },
                    "City": {
                        "description": "string|max:100|nullable",
                        "type": "string"
                    },
                    "State": {
                        "description": "string|nullable|min:2|max:3",
                        "type": "string"
                    },
                    "Zip": {
                        "description": "string|max:10|nullable",
                        "type": "string"
                    },
                    "Country": {
                        "description": "string|max:2",
                        "type": "string"
                    },
                    "Password": {
                        "description": "string|min:6",
                        "type": "string"
                    }
                }
            },
            "UpdateTestStatusSchema": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "required|boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    }
                }
            },
            "CreateMemberPropertySchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "description": "string",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "sometimes|integer",
                        "type": "integer"
                    },
                    "library_id": {
                        "description": "sometimes|integer",
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "UpdateMemberPropertySchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "key": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "value": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "CreateCreditRefundMembershipSchema": {
                "type": "object",
                "required": [
                    "member_id",
                    "credit_type",
                    "credit_qty",
                    "days_active",
                    "is_renewable",
                    "days_grace",
                    "purchase_price",
                    "currency"
                ],
                "properties": {
                    "member_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "credit_type": {
                        "description": "required|string|in:GS_LIGHT,GS_FULL,GS_RETAIL,PC2_LIGHT,PC2_FULL,PRO",
                        "enum": [
                            "GS_LIGHT",
                            "GS_FULL",
                            "GS_RETAIL",
                            "PC2_LIGHT",
                            "PC2_FULL",
                            "PRO"
                        ],
                        "type": "string"
                    },
                    "credit_qty": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "days_active": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "is_renewable": {
                        "description": "required|boolean",
                        "type": "boolean"
                    },
                    "days_grace": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "purchase_price": {
                        "description": "required|numeric",
                        "type": "number"
                    },
                    "currency": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "UpdateMembershipSchema": {
                "type": "object",
                "properties": {
                    "ExpiryDate": {
                        "description": "date",
                        "type": "string"
                    },
                    "GraceDate": {
                        "description": "date",
                        "type": "string"
                    },
                    "Active": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "UpdateMembershipProductSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "string",
                        "type": "string"
                    },
                    "credit_type": {
                        "description": "string|in:GS_FULL,GS_LIGHT,GS_RETAIL",
                        "enum": [
                            "GS_LIGHT",
                            "GS_FULL",
                            "GS_RETAIL"
                        ],
                        "type": "string"
                    },
                    "credit_qty": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "days_grace": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "days_active": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "price": {
                        "description": "numeric",
                        "type": "number"
                    },
                    "msrp": {
                        "description": "numeric",
                        "type": "number"
                    },
                    "available": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "renewable": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "store_id": {
                        "type": "string"
                    },
                    "catalog_groups": {
                        "type": "string"
                    }
                }
            },
            "CreateMembershipProductSchema": {
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "credit_type",
                    "credit_qty",
                    "days_grace",
                    "days_active",
                    "is_renewable",
                    "store_id",
                    "price",
                    "msrp",
                    "available"
                ],
                "properties": {
                    "name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "description": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "credit_type": {
                        "description": "required|string|in:GS_LIGHT,GS_FULL,GS_RETAIL",
                        "enum": [
                            "GS_LIGHT",
                            "GS_FULL",
                            "GS_RETAIL"
                        ],
                        "type": "string"
                    },
                    "credit_qty": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "days_grace": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "days_active": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "is_renewable": {
                        "description": "required|boolean",
                        "type": "boolean"
                    },
                    "store_id": {
                        "description": "required|in:1",
                        "enum": [
                            "1"
                        ],
                        "type": "string"
                    },
                    "price": {
                        "description": "required|numeric",
                        "type": "number"
                    },
                    "msrp": {
                        "description": "required|numeric",
                        "type": "number"
                    },
                    "available": {
                        "description": "required|boolean",
                        "type": "boolean"
                    },
                    "membership_groups": {
                        "type": "string"
                    },
                    "catalog_groups": {
                        "type": "string"
                    }
                }
            },
            "UpdatePayeeGroupSchema": {
                "type": "object",
                "required": [
                    "payees.*.payee_id",
                    "payees"
                ],
                "properties": {
                    "name": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "payees": {
                        "description": "required",
                        "type": "string"
                    },
                    "payees.*.payee_id": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "CreatePayeeGroupSchema": {
                "type": "object",
                "required": [
                    "payees.*.payee_id",
                    "payees"
                ],
                "properties": {
                    "name": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "payees": {
                        "description": "required",
                        "type": "string"
                    },
                    "payees.*.payee_id": {
                        "description": "required|integer|exists:acct2_payees,PayeeID",
                        "type": "integer"
                    },
                    "type": {
                        "description": "in:\"monthly\",\"quarterly\"",
                        "enum": [
                            "monthly",
                            "quarterly"
                        ],
                        "type": "string"
                    }
                }
            },
            "SetDefaultPaymentMethodSchema": {
                "type": "object",
                "required": [
                    "TokenID"
                ],
                "properties": {
                    "TokenID": {
                        "description": "required|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    }
                }
            },
            "CreateCreditCardTokenSchema": {
                "type": "object",
                "required": [
                    "card_number",
                    "card_holder_name",
                    "exp_date",
                    "cvv2_cvc2",
                    "billing_address_line_1",
                    "billing_address_zip",
                    "recaptcha_token"
                ],
                "properties": {
                    "card_number": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "card_holder_name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "exp_date": {
                        "description": "required",
                        "type": "string"
                    },
                    "cvv2_cvc2": {
                        "description": "required",
                        "type": "string"
                    },
                    "billing_first_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_last_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_company": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_city": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_state": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_line_1": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "billing_address_line_2": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "description": "required",
                        "type": "string"
                    },
                    "default": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "force": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "recaptcha_token": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "billing_address_phone": {
                        "type": "string"
                    }
                }
            },
            "PayPalExecuteAgreementSchema": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "default": {
                        "type": "string"
                    }
                }
            },
            "PayInvoiceSchema": {
                "type": "object",
                "required": [
                    "invoice_id"
                ],
                "properties": {
                    "invoice_id": {
                        "description": "required|exists:invoices,InvoiceID",
                        "type": "integer"
                    },
                    "token_id": {
                        "description": "nullable|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "card_number": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "card_holder_name": {
                        "description": "string",
                        "type": "string"
                    },
                    "billing_first_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_last_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_company": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_city": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_state": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_line_1": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_line_2": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "billing_address_phone": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "PayPalCreateAgreementTokenSchema": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "cancel_url": {
                        "type": "string"
                    },
                    "return_url": {
                        "type": "string"
                    }
                }
            },
            "PayByChequeSchema": {
                "type": "object",
                "required": [
                    "billing_address_country",
                    "billing_address_phone"
                ],
                "properties": {
                    "cart_id": {
                        "description": "required_without:arrangement_id|exists:shoppingCart,CartID",
                        "type": "integer"
                    },
                    "arrangement_id": {
                        "description": "required_without:cart_id|exists:catalog_items,id",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "required_without:cart_id|integer",
                        "type": "integer"
                    },
                    "billing_address_state": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "required",
                        "type": "string"
                    },
                    "billing_address_phone": {
                        "description": "required",
                        "type": "string"
                    },
                    "billing_first_name": {
                        "type": "string"
                    },
                    "billing_last_name": {
                        "type": "string"
                    },
                    "billing_address_company": {
                        "type": "string"
                    },
                    "billing_address_city": {
                        "type": "string"
                    },
                    "billing_address_line_1": {
                        "type": "string"
                    },
                    "billing_address_line_2": {
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "type": "string"
                    }
                }
            },
            "GetTaxAndShippingInformationSchema": {
                "type": "object",
                "required": [
                    "cart_id"
                ],
                "properties": {
                    "token_id": {
                        "description": "required_without:billing_address_state,billing_address_country|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "cart_id": {
                        "description": "required|exists:shoppingCart,CartID",
                        "type": "integer"
                    },
                    "billing_address_state": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    },
                    "shipping_method_id": {
                        "description": "sometimes|required|exists:shipping_methods,id",
                        "type": "integer"
                    },
                    "shipping_address_id": {
                        "description": "sometimes|required|exists:addresses,id",
                        "type": "integer"
                    }
                }
            },
            "QuickBuySchema": {
                "type": "object",
                "required": [
                    "recaptcha_token"
                ],
                "properties": {
                    "token_id": {
                        "description": "sometimes|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "force": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "recaptcha_token": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "items": {
                        "description": "array",
                        "type": "array"
                    },
                    "billing_address_country": {
                        "type": "string"
                    },
                    "billing_address_state": {
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "type": "string"
                    },
                    "arrangement_id": {
                        "type": "string"
                    },
                    "arrangement_type": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "key_id": {
                        "type": "string"
                    }
                }
            },
            "GetTaxInformationSchema": {
                "type": "object",
                "required": [
                    "cart_id"
                ],
                "properties": {
                    "token_id": {
                        "description": "required_without:billing_address_state,billing_address_country|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "cart_id": {
                        "description": "required|exists:shoppingCart,CartID",
                        "type": "integer"
                    },
                    "billing_address_state": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "description": "required_without:token_id|nullable|string",
                        "type": "string"
                    }
                }
            },
            "PaymentPaySchema": {
                "type": "object",
                "required": [
                    "cart_id"
                ],
                "properties": {
                    "token_id": {
                        "description": "nullable|exists:member_payment_tokens,TokenID",
                        "type": "integer"
                    },
                    "cart_id": {
                        "description": "required|exists:shoppingCart,CartID",
                        "type": "integer"
                    },
                    "card_number": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "card_holder_name": {
                        "description": "string",
                        "type": "string"
                    },
                    "billing_first_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_last_name": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_company": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_city": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_state": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_country": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_line_1": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_line_2": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "billing_address_zip": {
                        "description": "nullable",
                        "type": "string"
                    },
                    "billing_address_phone": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "GeneratePayoutSchema": {
                "type": "object",
                "required": [
                    "payee_id"
                ],
                "properties": {
                    "payee_id": {
                        "description": "required|exists:acct2_payees,PayeeID",
                        "type": "integer"
                    },
                    "payout_frequency_value": {
                        "type": "string"
                    },
                    "year": {
                        "type": "string"
                    }
                }
            },
            "GenerateManyPayoutsSchema": {
                "type": "object",
                "required": [
                    "payees"
                ],
                "properties": {
                    "payees": {
                        "description": "required|array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "payee_id": {
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "UpdatePayoutRuleSchema": {
                "type": "object",
                "properties": {
                    "rule_name": {
                        "description": "string",
                        "type": "string"
                    },
                    "rule_description": {
                        "description": "string",
                        "type": "string"
                    },
                    "custom_rule": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "payout_group_id": {
                        "description": "integer|exists:acct2_payout_groups,PayoutGroupID",
                        "type": "integer"
                    },
                    "rule_notes": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "deprecated": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    }
                }
            },
            "CreatePayoutRuleSchema": {
                "type": "object",
                "required": [
                    "rule_name",
                    "rule_description",
                    "payout_group_id"
                ],
                "properties": {
                    "rule_name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "rule_description": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "custom_rule": {
                        "description": "nullable|boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "payout_group_id": {
                        "description": "required|integer|exists:acct2_payout_groups,PayoutGroupID",
                        "type": "integer"
                    },
                    "rule_note": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "CreatePayoutRuleDetailSchema": {
                "type": "object",
                "required": [
                    "rule_id",
                    "rate",
                    "start_date",
                    "percentage",
                    "payout_type_id"
                ],
                "properties": {
                    "rule_id": {
                        "description": "required|exists:acct2_payout_rules,RuleID",
                        "type": "integer"
                    },
                    "rate": {
                        "description": "required|numeric",
                        "type": "number"
                    },
                    "start_date": {
                        "description": "required|date_format:Y-m-d",
                        "type": "string"
                    },
                    "end_date": {
                        "description": "nullable|date_format:Y-m-d",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "required|numeric|max:100",
                        "type": "number"
                    },
                    "payout_type_id": {
                        "description": "required|integer|exists:acct2_payout_type_desc,PayoutTypeDescID",
                        "type": "integer"
                    },
                    "product_group_ids": {
                        "description": "array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "id"
                            ],
                            "properties": {
                                "id": {
                                    "description": "required|integer|exists:product_groups,id",
                                    "type": "integer",
                                    "example": "1"
                                }
                            }
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "operator_value": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "physical_print_rate": {
                        "type": "string"
                    },
                    "physical_print_payout_type_desc_id": {
                        "type": "string"
                    }
                }
            },
            "UpdatePayoutRuleDetailSchema": {
                "type": "object",
                "properties": {
                    "rate": {
                        "description": "numeric",
                        "type": "number"
                    },
                    "start_date": {
                        "description": "date_format:Y-m-d",
                        "type": "string"
                    },
                    "end_date": {
                        "description": "nullable|date_format:Y-m-d",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "numeric|max:100",
                        "type": "number"
                    },
                    "payout_type_id": {
                        "description": "integer|exists:acct2_payout_type_desc,PayoutTypeDescID",
                        "type": "integer"
                    },
                    "add_product_group_ids": {
                        "description": "array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "id"
                            ],
                            "properties": {
                                "id": {
                                    "description": "required|integer|exists:product_groups,id",
                                    "type": "integer",
                                    "example": "1"
                                }
                            }
                        }
                    },
                    "delete_product_group_ids": {
                        "description": "array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "id"
                            ],
                            "properties": {
                                "id": {
                                    "description": "required|integer|exists:product_groups,id",
                                    "type": "integer",
                                    "example": "1"
                                }
                            }
                        }
                    }
                }
            },
            "CreatePlanAccessSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "string",
                        "type": "string"
                    },
                    "billing_unit": {
                        "description": "string",
                        "type": "string"
                    },
                    "billing_length": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "billing_price": {
                        "description": "numeric",
                        "type": "integer"
                    },
                    "billing_msrp": {
                        "description": "numeric",
                        "type": "integer"
                    },
                    "is_active": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "admin_only": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "grace_unit": {
                        "description": "string",
                        "type": "string"
                    },
                    "grace_length": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "trial_unit": {
                        "description": "string",
                        "type": "string"
                    },
                    "trial_length": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "trial_price": {
                        "description": "numeric",
                        "type": "integer"
                    },
                    "trial_msrp": {
                        "description": "numeric",
                        "type": "integer"
                    },
                    "license_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "trial_license_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "license_seat_qty": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "integer",
                        "type": "integer"
                    },
                    "billing_plan_group_id": {
                        "description": "integer",
                        "type": "integer"
                    }
                }
            },
            "CreateProductTypeSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "UpdateProductTypeSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "AttachEntityToProfileSchema": {
                "type": "object",
                "required": [
                    "entity_type",
                    "entity_id"
                ],
                "properties": {
                    "entity_type": {
                        "description": "required|in:artist,author,arranger,publisher",
                        "enum": [
                            "artist",
                            "author",
                            "arranger",
                            "publisher"
                        ],
                        "type": "string"
                    },
                    "entity_id": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "UpdateProfileSchema": {
                "type": "object",
                "required": [
                    "profile_id"
                ],
                "properties": {
                    "profile_id": {
                        "description": "required|exists:catalog_profiles,id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "position": {
                        "description": "",
                        "type": "string"
                    },
                    "approved": {
                        "description": "string|in:true,false",
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string"
                    },
                    "biography": {
                        "description": "",
                        "type": "string"
                    },
                    "profile_image": {
                        "description": "image",
                        "type": "string"
                    }
                }
            },
            "CreateProfileSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "position": {
                        "description": "",
                        "type": "string"
                    },
                    "approved": {
                        "description": "string|in:true,false",
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string"
                    },
                    "biography": {
                        "description": "",
                        "type": "string"
                    },
                    "profile_image": {
                        "description": "image",
                        "type": "string"
                    },
                    "entity_type": {
                        "description": "string|in:artist,author,arranger,publisher",
                        "enum": [
                            "artist",
                            "author",
                            "arranger",
                            "publisher"
                        ],
                        "type": "string"
                    },
                    "entity_id": {
                        "description": "required_with:entity_type|integer",
                        "type": "integer"
                    }
                }
            },
            "DetachEntityFromProfileSchema": {
                "type": "object",
                "required": [
                    "entity_type",
                    "entity_id"
                ],
                "properties": {
                    "entity_type": {
                        "description": "required|in:artist,author,arranger,publisher",
                        "enum": [
                            "artist",
                            "author",
                            "arranger",
                            "publisher"
                        ],
                        "type": "string"
                    },
                    "entity_id": {
                        "description": "required|integer",
                        "type": "integer"
                    }
                }
            },
            "CreatePublisherSchema": {
                "type": "object",
                "required": [
                    "publisher"
                ],
                "properties": {
                    "publisher": {
                        "description": "required|string",
                        "type": "string"
                    }
                }
            },
            "CreateCopyrightToPublisherSchema": {
                "type": "object",
                "required": [
                    "copyright_id"
                ],
                "properties": {
                    "copyright_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "publishers": {
                        "description": "required|max:100",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "publisher_id"
                            ],
                            "properties": {
                                "publisher_id": {
                                    "description": "required|integer",
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "CreateArrToPublisherSchema": {
                "type": "object",
                "required": [
                    "arrangement_id"
                ],
                "properties": {
                    "arrangement_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "publishers": {
                        "description": "max:100",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "publisher_id"
                            ],
                            "properties": {
                                "publisher_id": {
                                    "description": "required|integer",
                                    "type": "integer",
                                    "example": 1
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    }
                }
            },
            "UpdateArrToPublisherSchema": {
                "type": "object",
                "properties": {
                    "order": {
                        "description": "integer|min:0",
                        "type": "integer"
                    }
                }
            },
            "UpdatePublisherSchema": {
                "type": "object",
                "properties": {
                    "publisher": {
                        "description": "string",
                        "type": "string"
                    },
                    "hide": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "CreateResourcePricingPlanSchema": {
                "type": "object",
                "required": [
                    "catalog_item_id"
                ],
                "properties": {
                    "catalog_item_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "plan_id": {
                        "description": "nullable|integer|in:1,2,3",
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "integer"
                    }
                }
            },
            "UpdateSellableProductSchema": {
                "type": "object",
                "properties": {
                    "product_group_id": {
                        "description": "integer|exists:product_groups,id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "string",
                        "type": "string"
                    },
                    "description": {
                        "description": "string",
                        "type": "string"
                    },
                    "status": {
                        "description": "nullable|in:active,inactive",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "type": "string"
                    },
                    "credit_msrp": {
                        "description": "nullable|numeric|min:0",
                        "type": "number"
                    },
                    "credit_price": {
                        "description": "nullable|numeric|min:0",
                        "type": "number"
                    },
                    "royalty_mode": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "admin_description": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "UpdateCatalogItemToSellableProductSchema": {
                "type": "object",
                "properties": {
                    "order": {
                        "description": "nullable|integer|min:0",
                        "type": "integer"
                    },
                    "status": {
                        "description": "nullable|string|in:active,inactive",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "type": "string"
                    },
                    "available_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "expires_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "maximum_available": {
                        "description": "nullable|integer|min:0",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    }
                }
            },
            "CreateSellableProductSchema": {
                "type": "object",
                "required": [
                    "product_group_id",
                    "name"
                ],
                "properties": {
                    "product_group_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "description": {
                        "description": "string",
                        "type": "string"
                    },
                    "credit_msrp": {
                        "description": "nullable|numeric|min:0",
                        "type": "number"
                    },
                    "credit_price": {
                        "description": "nullable|numeric|min:0",
                        "type": "number"
                    },
                    "royalty_mode": {
                        "description": "nullable|string",
                        "type": "string"
                    },
                    "admin_description": {
                        "description": "nullable|string",
                        "type": "string"
                    }
                }
            },
            "CreateCatalogItemToSellableProductSchema": {
                "type": "object",
                "required": [
                    "sellable_product_id"
                ],
                "properties": {
                    "catalog_item_id": {
                        "description": "required_without:catalog_item_ids",
                        "type": "integer"
                    },
                    "sellable_product_id": {
                        "description": "required",
                        "type": "integer"
                    },
                    "order": {
                        "description": "nullable|integer|min:0",
                        "type": "integer"
                    },
                    "available_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "expires_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "maximum_available": {
                        "description": "nullable|integer|min:0",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "required",
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "catalog_item_ids": {
                        "description": "required_without:catalog_item_id|array",
                        "type": "array"
                    },
                    "order_to_one": {
                        "description": "boolean",
                        "type": "boolean"
                    },
                    "set_same_group_sellables_to_inactive": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "SwapSellableProductSchema": {
                "type": "object",
                "required": [
                    "from_sellable_product_id",
                    "confirm"
                ],
                "properties": {
                    "from_sellable_product_id": {
                        "description": "required|exists:sellable_products,id",
                        "type": "integer"
                    },
                    "to_sellable_product_id": {
                        "description": "exists:sellable_products,id",
                        "type": "integer"
                    },
                    "confirm": {
                        "description": "required|boolean",
                        "type": "boolean"
                    },
                    "catalog_item_ids": {
                        "description": "nullable|array",
                        "type": "array"
                    },
                    "set_from_inactive": {
                        "description": "nullable|boolean",
                        "type": "boolean"
                    },
                    "set_from_order_one": {
                        "description": "nullable|boolean",
                        "type": "boolean"
                    },
                    "set_to_available_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "set_to_expires_at": {
                        "description": "nullable|date",
                        "type": "string"
                    },
                    "set_to_maximum_available": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "set_to_order": {
                        "description": "nullable|integer",
                        "type": "integer"
                    }
                }
            },
            "CreateSellableProductPriceSchema": {
                "type": "object",
                "required": [
                    "sellable_product_id",
                    "store_id",
                    "price",
                    "msrp",
                    "credit_price",
                    "credit_msrp",
                    "base_copies"
                ],
                "properties": {
                    "sellable_product_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "required|integer|exists:stores,id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "price": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "msrp": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "credit_price": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "credit_msrp": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "base_copies": {
                        "description": "required|integer|min:0",
                        "type": "integer"
                    },
                    "multi_copy": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "copy_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_credit_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_credit_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "digital_download": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "print_on_demand": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "min_pod_qty": {
                        "description": "integer|min:0",
                        "type": "integer"
                    },
                    "pod_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_credit_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_credit_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "license_ppd_distribution_amounts": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "{   \"distribution\": [     {       \"amount\":\"100\"     },     {       \"amount\":\"200\"     }   ] }"
                    }
                }
            },
            "UpdateSellableProductPriceSchema": {
                "type": "object",
                "required": [
                    "credit_price",
                    "credit_msrp"
                ],
                "properties": {
                    "store_id": {
                        "description": "integer|exists:stores,id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "nullable|integer",
                        "type": "integer"
                    },
                    "price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "credit_price": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "credit_msrp": {
                        "description": "required|numeric|min:0",
                        "type": "number"
                    },
                    "base_copies": {
                        "description": "integer|min:0",
                        "type": "integer"
                    },
                    "multi_copy": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "copy_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_credit_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "copy_credit_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "digital_download": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "print_on_demand": {
                        "description": "boolean",
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string"
                    },
                    "min_pod_qty": {
                        "description": "integer|min:0",
                        "type": "integer"
                    },
                    "pod_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_credit_msrp": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "pod_credit_price": {
                        "description": "numeric|min:0",
                        "type": "number"
                    },
                    "license_ppd_distribution_amounts": {
                        "description": "nullable|string",
                        "type": "string",
                        "example": "{   \"distribution\": [     {       \"amount\":\"100\"     },     {       \"amount\":\"200\"     }   ] }"
                    }
                }
            },
            "AuthenticateByCodeSchema": {
                "type": "object",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "required|string",
                        "type": "string"
                    }
                }
            },
            "LoginOrSignupByCodeSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "required_if:access_token,null|string",
                        "type": "string"
                    },
                    "access_token": {
                        "description": "required_if:code,null|string",
                        "type": "string"
                    },
                    "email": {
                        "description": "email|unique:members,email",
                        "type": "string",
                        "nullable": true
                    },
                    "redirect_url": {
                        "description": "string|in:\"http://newapi.pc.localhost/callback/facebook\",\"http://newapi.pc.localhost/callback/google\",\"https://stage.praisecharts.com\",\"https://stageapi.praisecharts.com\",\"https://stagecpanel.praisecharts.com\",\"https://pc-local.ngrok.io\",\"https://devcpanel.praisecharts.com\",\"https://devapi.praisecharts.com\",\"https://dev.praisecharts.com\",\"http://localhost\",\"http://127.0.0.1\",\"http://pc.localhost\",\"http://newapi.pc.localhost\"",
                        "enum": [
                            "http://newapi.pc.localhost/callback/facebook",
                            "http://newapi.pc.localhost/callback/google",
                            "https://stage.praisecharts.com",
                            "https://stageapi.praisecharts.com",
                            "https://stagecpanel.praisecharts.com",
                            "https://pc-local.ngrok.io",
                            "https://devcpanel.praisecharts.com",
                            "https://devapi.praisecharts.com",
                            "https://dev.praisecharts.com",
                            "http://localhost",
                            "http://127.0.0.1",
                            "http://pc.localhost",
                            "http://newapi.pc.localhost"
                        ],
                        "type": "string"
                    }
                }
            },
            "UnlinkOAuthIdentitySchema": {
                "type": "object",
                "required": [
                    "social_id"
                ],
                "properties": {
                    "social_id": {
                        "description": "string",
                        "type": "string"
                    }
                }
            },
            "UpdateSongListSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string",
                        "example": "Top 20 Sales by Day"
                    },
                    "query": {
                        "description": "string",
                        "type": "string",
                        "example": "SELECT catalog_items.id AS catalog_item_id, null as product_group_id FROM catalog_items WHERE catalog_item_type = 'Arrangement' LIMIT 10"
                    },
                    "query_type": {
                        "description": "in:\"mysql\",\"elastic\"",
                        "enum": [
                            "mysql",
                            "elastic"
                        ],
                        "type": "string",
                        "example": "mysql"
                    },
                    "next_run_at": {
                        "description": "nullable|date_format:Y-m-d H:i:s",
                        "type": "string",
                        "example": "2023-07-31 00:00:00"
                    },
                    "frequency": {
                        "description": "in:\"hourly\",\"daily\",\"weekly\",\"monthly\",\"quarterly\",\"yearly\",\"never\"",
                        "enum": [
                            "hourly",
                            "daily",
                            "weekly",
                            "monthly",
                            "quarterly",
                            "yearly",
                            "never"
                        ],
                        "type": "string",
                        "example": "daily"
                    },
                    "update_period_start_month": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_start_day": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_end_month": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_end_day": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "set_frequency_never_date": {
                        "description": "nullable|date_format:Y-m-d H:i:s",
                        "type": "string",
                        "example": "2023-10-26 00:00:00"
                    },
                    "status": {
                        "description": "string",
                        "type": "string",
                        "example": "enabled"
                    },
                    "state": {
                        "description": "string",
                        "type": "string",
                        "example": "publish"
                    },
                    "database_type": {
                        "description": "string",
                        "type": "string",
                        "example": "mysql"
                    },
                    "admin_name": {
                        "description": "string",
                        "type": "string",
                        "example": "Songs of lalalala"
                    },
                    "url_slug": {
                        "description": "string",
                        "type": "string",
                        "example": "songs-of-hope-for-lalalala"
                    },
                    "description": {
                        "description": "string",
                        "type": "string",
                        "example": "<p>In the first week of <a href=\"/advent\">advent</a>, we focus on hope. The birth of Jesus is our hope incarnate, a redefining hope forever. Here is a list of <a href=\"/christmas\">Christmas worship songs</a> with the theme of hope. See more themes on <a href=\"/song-lists/songs-of-peace-for-advent-week-2\">peace</a>, <a href=\"/song-lists/songs-of-love-for-advent-week-3\">love</a>, and <a href=\"/song-lists/songs-of-joy-for-advent-week-4\">joy</a>.&nbsp;</p>"
                    },
                    "keywords": {
                        "description": "string",
                        "type": "string",
                        "example": "hope"
                    }
                }
            },
            "RunSongListSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 20
                    }
                }
            },
            "CreateSongListSchema": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "string",
                        "type": "string",
                        "example": "Top 20 Sales by Day"
                    },
                    "query": {
                        "description": "string",
                        "type": "string",
                        "example": "SELECT catalog_items.id AS catalog_item_id, null as product_group_id FROM catalog_items WHERE catalog_item_type = 'Arrangement' LIMIT 10"
                    },
                    "query_type": {
                        "description": "in:\"mysql\",\"elastic\"",
                        "enum": [
                            "mysql",
                            "elastic"
                        ],
                        "type": "string",
                        "example": "mysql"
                    },
                    "next_run_at": {
                        "description": "nullable|date_format:Y-m-d H:i:s",
                        "type": "string",
                        "example": "2023-07-31 00:00:00"
                    },
                    "frequency": {
                        "description": "in:\"hourly\",\"daily\",\"weekly\",\"monthly\",\"quarterly\",\"yearly\",\"never\"",
                        "enum": [
                            "hourly",
                            "daily",
                            "weekly",
                            "monthly",
                            "quarterly",
                            "yearly",
                            "never"
                        ],
                        "type": "string",
                        "example": "daily"
                    },
                    "update_period_start_month": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_start_day": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_end_month": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "update_period_end_day": {
                        "description": "integer",
                        "type": "integer",
                        "example": 1
                    },
                    "set_frequency_never_date": {
                        "description": "nullable|date_format:Y-m-d H:i:s",
                        "type": "string",
                        "example": "2023-10-26 00:00:00"
                    },
                    "status": {
                        "description": "string",
                        "type": "string",
                        "example": 1
                    },
                    "state": {
                        "description": "string",
                        "type": "string",
                        "example": "enabled"
                    },
                    "database_type": {
                        "description": "string",
                        "type": "string",
                        "example": "mysql"
                    },
                    "admin_name": {
                        "description": "string",
                        "type": "string",
                        "example": "Songs of lalalala"
                    },
                    "url_slug": {
                        "description": "string",
                        "type": "string",
                        "example": "songs-of-hope-for-lalalala"
                    },
                    "description": {
                        "description": "string",
                        "type": "string",
                        "example": "<p>In the first week of <a href=\"/advent\">advent</a>, we focus on hope. The birth of Jesus is our hope incarnate, a redefining hope forever. Here is a list of <a href=\"/christmas\">Christmas worship songs</a> with the theme of hope. See more themes on <a href=\"/song-lists/songs-of-peace-for-advent-week-2\">peace</a>, <a href=\"/song-lists/songs-of-love-for-advent-week-3\">love</a>, and <a href=\"/song-lists/songs-of-joy-for-advent-week-4\">joy</a>.&nbsp;</p>"
                    },
                    "keywords": {
                        "description": "string",
                        "type": "string",
                        "example": "hope"
                    }
                }
            },
            "CreateTagSchema": {
                "type": "object",
                "required": [
                    "tag"
                ],
                "properties": {
                    "admin_name": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "type": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "sub_type": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "parent_tag_id": {
                        "description": "nullable|integer",
                        "type": "string"
                    },
                    "global_parent_tag_id": {
                        "description": "nullable|integer",
                        "type": "string"
                    }
                }
            },
            "UpdateTagSchema": {
                "type": "object",
                "properties": {
                    "tag": {
                        "description": "string",
                        "type": "string"
                    },
                    "hide": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "CreateEntityTagsSchema": {
                "type": "object",
                "required": [
                    "entity_type",
                    "entity_id",
                    "tags"
                ],
                "properties": {
                    "entity_type": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "entity_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "tags": {
                        "description": "required|array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "integer|exists:tags,id",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "CreateCustomerTaxExemptionSchema": {
                "type": "object",
                "required": [
                    "state_code",
                    "file"
                ],
                "properties": {
                    "organization_name": {
                        "description": "string|max:64",
                        "type": "string"
                    },
                    "state_code": {
                        "description": "string|required|max:2",
                        "type": "string"
                    },
                    "expiry_date": {
                        "description": "nullable|date_format:Y-m-d",
                        "type": "string"
                    },
                    "certification_code": {
                        "description": "string|max:32",
                        "type": "string"
                    },
                    "file": {
                        "description": "required|mimes:pdf",
                        "type": "string"
                    }
                }
            },
            "CreateTaxExemptionSchema": {
                "type": "object",
                "required": [
                    "member_id",
                    "state_code",
                    "expiry_date"
                ],
                "properties": {
                    "member_id": {
                        "description": "required|exists:members,MemberID",
                        "type": "integer"
                    },
                    "organization_name": {
                        "description": "string|max:64",
                        "type": "string"
                    },
                    "state_code": {
                        "description": "string|required|max:2",
                        "type": "string"
                    },
                    "expiry_date": {
                        "description": "required|date_format:Y-m-d",
                        "type": "string"
                    },
                    "certification_code": {
                        "description": "string|max:32",
                        "type": "string"
                    }
                }
            },
            "CreateCopyrightToThemeSchema": {
                "type": "object",
                "required": [
                    "copyright_id",
                    "themes"
                ],
                "properties": {
                    "copyright_id": {
                        "description": "required|integer",
                        "type": "integer"
                    },
                    "themes": {
                        "description": "required|max:100",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "theme_id"
                            ],
                            "properties": {
                                "theme_id": {
                                    "description": "required|integer",
                                    "type": "integer"
                                },
                                "order": {
                                    "description": "min:0|integer",
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "CreateThemeSchema": {
                "type": "object",
                "required": [
                    "theme"
                ],
                "properties": {
                    "theme": {
                        "description": "required|string",
                        "type": "string"
                    }
                }
            },
            "UpdateThemeSchema": {
                "type": "object",
                "properties": {
                    "theme": {
                        "description": "string",
                        "type": "string"
                    },
                    "hide": {
                        "description": "boolean",
                        "type": "boolean"
                    }
                }
            },
            "UploadFileForParsingSchema": {
                "type": "object",
                "properties": {
                    "assignee_id": {
                        "type": "string"
                    },
                    "catalog_item_id": {
                        "type": "string"
                    }
                }
            },
            "AddToQueueSchema": {
                "type": "object",
                "properties": {
                    "force_manual_parse": {
                        "type": "string"
                    },
                    "assignee_id": {
                        "type": "string"
                    },
                    "catalog_item_id": {
                        "type": "string"
                    }
                }
            },
            "UserTransformerSchema": {
                "type": "object",
                "properties": {
                    "object": {
                        "type": "string",
                        "example": "User"
                    },
                    "id": {
                        "type": "string",
                        "example": "5z3v5g"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@doe.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "example": "2021-08-18T15:00:00.000000Z"
                    }
                }
            },
            "UpdateUserSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "min:2|max:50",
                        "type": "string"
                    }
                }
            },
            "UserTransformerIncludesSchema": {
                "type": "array",
                "items": {
                    "enum": [
                        "roles",
                        "permissions"
                    ],
                    "type": "string"
                }
            },
            "UpdateUserPasswordSchema": {
                "type": "object",
                "required": [
                    "new_password"
                ],
                "properties": {
                    "current_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                }
            },
            "CreateWebLinkSchema": {
                "type": "object",
                "required": [
                    "parent_entity_type",
                    "parent_entity_id",
                    "link_type",
                    "link_text",
                    "link_url"
                ],
                "properties": {
                    "parent_entity_type": {
                        "description": "required|string|in:artist,profile,catalog_item",
                        "enum": [
                            "artist",
                            "profile",
                            "catalog_item"
                        ],
                        "type": "string"
                    },
                    "parent_entity_id": {
                        "description": "required|numeric",
                        "type": "number"
                    },
                    "parent_entity_supplemental_type": {
                        "description": "string",
                        "type": "string"
                    },
                    "parent_entity_supplemental_id": {
                        "description": "numeric|required_with:parent_entity_supplemental_type",
                        "type": "number"
                    },
                    "link_type": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "link_text": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "link_url": {
                        "description": "required|string",
                        "type": "string"
                    },
                    "position": {
                        "description": "integer",
                        "type": "integer"
                    }
                }
            },
            "UpdateWebLinksSchema": {
                "type": "object",
                "properties": {
                    "web_links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "required|numeric|exists:web_links,id",
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "parent_entity_type": {
                        "description": "string|in:artist,profile,catalog_item",
                        "enum": [
                            "artist",
                            "profile",
                            "catalog_item"
                        ],
                        "type": "string"
                    },
                    "parent_entity_id": {
                        "description": "numeric",
                        "type": "number"
                    },
                    "link_text": {
                        "description": "string",
                        "type": "string"
                    },
                    "link_url": {
                        "description": "string",
                        "type": "string"
                    },
                    "position": {
                        "description": "integer",
                        "type": "integer",
                        "required": [
                            "id"
                        ]
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "http",
                "scheme": "bearer"
            },
            "OAuth2PasswordClientCredentials": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://newapi.pc.localhost/oauth2/authorize",
                        "tokenUrl": "http://newapi.pc.localhost/oauth2/grants/password/token",
                        "refreshUrl": "http://newapi.pc.localhost/oauth2/refresh",
                        "scopes": {
                            "read": "Read access",
                            "write": "Write access"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "BearerToken": []
        },
        {
            "OAuth2PasswordClientCredentials": []
        }
    ],
    "tags": [
        {
            "name": "Address",
            "description": "Address operations",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "AcctPayee",
            "description": "AcctPayee operations"
        },
        {
            "name": "Artist",
            "description": "Artist operations"
        },
        {
            "name": "Authentication",
            "description": "Authentication operations"
        },
        {
            "name": "Arrangement",
            "description": "Arrangement operations"
        },
        {
            "name": "Album",
            "description": "Album operations"
        },
        {
            "name": "Authorization",
            "description": "Authorization operations"
        },
        {
            "name": "AdminUser",
            "description": "AdminUser operations"
        },
        {
            "name": "Author",
            "description": "Author operations"
        },
        {
            "name": "Arranger",
            "description": "Arranger operations"
        },
        {
            "name": "ArrangementPurchase",
            "description": "ArrangementPurchase operations"
        },
        {
            "name": "CatalogItemPublishQueueElement",
            "description": "CatalogItemPublishQueueElement operations"
        },
        {
            "name": "CatalogItemRelation",
            "description": "CatalogItemRelation operations"
        },
        {
            "name": "CatalogItemTitle",
            "description": "CatalogItemTitle operations"
        },
        {
            "name": "CatalogLibraryAccess",
            "description": "CatalogLibraryAccess operations"
        },
        {
            "name": "CatalogProduct",
            "description": "CatalogProduct operations"
        },
        {
            "name": "Cart",
            "description": "Cart operations"
        },
        {
            "name": "CatalogGroup",
            "description": "CatalogGroup operations"
        },
        {
            "name": "CatalogItem",
            "description": "CatalogItem operations"
        },
        {
            "name": "EmailWizard",
            "description": "EmailWizard operations"
        },
        {
            "name": "ExternalId",
            "description": "ExternalId operations"
        },
        {
            "name": "File",
            "description": "File operations"
        },
        {
            "name": "Grid",
            "description": "Grid operations"
        },
        {
            "name": "GuitarChord",
            "description": "GuitarChord operations"
        },
        {
            "name": "Chordpro",
            "description": "Chordpro operations"
        },
        {
            "name": "Company",
            "description": "Company operations"
        },
        {
            "name": "Content",
            "description": "Content operations"
        },
        {
            "name": "Copyright",
            "description": "Copyright operations"
        },
        {
            "name": "Cost",
            "description": "Cost operations"
        },
        {
            "name": "CostRule",
            "description": "CostRule operations"
        },
        {
            "name": "Country",
            "description": "Country operations"
        },
        {
            "name": "Currency",
            "description": "Currency operations"
        },
        {
            "name": "ElasticSearch",
            "description": "ElasticSearch operations"
        },
        {
            "name": "Invoice",
            "description": "Invoice operations"
        },
        {
            "name": "Library",
            "description": "Library operations"
        },
        {
            "name": "Key",
            "description": "Key operations"
        },
        {
            "name": "Language",
            "description": "Language operations"
        },
        {
            "name": "Payout",
            "description": "Payout operations"
        },
        {
            "name": "Payment",
            "description": "Payment operations"
        },
        {
            "name": "PayeeGroup",
            "description": "PayeeGroup operations"
        },
        {
            "name": "PayeeCommission",
            "description": "PayeeCommission operations"
        },
        {
            "name": "Part",
            "description": "Part operations"
        },
        {
            "name": "Notification",
            "description": "Notification operations"
        },
        {
            "name": "Member",
            "description": "Member operations"
        },
        {
            "name": "Membership",
            "description": "Membership operations"
        },
        {
            "name": "MemberProperty",
            "description": "MemberProperty operations"
        },
        {
            "name": "MemberLogin",
            "description": "MemberLogin operations"
        },
        {
            "name": "Lyrics",
            "description": "Lyrics operations"
        },
        {
            "name": "LicenseRoyalty",
            "description": "LicenseRoyalty operations"
        },
        {
            "name": "LicenseBlocklistEntity",
            "description": "LicenseBlocklistEntity operations"
        },
        {
            "name": "LibrarySeat",
            "description": "LibrarySeat operations"
        },
        {
            "name": "SocialAuth",
            "description": "Social Authentication operations"
        },
        {
            "name": "Song",
            "description": "Song operations"
        },
        {
            "name": "Song",
            "description": "Song operations"
        },
        {
            "name": "SellableProductPrice",
            "description": "SellableProductPrice operations"
        },
        {
            "name": "SellableProduct",
            "description": "SellableProduct operations"
        },
        {
            "name": "Songsheet",
            "description": "Songsheet operations"
        },
        {
            "name": "Test",
            "description": "Test operations"
        },
        {
            "name": "ResourcePricingPlan",
            "description": "ResourcePricingPlan operations"
        },
        {
            "name": "Ranking",
            "description": "Ranking operations"
        },
        {
            "name": "Publisher",
            "description": "Publisher operations"
        },
        {
            "name": "Profile",
            "description": "Profile operations"
        },
        {
            "name": "ProductType",
            "description": "ProductType operations"
        },
        {
            "name": "Price Test",
            "description": "PayoutTest operations"
        },
        {
            "name": "PayoutRuleDetail",
            "description": "PayoutRuleDetail operations"
        },
        {
            "name": "PayoutRule",
            "description": "PayoutRule operations"
        },
        {
            "name": "User",
            "description": "User operations"
        },
        {
            "name": "Upload",
            "description": "Upload operations"
        },
        {
            "name": "Tag",
            "description": "Tag operations"
        },
        {
            "name": "Taxes",
            "description": "Taxes operations"
        },
        {
            "name": "Tempo",
            "description": "Tempo operations"
        },
        {
            "name": "Theme",
            "description": "Theme operations"
        },
        {
            "name": "WebLink",
            "description": "WebLink operations"
        }
    ]
}